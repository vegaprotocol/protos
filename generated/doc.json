{
  "files": [
    {
      "name": "vega/assets.proto",
      "description": "",
      "package": "vega",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Asset",
          "longName": "Asset",
          "fullName": "vega.Asset",
          "description": "The Vega representation of an external asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Internal identifier of the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "details",
              "description": "The definition of the external source for this asset",
              "label": "",
              "type": "AssetDetails",
              "longType": "AssetDetails",
              "fullType": "vega.AssetDetails",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetDetails",
          "longName": "AssetDetails",
          "fullName": "vega.AssetDetails",
          "description": "The Vega representation of an external asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the asset (e.g: Great British Pound)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "symbol",
              "description": "Symbol of the asset (e.g: GBP)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_supply",
              "description": "Total circulating supply for the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "decimals",
              "description": "Number of decimal / precision handled by this asset",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quantum",
              "description": "The minimum economically meaningful amount in the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "builtin_asset",
              "description": "A built-in asset",
              "label": "",
              "type": "BuiltinAsset",
              "longType": "BuiltinAsset",
              "fullType": "vega.BuiltinAsset",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source",
              "defaultValue": ""
            },
            {
              "name": "erc20",
              "description": "An Ethereum ERC20 asset",
              "label": "",
              "type": "ERC20",
              "longType": "ERC20",
              "fullType": "vega.ERC20",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BuiltinAsset",
          "longName": "BuiltinAsset",
          "fullName": "vega.BuiltinAsset",
          "description": "A Vega internal asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "max_faucet_amount_mint",
              "description": "Maximum amount that can be requested by a party through the built-in asset faucet at a time",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20",
          "longName": "ERC20",
          "fullName": "vega.ERC20",
          "description": "An ERC20 token based asset, living on the ethereum network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "contract_address",
              "description": "The address of the contract for the token, on the ethereum network",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/chain_events.proto",
      "description": "",
      "package": "vega",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "AddValidator",
          "longName": "AddValidator",
          "fullName": "vega.AddValidator",
          "description": "A message to notify when a new validator is being added to the Vega network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The identifier of the validator",
              "label": "",
              "type": "Identifier",
              "longType": "Identifier",
              "fullType": "vega.Identifier",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BTCDeposit",
          "longName": "BTCDeposit",
          "fullName": "vega.BTCDeposit",
          "description": "A Bitcoin deposit into Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "The Vega network internal identifier of the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "source_btc_address",
              "description": "The BTC wallet initiating the deposit",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_party_id",
              "description": "The Vega party identifier (pub-key) which is the target of the deposit",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BTCEvent",
          "longName": "BTCEvent",
          "fullName": "vega.BTCEvent",
          "description": "An event from the Bitcoin network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "index",
              "description": "The index of the transaction",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "The block in which the transaction happened",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "deposit",
              "description": "Deposit BTC asset",
              "label": "",
              "type": "BTCDeposit",
              "longType": "BTCDeposit",
              "fullType": "vega.BTCDeposit",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "withdrawal",
              "description": "Withdraw BTC asset",
              "label": "",
              "type": "BTCWithdrawal",
              "longType": "BTCWithdrawal",
              "fullType": "vega.BTCWithdrawal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BTCWithdrawal",
          "longName": "BTCWithdrawal",
          "fullName": "vega.BTCWithdrawal",
          "description": "A Bitcoin withdrawal from Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "The vega network internal identifier of the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "source_party_id",
              "description": "The party identifier (pub-key) initiating the withdrawal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_btc_address",
              "description": "Target Bitcoin wallet address",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference_nonce",
              "description": "The nonce reference of the transaction",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BitcoinAddress",
          "longName": "BitcoinAddress",
          "fullName": "vega.BitcoinAddress",
          "description": "Used as a wrapper for a Bitcoin address (wallet)",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "A Bitcoin address",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BuiltinAssetDeposit",
          "longName": "BuiltinAssetDeposit",
          "fullName": "vega.BuiltinAssetDeposit",
          "description": "A deposit for a Vega built-in asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "A Vega network internal asset identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "A Vega party identifier (pub-key)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount to be deposited",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BuiltinAssetEvent",
          "longName": "BuiltinAssetEvent",
          "fullName": "vega.BuiltinAssetEvent",
          "description": "An event related to a Vega built-in asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "deposit",
              "description": "Built-in asset deposit",
              "label": "",
              "type": "BuiltinAssetDeposit",
              "longType": "BuiltinAssetDeposit",
              "fullType": "vega.BuiltinAssetDeposit",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "withdrawal",
              "description": "Built-in asset withdrawal",
              "label": "",
              "type": "BuiltinAssetWithdrawal",
              "longType": "BuiltinAssetWithdrawal",
              "fullType": "vega.BuiltinAssetWithdrawal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BuiltinAssetWithdrawal",
          "longName": "BuiltinAssetWithdrawal",
          "fullName": "vega.BuiltinAssetWithdrawal",
          "description": "A withdrawal for a Vega built-in asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "A Vega network internal asset identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "A Vega network party identifier (pub-key)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount to be withdrawn",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20AssetDelist",
          "longName": "ERC20AssetDelist",
          "fullName": "vega.ERC20AssetDelist",
          "description": "An asset deny-listing for an ERC20 token",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "The Vega network internal identifier of the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20AssetList",
          "longName": "ERC20AssetList",
          "fullName": "vega.ERC20AssetList",
          "description": "An asset allow-listing for an ERC20 token",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "The Vega network internal identifier of the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20Deposit",
          "longName": "ERC20Deposit",
          "fullName": "vega.ERC20Deposit",
          "description": "An asset deposit for an ERC20 token",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "The vega network internal identifier of the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "source_ethereum_address",
              "description": "The Ethereum wallet that initiated the deposit",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_party_id",
              "description": "The Vega party identifier (pub-key) which is the target of the deposit",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount to be deposited",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20Event",
          "longName": "ERC20Event",
          "fullName": "vega.ERC20Event",
          "description": "An event related to an ERC20 token",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "index",
              "description": "Index of the log in the transaction",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "The block in which the transaction was added",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_list",
              "description": "List an ERC20 asset",
              "label": "",
              "type": "ERC20AssetList",
              "longType": "ERC20AssetList",
              "fullType": "vega.ERC20AssetList",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "asset_delist",
              "description": "De-list an ERC20 asset",
              "label": "",
              "type": "ERC20AssetDelist",
              "longType": "ERC20AssetDelist",
              "fullType": "vega.ERC20AssetDelist",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "deposit",
              "description": "Deposit ERC20 asset",
              "label": "",
              "type": "ERC20Deposit",
              "longType": "ERC20Deposit",
              "fullType": "vega.ERC20Deposit",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "withdrawal",
              "description": "Withdraw ERC20 asset",
              "label": "",
              "type": "ERC20Withdrawal",
              "longType": "ERC20Withdrawal",
              "fullType": "vega.ERC20Withdrawal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20Withdrawal",
          "longName": "ERC20Withdrawal",
          "fullName": "vega.ERC20Withdrawal",
          "description": "An asset withdrawal for an ERC20 token",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "The Vega network internal identifier of the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_ethereum_address",
              "description": "The target Ethereum wallet address",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference_nonce",
              "description": "The reference nonce used for the transaction",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthereumAddress",
          "longName": "EthereumAddress",
          "fullName": "vega.EthereumAddress",
          "description": "Used as a wrapper for an Ethereum address (wallet/contract)",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "An Ethereum address",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Identifier",
          "longName": "Identifier",
          "fullName": "vega.Identifier",
          "description": "Used as a wrapper type on any possible network address supported by Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "ethereum_address",
              "description": "Ethereum network",
              "label": "",
              "type": "EthereumAddress",
              "longType": "EthereumAddress",
              "fullType": "vega.EthereumAddress",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "identifier",
              "defaultValue": ""
            },
            {
              "name": "bitcoin_address",
              "description": "Bitcoin network",
              "label": "",
              "type": "BitcoinAddress",
              "longType": "BitcoinAddress",
              "fullType": "vega.BitcoinAddress",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "identifier",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RemoveValidator",
          "longName": "RemoveValidator",
          "fullName": "vega.RemoveValidator",
          "description": "A message to notify when a validator is being removed from the Vega network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The identifier of the validator",
              "label": "",
              "type": "Identifier",
              "longType": "Identifier",
              "fullType": "vega.Identifier",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeDeposited",
          "longName": "StakeDeposited",
          "fullName": "vega.StakeDeposited",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ethereum_address",
              "description": "Ethereum Address of the user depositing stake (hex encode with 0x prefix)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_public_key",
              "description": "The public of the party receiving the stake deposit (hex encode)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount deposited (base 10)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "The time at which the block was produced\nwill be used to inform the core at what time\nthe stake started to be available.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeRemoved",
          "longName": "StakeRemoved",
          "fullName": "vega.StakeRemoved",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ethereum_address",
              "description": "Ethereum address of the user removing stake (hex encode with 0x prefix)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_public_key",
              "description": "The public key of the party from which to remove stake (hex encode)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount removed (base 10)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "The time at which the block was produced\nwill be used to inform the core at what time\nthe stake was made unavailable.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeTotalSupply",
          "longName": "StakeTotalSupply",
          "fullName": "vega.StakeTotalSupply",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "token_address",
              "description": "The address of the staking asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_supply",
              "description": "The total supply observed for the token",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakingEvent",
          "longName": "StakingEvent",
          "fullName": "vega.StakingEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "index",
              "description": "Index of the log in the transaction",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "The block in which the transaction was added",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake_deposited",
              "description": "",
              "label": "",
              "type": "StakeDeposited",
              "longType": "StakeDeposited",
              "fullType": "vega.StakeDeposited",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "stake_removed",
              "description": "",
              "label": "",
              "type": "StakeRemoved",
              "longType": "StakeRemoved",
              "fullType": "vega.StakeRemoved",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "total_supply",
              "description": "",
              "label": "",
              "type": "StakeTotalSupply",
              "longType": "StakeTotalSupply",
              "fullType": "vega.StakeTotalSupply",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorEvent",
          "longName": "ValidatorEvent",
          "fullName": "vega.ValidatorEvent",
          "description": "An event related to validator management with foreign networks",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "source_id",
              "description": "The source identifier of the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "add",
              "description": "Add a new validator",
              "label": "",
              "type": "AddValidator",
              "longType": "AddValidator",
              "fullType": "vega.AddValidator",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "rm",
              "description": "Remove an existing validator",
              "label": "",
              "type": "RemoveValidator",
              "longType": "RemoveValidator",
              "fullType": "vega.RemoveValidator",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/governance.proto",
      "description": "",
      "package": "vega",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "State",
          "longName": "Proposal.State",
          "fullName": "vega.Proposal.State",
          "description": "Proposal state transition:\nOpen -\u003e\n  - Passed -\u003e Enacted.\n  - Passed -\u003e Failed.\n  - Declined\nRejected\nProposal can enter Failed state from any other state",
          "values": [
            {
              "name": "STATE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "STATE_FAILED",
              "number": "1",
              "description": "Proposal enactment has failed - even though proposal has passed, its execution could not be performed"
            },
            {
              "name": "STATE_OPEN",
              "number": "2",
              "description": "Proposal is open for voting"
            },
            {
              "name": "STATE_PASSED",
              "number": "3",
              "description": "Proposal has gained enough support to be executed"
            },
            {
              "name": "STATE_REJECTED",
              "number": "4",
              "description": "Proposal wasn't accepted (proposal terms failed validation due to wrong configuration or failing to meet network requirements)"
            },
            {
              "name": "STATE_DECLINED",
              "number": "5",
              "description": "Proposal didn't get enough votes (either failing to gain required participation or majority level)"
            },
            {
              "name": "STATE_ENACTED",
              "number": "6",
              "description": "Proposal enacted"
            },
            {
              "name": "STATE_WAITING_FOR_NODE_VOTE",
              "number": "7",
              "description": "Waiting for node validation of the proposal"
            }
          ]
        },
        {
          "name": "ProposalError",
          "longName": "ProposalError",
          "fullName": "vega.ProposalError",
          "description": "A list of possible errors that can cause a proposal to be in state rejected or failed",
          "values": [
            {
              "name": "PROPOSAL_ERROR_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "PROPOSAL_ERROR_CLOSE_TIME_TOO_SOON",
              "number": "1",
              "description": "The specified close time is too early base on network parameters"
            },
            {
              "name": "PROPOSAL_ERROR_CLOSE_TIME_TOO_LATE",
              "number": "2",
              "description": "The specified close time is too late based on network parameters"
            },
            {
              "name": "PROPOSAL_ERROR_ENACT_TIME_TOO_SOON",
              "number": "3",
              "description": "The specified enact time is too early based on network parameters"
            },
            {
              "name": "PROPOSAL_ERROR_ENACT_TIME_TOO_LATE",
              "number": "4",
              "description": "The specified enact time is too late based on network parameters"
            },
            {
              "name": "PROPOSAL_ERROR_INSUFFICIENT_TOKENS",
              "number": "5",
              "description": "The proposer for this proposal as insufficient tokens"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_INSTRUMENT_SECURITY",
              "number": "6",
              "description": "The instrument quote name and base name were the same"
            },
            {
              "name": "PROPOSAL_ERROR_NO_PRODUCT",
              "number": "7",
              "description": "The proposal has no product"
            },
            {
              "name": "PROPOSAL_ERROR_UNSUPPORTED_PRODUCT",
              "number": "8",
              "description": "The specified product is not supported"
            },
            {
              "name": "PROPOSAL_ERROR_NO_TRADING_MODE",
              "number": "11",
              "description": "The proposal has no trading mode"
            },
            {
              "name": "PROPOSAL_ERROR_UNSUPPORTED_TRADING_MODE",
              "number": "12",
              "description": "The proposal has an unsupported trading mode"
            },
            {
              "name": "PROPOSAL_ERROR_NODE_VALIDATION_FAILED",
              "number": "13",
              "description": "The proposal failed node validation"
            },
            {
              "name": "PROPOSAL_ERROR_MISSING_BUILTIN_ASSET_FIELD",
              "number": "14",
              "description": "A field is missing in a builtin asset source"
            },
            {
              "name": "PROPOSAL_ERROR_MISSING_ERC20_CONTRACT_ADDRESS",
              "number": "15",
              "description": "The contract address is missing in the ERC20 asset source"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_ASSET",
              "number": "16",
              "description": "The asset identifier is invalid or does not exist on the Vega network"
            },
            {
              "name": "PROPOSAL_ERROR_INCOMPATIBLE_TIMESTAMPS",
              "number": "17",
              "description": "Proposal terms timestamps are not compatible (Validation \u003c Closing \u003c Enactment)"
            },
            {
              "name": "PROPOSAL_ERROR_NO_RISK_PARAMETERS",
              "number": "18",
              "description": "No risk parameters were specified"
            },
            {
              "name": "PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_KEY",
              "number": "19",
              "description": "Invalid key in update network parameter proposal"
            },
            {
              "name": "PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_VALUE",
              "number": "20",
              "description": "Invalid valid in update network parameter proposal"
            },
            {
              "name": "PROPOSAL_ERROR_NETWORK_PARAMETER_VALIDATION_FAILED",
              "number": "21",
              "description": "Validation failed for network parameter proposal"
            },
            {
              "name": "PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_SMALL",
              "number": "22",
              "description": "Opening auction duration is less than the network minimum opening auction time"
            },
            {
              "name": "PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_LARGE",
              "number": "23",
              "description": "Opening auction duration is more than the network minimum opening auction time"
            },
            {
              "name": "PROPOSAL_ERROR_MARKET_MISSING_LIQUIDITY_COMMITMENT",
              "number": "24",
              "description": "Market proposal is missing a liquidity commitment"
            },
            {
              "name": "PROPOSAL_ERROR_COULD_NOT_INSTANTIATE_MARKET",
              "number": "25",
              "description": "Market proposal market could not be instantiate in execution"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_FUTURE_PRODUCT",
              "number": "26",
              "description": "Market proposal market contained invalid product definition"
            },
            {
              "name": "PROPOSAL_ERROR_MISSING_COMMITMENT_AMOUNT",
              "number": "27",
              "description": "Market proposal is missing commitment amount"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_FEE_AMOUNT",
              "number": "28",
              "description": "Market proposal have invalid fee"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_SHAPE",
              "number": "29",
              "description": "Market proposal have invalid shape"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_RISK_PARAMETER",
              "number": "30",
              "description": "Market proposal invalid risk parameter"
            },
            {
              "name": "PROPOSAL_ERROR_MAJORITY_THRESHOLD_NOT_REACHED",
              "number": "31",
              "description": "Proposal was declined because vote didn't reach the majority thershold required"
            },
            {
              "name": "PROPOSAL_ERROR_PARTICIPATION_THRESHOLD_NOT_REACHED",
              "number": "32",
              "description": "Proposal declined because the participation threshold was not reached"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_ASSET_DETAILS",
              "number": "33",
              "description": "Asset proposal invalid asset details"
            }
          ]
        },
        {
          "name": "Value",
          "longName": "Vote.Value",
          "fullName": "vega.Vote.Value",
          "description": "Vote value",
          "values": [
            {
              "name": "VALUE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "VALUE_NO",
              "number": "1",
              "description": "A vote against the proposal"
            },
            {
              "name": "VALUE_YES",
              "number": "2",
              "description": "A vote in favour of the proposal"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "FutureProduct",
          "longName": "FutureProduct",
          "fullName": "vega.FutureProduct",
          "description": "Future product configuration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "settlement_asset",
              "description": "Product settlement asset identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quote_name",
              "description": "Product quote name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec_for_settlement_price",
              "description": "The oracle spec describing the oracle data of settlement price",
              "label": "",
              "type": "OracleSpecConfiguration",
              "longType": "oracles.v1.OracleSpecConfiguration",
              "fullType": "oracles.v1.OracleSpecConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec_for_trading_termination",
              "description": "The oracle spec describing the oracle data of trading termination",
              "label": "",
              "type": "OracleSpecConfiguration",
              "longType": "oracles.v1.OracleSpecConfiguration",
              "fullType": "oracles.v1.OracleSpecConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec_binding",
              "description": "The binding between the oracle spec and the settlement price",
              "label": "",
              "type": "OracleSpecToFutureBinding",
              "longType": "OracleSpecToFutureBinding",
              "fullType": "vega.OracleSpecToFutureBinding",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GovernanceData",
          "longName": "GovernanceData",
          "fullName": "vega.GovernanceData",
          "description": "Governance data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal",
              "description": "The governance proposal",
              "label": "",
              "type": "Proposal",
              "longType": "Proposal",
              "fullType": "vega.Proposal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "yes",
              "description": "All \"yes\" votes in favour of the proposal above",
              "label": "repeated",
              "type": "Vote",
              "longType": "Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "no",
              "description": "All \"no\" votes against the proposal above",
              "label": "repeated",
              "type": "Vote",
              "longType": "Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "yes_party",
              "description": "All latest YES votes by party (guaranteed to be unique),\nwhere key (string) is the party ID (public key) and\nvalue (Vote) is the vote cast by the given party",
              "label": "repeated",
              "type": "YesPartyEntry",
              "longType": "GovernanceData.YesPartyEntry",
              "fullType": "vega.GovernanceData.YesPartyEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "no_party",
              "description": "All latest NO votes by party (guaranteed to be unique),\nwhere key (string) is the party ID (public key) and\nvalue (Vote) is the vote cast by the given party",
              "label": "repeated",
              "type": "NoPartyEntry",
              "longType": "GovernanceData.NoPartyEntry",
              "fullType": "vega.GovernanceData.NoPartyEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NoPartyEntry",
          "longName": "GovernanceData.NoPartyEntry",
          "fullName": "vega.GovernanceData.NoPartyEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Vote",
              "longType": "Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "YesPartyEntry",
          "longName": "GovernanceData.YesPartyEntry",
          "fullName": "vega.GovernanceData.YesPartyEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Vote",
              "longType": "Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InstrumentConfiguration",
          "longName": "InstrumentConfiguration",
          "fullName": "vega.InstrumentConfiguration",
          "description": "Instrument configuration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Instrument name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "code",
              "description": "Instrument code",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "future",
              "description": "Future",
              "label": "",
              "type": "FutureProduct",
              "longType": "FutureProduct",
              "fullType": "vega.FutureProduct",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "product",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewAsset",
          "longName": "NewAsset",
          "fullName": "vega.NewAsset",
          "description": "New asset on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "changes",
              "description": "The configuration of the new asset",
              "label": "",
              "type": "AssetDetails",
              "longType": "AssetDetails",
              "fullType": "vega.AssetDetails",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewFreeform",
          "longName": "NewFreeform",
          "fullName": "vega.NewFreeform",
          "description": "Freeform proposal",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "changes",
              "description": "The configuration of the new freeform",
              "label": "",
              "type": "NewFreeformDetails",
              "longType": "NewFreeformDetails",
              "fullType": "vega.NewFreeformDetails",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewFreeformDetails",
          "longName": "NewFreeformDetails",
          "fullName": "vega.NewFreeformDetails",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "url",
              "description": "The URL containing content that describes the proposal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "A short description of what is being proposed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash",
              "description": "The hash on the content of the URL",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewMarket",
          "longName": "NewMarket",
          "fullName": "vega.NewMarket",
          "description": "New market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "changes",
              "description": "The configuration of the new market",
              "label": "",
              "type": "NewMarketConfiguration",
              "longType": "NewMarketConfiguration",
              "fullType": "vega.NewMarketConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_commitment",
              "description": "The commitment from the party creating the NewMarket proposal",
              "label": "",
              "type": "NewMarketCommitment",
              "longType": "NewMarketCommitment",
              "fullType": "vega.NewMarketCommitment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewMarketCommitment",
          "longName": "NewMarketCommitment",
          "fullName": "vega.NewMarketCommitment",
          "description": "A commitment of liquidity to be made by the party which proposes a market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "commitment_amount",
              "description": "Specified as a unitless number that represents the amount of settlement asset of the market",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee",
              "description": "Nominated liquidity fee factor, which is an input to the calculation of taker fees on the market, as per seeting fees and rewarding liquidity providers",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sells",
              "description": "A set of liquidity sell orders to meet the liquidity provision obligation",
              "label": "repeated",
              "type": "LiquidityOrder",
              "longType": "LiquidityOrder",
              "fullType": "vega.LiquidityOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buys",
              "description": "A set of liquidity buy orders to meet the liquidity provision obligation",
              "label": "repeated",
              "type": "LiquidityOrder",
              "longType": "LiquidityOrder",
              "fullType": "vega.LiquidityOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "A reference to be associated to all orders created from this commitment",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewMarketConfiguration",
          "longName": "NewMarketConfiguration",
          "fullName": "vega.NewMarketConfiguration",
          "description": "Configuration for a new market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "instrument",
              "description": "New market instrument configuration",
              "label": "",
              "type": "InstrumentConfiguration",
              "longType": "InstrumentConfiguration",
              "fullType": "vega.InstrumentConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "decimal_places",
              "description": "Decimal places used for the new market",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Optional new market meta data, tags",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_monitoring_parameters",
              "description": "Price monitoring parameters",
              "label": "",
              "type": "PriceMonitoringParameters",
              "longType": "PriceMonitoringParameters",
              "fullType": "vega.PriceMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_monitoring_parameters",
              "description": "Liquidity monitoring parameters",
              "label": "",
              "type": "LiquidityMonitoringParameters",
              "longType": "LiquidityMonitoringParameters",
              "fullType": "vega.LiquidityMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "simple",
              "description": "Simple risk model parameters, valid only if MODEL_SIMPLE is selected",
              "label": "",
              "type": "SimpleModelParams",
              "longType": "SimpleModelParams",
              "fullType": "vega.SimpleModelParams",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_parameters",
              "defaultValue": ""
            },
            {
              "name": "log_normal",
              "description": "Log normal risk model parameters, valid only if MODEL_LOG_NORMAL is selected",
              "label": "",
              "type": "LogNormalRiskModel",
              "longType": "LogNormalRiskModel",
              "fullType": "vega.LogNormalRiskModel",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_parameters",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Proposal",
          "longName": "Proposal",
          "fullName": "vega.Proposal",
          "description": "Governance proposal",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique proposal identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "Proposal reference",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier of the author (the party submitting the proposal)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "Proposal state - See (Proposal.State)[#vega.Proposal.State] definition",
              "label": "",
              "type": "State",
              "longType": "Proposal.State",
              "fullType": "vega.Proposal.State",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Proposal timestamp for date and time (in nanoseconds) when proposal was submitted to the network",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "terms",
              "description": "Proposal configuration and the actual change that is meant to be executed when proposal is enacted",
              "label": "",
              "type": "ProposalTerms",
              "longType": "ProposalTerms",
              "fullType": "vega.ProposalTerms",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "A reason for the current state of the proposal, this may be set in case of REJECTED and FAILED statuses",
              "label": "",
              "type": "ProposalError",
              "longType": "ProposalError",
              "fullType": "vega.ProposalError",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "error_details",
              "description": "The detailed error associated to the reason.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProposalTerms",
          "longName": "ProposalTerms",
          "fullName": "vega.ProposalTerms",
          "description": "Terms for a governance proposal on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "closing_timestamp",
              "description": "Timestamp (Unix time in seconds) when voting closes for this proposal,\nconstrained by `minClose` and `maxClose` network parameters",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "enactment_timestamp",
              "description": "Timestamp (Unix time in seconds) when proposal gets enacted (if passed),\nconstrained by `minEnact` and `maxEnact` network parameters",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validation_timestamp",
              "description": "Validation timestamp (Unix time in seconds)",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "update_market",
              "description": "Proposal change for modifying an existing market on Vega",
              "label": "",
              "type": "UpdateMarket",
              "longType": "UpdateMarket",
              "fullType": "vega.UpdateMarket",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "new_market",
              "description": "Proposal change for creating new market on Vega",
              "label": "",
              "type": "NewMarket",
              "longType": "NewMarket",
              "fullType": "vega.NewMarket",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "update_network_parameter",
              "description": "Proposal change for updating Vega network parameters",
              "label": "",
              "type": "UpdateNetworkParameter",
              "longType": "UpdateNetworkParameter",
              "fullType": "vega.UpdateNetworkParameter",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "new_asset",
              "description": "Proposal change for creating new assets on Vega",
              "label": "",
              "type": "NewAsset",
              "longType": "NewAsset",
              "fullType": "vega.NewAsset",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "new_freeform",
              "description": "Proposal change for a freeform voting thing",
              "label": "",
              "type": "NewFreeform",
              "longType": "NewFreeform",
              "fullType": "vega.NewFreeform",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateMarket",
          "longName": "UpdateMarket",
          "fullName": "vega.UpdateMarket",
          "description": "Update an existing market on Vega",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "UpdateNetworkParameter",
          "longName": "UpdateNetworkParameter",
          "fullName": "vega.UpdateNetworkParameter",
          "description": "Update network configuration on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "changes",
              "description": "The network parameter to update",
              "label": "",
              "type": "NetworkParameter",
              "longType": "NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Vote",
          "longName": "Vote",
          "fullName": "vega.Vote",
          "description": "Governance vote",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Voter's party identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "Actual vote",
              "label": "",
              "type": "Value",
              "longType": "Vote.Value",
              "fullType": "vega.Vote.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proposal_id",
              "description": "Identifier of the proposal being voted on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Vote timestamp for date and time (in nanoseconds) when vote was submitted to the network",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_governance_token_balance",
              "description": "Total number of governance token for the party that casted the vote",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_governance_token_weight",
              "description": "The weight of this vote based on the total of governance token",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/markets.proto",
      "description": "",
      "package": "vega",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "State",
          "longName": "Market.State",
          "fullName": "vega.Market.State",
          "description": "The current state of the Market",
          "values": [
            {
              "name": "STATE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, invalid"
            },
            {
              "name": "STATE_PROPOSED",
              "number": "1",
              "description": "The Governance proposal valid and accepted"
            },
            {
              "name": "STATE_REJECTED",
              "number": "2",
              "description": "Outcome of governance votes is to reject the market"
            },
            {
              "name": "STATE_PENDING",
              "number": "3",
              "description": "Governance vote passes/wins"
            },
            {
              "name": "STATE_CANCELLED",
              "number": "4",
              "description": "Market triggers cancellation condition or governance\nvotes to close before market becomes Active"
            },
            {
              "name": "STATE_ACTIVE",
              "number": "5",
              "description": "Enactment date reached and usual auction exit checks pass"
            },
            {
              "name": "STATE_SUSPENDED",
              "number": "6",
              "description": "Price monitoring or liquidity monitoring trigger"
            },
            {
              "name": "STATE_CLOSED",
              "number": "7",
              "description": "Governance vote (to close)"
            },
            {
              "name": "STATE_TRADING_TERMINATED",
              "number": "8",
              "description": "Defined by the product (i.e. from a product parameter,\nspecified in market definition, giving close date/time)"
            },
            {
              "name": "STATE_SETTLED",
              "number": "9",
              "description": "Settlement triggered and completed as defined by product"
            }
          ]
        },
        {
          "name": "TradingMode",
          "longName": "Market.TradingMode",
          "fullName": "vega.Market.TradingMode",
          "description": "The trading mode the market is currently running, also referred to as 'market state'",
          "values": [
            {
              "name": "TRADING_MODE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, this is invalid"
            },
            {
              "name": "TRADING_MODE_CONTINUOUS",
              "number": "1",
              "description": "Normal trading"
            },
            {
              "name": "TRADING_MODE_BATCH_AUCTION",
              "number": "2",
              "description": "Auction trading (FBA)"
            },
            {
              "name": "TRADING_MODE_OPENING_AUCTION",
              "number": "3",
              "description": "Opening auction"
            },
            {
              "name": "TRADING_MODE_MONITORING_AUCTION",
              "number": "4",
              "description": "Auction triggered by monitoring"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AuctionDuration",
          "longName": "AuctionDuration",
          "fullName": "vega.AuctionDuration",
          "description": "An auction duration is used to configure 3 auction periods:\n1. `duration \u003e 0`, `volume == 0`:\n  The auction will last for at least N seconds\n2. `duration == 0`, `volume \u003e 0`:\n  The auction will end once we can close with given traded volume\n3. `duration \u003e 0`, `volume \u003e 0`:\n  The auction will take at least N seconds, but can end sooner if we can trade a certain volume",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "duration",
              "description": "Duration of the auction in seconds",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "Target uncrossing trading volume",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FeeFactors",
          "longName": "FeeFactors",
          "fullName": "vega.FeeFactors",
          "description": "Fee factors definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "maker_fee",
              "description": "Maker fee",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "infrastructure_fee",
              "description": "Infrastructure fee",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_fee",
              "description": "Liquidity fee",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Fees",
          "longName": "Fees",
          "fullName": "vega.Fees",
          "description": "Fees definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "factors",
              "description": "Fee factors",
              "label": "",
              "type": "FeeFactors",
              "longType": "FeeFactors",
              "fullType": "vega.FeeFactors",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Future",
          "longName": "Future",
          "fullName": "vega.Future",
          "description": "Future product definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "settlement_asset",
              "description": "The asset for the future",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quote_name",
              "description": "Quote name of the instrument",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec_for_settlement_price",
              "description": "The oracle spec describing the settlement price oracle filter",
              "label": "",
              "type": "OracleSpec",
              "longType": "oracles.v1.OracleSpec",
              "fullType": "oracles.v1.OracleSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec_for_trading_termination",
              "description": "the oracle spec describing the trading termination oracle filter",
              "label": "",
              "type": "OracleSpec",
              "longType": "oracles.v1.OracleSpec",
              "fullType": "oracles.v1.OracleSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec_binding",
              "description": "The binding between the oracle spec and the oracle data",
              "label": "",
              "type": "OracleSpecToFutureBinding",
              "longType": "OracleSpecToFutureBinding",
              "fullType": "vega.OracleSpecToFutureBinding",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Instrument",
          "longName": "Instrument",
          "fullName": "vega.Instrument",
          "description": "Instrument definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Instrument identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "code",
              "description": "Code for the instrument",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Name of the instrument",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "A collection of instrument meta-data",
              "label": "",
              "type": "InstrumentMetadata",
              "longType": "InstrumentMetadata",
              "fullType": "vega.InstrumentMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "future",
              "description": "Future",
              "label": "",
              "type": "Future",
              "longType": "Future",
              "fullType": "vega.Future",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "product",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InstrumentMetadata",
          "longName": "InstrumentMetadata",
          "fullName": "vega.InstrumentMetadata",
          "description": "Instrument metadata definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tags",
              "description": "A list of 0 or more tags",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityMonitoringParameters",
          "longName": "LiquidityMonitoringParameters",
          "fullName": "vega.LiquidityMonitoringParameters",
          "description": "LiquidityMonitoringParameters contains settings used for liquidity monitoring",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "target_stake_parameters",
              "description": "Specifies parameters related to target stake calculation",
              "label": "",
              "type": "TargetStakeParameters",
              "longType": "TargetStakeParameters",
              "fullType": "vega.TargetStakeParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "triggering_ratio",
              "description": "Specifies the triggering ratio for entering liquidity auction",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_extension",
              "description": "Specifies by how many seconds an auction should be extended if leaving the auction were to trigger a liquidity auction",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LogNormalModelParams",
          "longName": "LogNormalModelParams",
          "fullName": "vega.LogNormalModelParams",
          "description": "Risk model parameters for log normal",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "mu",
              "description": "Mu param",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "r",
              "description": "R param",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sigma",
              "description": "Sigma param",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LogNormalRiskModel",
          "longName": "LogNormalRiskModel",
          "fullName": "vega.LogNormalRiskModel",
          "description": "Risk model for log normal",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "risk_aversion_parameter",
              "description": "Risk Aversion Parameter",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tau",
              "description": "Tau",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "params",
              "description": "Risk model parameters for log normal",
              "label": "",
              "type": "LogNormalModelParams",
              "longType": "LogNormalModelParams",
              "fullType": "vega.LogNormalModelParams",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarginCalculator",
          "longName": "MarginCalculator",
          "fullName": "vega.MarginCalculator",
          "description": "Margin Calculator definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "scaling_factors",
              "description": "Scaling factors for margin calculation",
              "label": "",
              "type": "ScalingFactors",
              "longType": "ScalingFactors",
              "fullType": "vega.ScalingFactors",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Market",
          "longName": "Market",
          "fullName": "vega.Market",
          "description": "Market definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tradable_instrument",
              "description": "Tradable instrument configuration",
              "label": "",
              "type": "TradableInstrument",
              "longType": "TradableInstrument",
              "fullType": "vega.TradableInstrument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "decimal_places",
              "description": "Number of decimal places that a price must be shifted by in order to get a\ncorrect price denominated in the currency of the market, for example:\n`realPrice = price / 10^decimalPlaces`",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fees",
              "description": "Fees configuration",
              "label": "",
              "type": "Fees",
              "longType": "Fees",
              "fullType": "vega.Fees",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "opening_auction",
              "description": "Auction duration specifies how long the opening auction will run (minimum\nduration and optionally a minimum traded volume)",
              "label": "",
              "type": "AuctionDuration",
              "longType": "AuctionDuration",
              "fullType": "vega.AuctionDuration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_monitoring_settings",
              "description": "PriceMonitoringSettings for the market",
              "label": "",
              "type": "PriceMonitoringSettings",
              "longType": "PriceMonitoringSettings",
              "fullType": "vega.PriceMonitoringSettings",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_monitoring_parameters",
              "description": "LiquidityMonitoringParameters for the market",
              "label": "",
              "type": "LiquidityMonitoringParameters",
              "longType": "LiquidityMonitoringParameters",
              "fullType": "vega.LiquidityMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trading_mode",
              "description": "Current mode of execution of the market",
              "label": "",
              "type": "TradingMode",
              "longType": "Market.TradingMode",
              "fullType": "vega.Market.TradingMode",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "Current state of the market",
              "label": "",
              "type": "State",
              "longType": "Market.State",
              "fullType": "vega.Market.State",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_timestamps",
              "description": "Timestamps for when the market stay changes",
              "label": "",
              "type": "MarketTimestamps",
              "longType": "MarketTimestamps",
              "fullType": "vega.MarketTimestamps",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketTimestamps",
          "longName": "MarketTimestamps",
          "fullName": "vega.MarketTimestamps",
          "description": "Time stamps for important times about creating, enacting etc the market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposed",
              "description": "Time when the market is first proposed",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending",
              "description": "Time when the market has been voted in and is created into an opening auction",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "open",
              "description": "Time when the market has left the opening auction and is ready to accept trades",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "close",
              "description": "Time when the market is closed",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleSpecToFutureBinding",
          "longName": "OracleSpecToFutureBinding",
          "fullName": "vega.OracleSpecToFutureBinding",
          "description": "OracleSpecToFutureBinding tells on which property oracle data should be\nused as settlement price and which to use the trading terminated trigger",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "settlement_price_property",
              "description": "settlement_price_property holds the name of the property in the oracle data\nthat should be used as settlement price.\nIf it is set to \"prices.BTC.value\", then the Future will use the value of\nthis property as settlement price.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trading_termination_property",
              "description": "the name of the property in the oracle data that signals termination of trading",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceMonitoringParameters",
          "longName": "PriceMonitoringParameters",
          "fullName": "vega.PriceMonitoringParameters",
          "description": "PriceMonitoringParameters contains a collection of triggers to be used for a given market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "triggers",
              "description": "",
              "label": "repeated",
              "type": "PriceMonitoringTrigger",
              "longType": "PriceMonitoringTrigger",
              "fullType": "vega.PriceMonitoringTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceMonitoringSettings",
          "longName": "PriceMonitoringSettings",
          "fullName": "vega.PriceMonitoringSettings",
          "description": "PriceMonitoringSettings contains the settings for price monitoring",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parameters",
              "description": "Specifies price monitoring parameters to be used for price monitoring purposes",
              "label": "",
              "type": "PriceMonitoringParameters",
              "longType": "PriceMonitoringParameters",
              "fullType": "vega.PriceMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "update_frequency",
              "description": "Specifies how often (expressed in seconds) the price monitoring bounds should be updated",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceMonitoringTrigger",
          "longName": "PriceMonitoringTrigger",
          "fullName": "vega.PriceMonitoringTrigger",
          "description": "PriceMonitoringTrigger holds together price projection horizon τ, probability level p, and auction extension duration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "horizon",
              "description": "Price monitoring projection horizon τ in seconds",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "probability",
              "description": "Price monitoring probability level p",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_extension",
              "description": "Price monitoring auction extension duration in seconds should the price\nbreach it's theoretical level over the specified horizon at the specified\nprobability level",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ScalingFactors",
          "longName": "ScalingFactors",
          "fullName": "vega.ScalingFactors",
          "description": "Scaling Factors (for use in margin calculation)",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "search_level",
              "description": "Search level",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "initial_margin",
              "description": "Initial margin level",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collateral_release",
              "description": "Collateral release level",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SimpleModelParams",
          "longName": "SimpleModelParams",
          "fullName": "vega.SimpleModelParams",
          "description": "Risk model parameters for simple modelling",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "factor_long",
              "description": "Pre-defined risk factor value for long",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "factor_short",
              "description": "Pre-defined risk factor value for short",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_move_up",
              "description": "Pre-defined maximum price move up that the model considers as valid",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "min_move_down",
              "description": "Pre-defined minimum price move down that the model considers as valid",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "probability_of_trading",
              "description": "Pre-defined constant probability of trading",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SimpleRiskModel",
          "longName": "SimpleRiskModel",
          "fullName": "vega.SimpleRiskModel",
          "description": "Risk model for simple modelling",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "Risk model params for simple modelling",
              "label": "",
              "type": "SimpleModelParams",
              "longType": "SimpleModelParams",
              "fullType": "vega.SimpleModelParams",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TargetStakeParameters",
          "longName": "TargetStakeParameters",
          "fullName": "vega.TargetStakeParameters",
          "description": "TargetStakeParameters contains parameters used in target stake calculation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "time_window",
              "description": "Specifies length of time window expressed in seconds for target stake calculation",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "scaling_factor",
              "description": "Specifies scaling factors used in target stake calculation",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradableInstrument",
          "longName": "TradableInstrument",
          "fullName": "vega.TradableInstrument",
          "description": "Tradable Instrument definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "instrument",
              "description": "Instrument details",
              "label": "",
              "type": "Instrument",
              "longType": "Instrument",
              "fullType": "vega.Instrument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "margin_calculator",
              "description": "Margin calculator for the instrument",
              "label": "",
              "type": "MarginCalculator",
              "longType": "MarginCalculator",
              "fullType": "vega.MarginCalculator",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_normal_risk_model",
              "description": "Log normal",
              "label": "",
              "type": "LogNormalRiskModel",
              "longType": "LogNormalRiskModel",
              "fullType": "vega.LogNormalRiskModel",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_model",
              "defaultValue": ""
            },
            {
              "name": "simple_risk_model",
              "description": "Simple",
              "label": "",
              "type": "SimpleRiskModel",
              "longType": "SimpleRiskModel",
              "fullType": "vega.SimpleRiskModel",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_model",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/vega.proto",
      "description": "",
      "package": "vega",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "AccountType",
          "longName": "AccountType",
          "fullName": "vega.AccountType",
          "description": "Various collateral/account types as used by Vega",
          "values": [
            {
              "name": "ACCOUNT_TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "ACCOUNT_TYPE_INSURANCE",
              "number": "1",
              "description": "Insurance pool accounts contain insurance pool funds for a market"
            },
            {
              "name": "ACCOUNT_TYPE_SETTLEMENT",
              "number": "2",
              "description": "Settlement accounts exist only during settlement or mark-to-market"
            },
            {
              "name": "ACCOUNT_TYPE_MARGIN",
              "number": "3",
              "description": "Margin accounts contain margin funds for a party and each party will\nhave multiple margin accounts, one for each market they have traded in\n\nMargin account funds will alter as margin requirements on positions change"
            },
            {
              "name": "ACCOUNT_TYPE_GENERAL",
              "number": "4",
              "description": "General accounts contains general funds for a party. A party will\nhave multiple general accounts, one for each asset they want\nto trade with\n\nGeneral accounts are where funds are initially deposited or withdrawn from,\nit is also the account where funds are taken to fulfil fees and initial margin requirements"
            },
            {
              "name": "ACCOUNT_TYPE_FEES_INFRASTRUCTURE",
              "number": "5",
              "description": "Infrastructure accounts contain fees earned by providing infrastructure on Vega"
            },
            {
              "name": "ACCOUNT_TYPE_FEES_LIQUIDITY",
              "number": "6",
              "description": "Liquidity accounts contain fees earned by providing liquidity on Vega markets"
            },
            {
              "name": "ACCOUNT_TYPE_FEES_MAKER",
              "number": "7",
              "description": "This account is created to hold fees earned by placing orders that sit on the book\nand are then matched with an incoming order to create a trade - These fees reward parties\nwho provide the best priced liquidity that actually allows trading to take place"
            },
            {
              "name": "ACCOUNT_TYPE_LOCK_WITHDRAW",
              "number": "8",
              "description": "This account is created to lock funds to be withdrawn by parties"
            },
            {
              "name": "ACCOUNT_TYPE_BOND",
              "number": "9",
              "description": "This account is created to maintain liquidity providers funds commitments"
            },
            {
              "name": "ACCOUNT_TYPE_EXTERNAL",
              "number": "10",
              "description": "External account represents an external source (deposit/withdrawal)"
            },
            {
              "name": "ACCOUNT_TYPE_GLOBAL_INSURANCE",
              "number": "11",
              "description": "Global insurance account for the asset"
            },
            {
              "name": "ACCOUNT_TYPE_GLOBAL_REWARD",
              "number": "12",
              "description": "Global reward account for the asset"
            },
            {
              "name": "ACCOUNT_TYPE_PENDING_TRANSFERS",
              "number": "13",
              "description": "Per asset account used to store pending transfers (if any)"
            },
            {
              "name": "ACCOUNT_TYPE_REWARD_TAKER_PAID_FEES",
              "number": "14",
              "description": "Per asset reward account for fees paid by takers"
            },
            {
              "name": "ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES",
              "number": "15",
              "description": "Per asset reward account for fees received by makers"
            },
            {
              "name": "ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES",
              "number": "16",
              "description": "Per asset reward account for fees received by liquidity providers"
            },
            {
              "name": "ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS",
              "number": "17",
              "description": "Per asset reward account for market proposers when the market goes above some trading threshold"
            }
          ]
        },
        {
          "name": "AuctionTrigger",
          "longName": "AuctionTrigger",
          "fullName": "vega.AuctionTrigger",
          "description": "Auction triggers indicate what condition triggered an auction (if market is in auction mode)",
          "values": [
            {
              "name": "AUCTION_TRIGGER_UNSPECIFIED",
              "number": "0",
              "description": "Default value for AuctionTrigger, no auction triggered"
            },
            {
              "name": "AUCTION_TRIGGER_BATCH",
              "number": "1",
              "description": "Batch auction"
            },
            {
              "name": "AUCTION_TRIGGER_OPENING",
              "number": "2",
              "description": "Opening auction"
            },
            {
              "name": "AUCTION_TRIGGER_PRICE",
              "number": "3",
              "description": "Price monitoring trigger"
            },
            {
              "name": "AUCTION_TRIGGER_LIQUIDITY",
              "number": "4",
              "description": "Liquidity monitoring trigger"
            }
          ]
        },
        {
          "name": "ChainStatus",
          "longName": "ChainStatus",
          "fullName": "vega.ChainStatus",
          "description": "The Vega blockchain status as reported by the node the caller is connected to",
          "values": [
            {
              "name": "CHAIN_STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "CHAIN_STATUS_DISCONNECTED",
              "number": "1",
              "description": "Blockchain is disconnected"
            },
            {
              "name": "CHAIN_STATUS_REPLAYING",
              "number": "2",
              "description": "Blockchain is replaying historic transactions"
            },
            {
              "name": "CHAIN_STATUS_CONNECTED",
              "number": "3",
              "description": "Blockchain is connected and receiving transactions"
            }
          ]
        },
        {
          "name": "Status",
          "longName": "Deposit.Status",
          "fullName": "vega.Deposit.Status",
          "description": "The status of the deposit",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "STATUS_OPEN",
              "number": "1",
              "description": "The deposit is being processed by the network"
            },
            {
              "name": "STATUS_CANCELLED",
              "number": "2",
              "description": "The deposit has been cancelled by the network"
            },
            {
              "name": "STATUS_FINALIZED",
              "number": "3",
              "description": "The deposit has been finalised and accounts have been updated"
            }
          ]
        },
        {
          "name": "EpochAction",
          "longName": "EpochAction",
          "fullName": "vega.EpochAction",
          "description": "What epoch action has occurred",
          "values": [
            {
              "name": "EPOCH_ACTION_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "EPOCH_ACTION_START",
              "number": "1",
              "description": "The epoch update is for a new epoch"
            },
            {
              "name": "EPOCH_ACTION_END",
              "number": "2",
              "description": "The epoch update is for the end of an epoch"
            }
          ]
        },
        {
          "name": "Interval",
          "longName": "Interval",
          "fullName": "vega.Interval",
          "description": "Represents a set of time intervals that are used when querying for candle-stick data",
          "values": [
            {
              "name": "INTERVAL_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "INTERVAL_I1M",
              "number": "60",
              "description": "1 minute."
            },
            {
              "name": "INTERVAL_I5M",
              "number": "300",
              "description": "5 minutes."
            },
            {
              "name": "INTERVAL_I15M",
              "number": "900",
              "description": "15 minutes."
            },
            {
              "name": "INTERVAL_I1H",
              "number": "3600",
              "description": "1 hour."
            },
            {
              "name": "INTERVAL_I6H",
              "number": "21600",
              "description": "6 hours."
            },
            {
              "name": "INTERVAL_I1D",
              "number": "86400",
              "description": "1 day."
            }
          ]
        },
        {
          "name": "Status",
          "longName": "LiquidityProvision.Status",
          "fullName": "vega.LiquidityProvision.Status",
          "description": "Status of a liquidity provision order",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "The default value"
            },
            {
              "name": "STATUS_ACTIVE",
              "number": "1",
              "description": "The liquidity provision is active"
            },
            {
              "name": "STATUS_STOPPED",
              "number": "2",
              "description": "The liquidity provision was stopped by the network"
            },
            {
              "name": "STATUS_CANCELLED",
              "number": "3",
              "description": "The liquidity provision was cancelled by the liquidity provider"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "4",
              "description": "The liquidity provision was invalid and got rejected"
            },
            {
              "name": "STATUS_UNDEPLOYED",
              "number": "5",
              "description": "The liquidity provision is valid and accepted by network, but orders aren't deployed"
            },
            {
              "name": "STATUS_PENDING",
              "number": "6",
              "description": "The liquidity provision is valid and accepted by network\nbut have never been deployed. I when it's possible to deploy them for the first time\nmargin check fails, then they will be cancelled without any penalties."
            }
          ]
        },
        {
          "name": "NodeStatus",
          "longName": "NodeStatus",
          "fullName": "vega.NodeStatus",
          "description": "Node status type",
          "values": [
            {
              "name": "NODE_STATUS_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "NODE_STATUS_VALIDATOR",
              "number": "1",
              "description": "The node is validating"
            },
            {
              "name": "NODE_STATUS_NON_VALIDATOR",
              "number": "2",
              "description": "The node is non-validating"
            }
          ]
        },
        {
          "name": "Status",
          "longName": "Order.Status",
          "fullName": "vega.Order.Status",
          "description": "Status values for an order\nSee resulting status in [What order types are available to trade on Vega?](https://docs.testnet.vega.xyz/docs/trading-questions/#what-order-types-are-available-to-trade-on-vega) for more detail.",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "STATUS_ACTIVE",
              "number": "1",
              "description": "Used for active unfilled or partially filled orders"
            },
            {
              "name": "STATUS_EXPIRED",
              "number": "2",
              "description": "Used for expired GTT orders"
            },
            {
              "name": "STATUS_CANCELLED",
              "number": "3",
              "description": "Used for orders cancelled by the party that created the order"
            },
            {
              "name": "STATUS_STOPPED",
              "number": "4",
              "description": "Used for unfilled FOK or IOC orders, and for orders that were stopped by the network"
            },
            {
              "name": "STATUS_FILLED",
              "number": "5",
              "description": "Used for closed fully filled orders"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "6",
              "description": "Used for orders when not enough collateral was available to fill the margin requirements"
            },
            {
              "name": "STATUS_PARTIALLY_FILLED",
              "number": "7",
              "description": "Used for closed partially filled IOC orders"
            },
            {
              "name": "STATUS_PARKED",
              "number": "8",
              "description": "Order has been removed from the order book and has been parked, this applies to pegged orders only"
            }
          ]
        },
        {
          "name": "TimeInForce",
          "longName": "Order.TimeInForce",
          "fullName": "vega.Order.TimeInForce",
          "description": "Time In Force for an order\nSee [What order types are available to trade on Vega?](https://docs.testnet.vega.xyz/docs/trading-questions/#what-order-types-are-available-to-trade-on-vega) for more detail",
          "values": [
            {
              "name": "TIME_IN_FORCE_UNSPECIFIED",
              "number": "0",
              "description": "Default value for TimeInForce, can be valid for an amend"
            },
            {
              "name": "TIME_IN_FORCE_GTC",
              "number": "1",
              "description": "Good until cancelled"
            },
            {
              "name": "TIME_IN_FORCE_GTT",
              "number": "2",
              "description": "Good until specified time"
            },
            {
              "name": "TIME_IN_FORCE_IOC",
              "number": "3",
              "description": "Immediate or cancel"
            },
            {
              "name": "TIME_IN_FORCE_FOK",
              "number": "4",
              "description": "Fill or kill"
            },
            {
              "name": "TIME_IN_FORCE_GFA",
              "number": "5",
              "description": "Good for auction"
            },
            {
              "name": "TIME_IN_FORCE_GFN",
              "number": "6",
              "description": "Good for normal"
            }
          ]
        },
        {
          "name": "Type",
          "longName": "Order.Type",
          "fullName": "vega.Order.Type",
          "description": "Type values for an order",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "TYPE_LIMIT",
              "number": "1",
              "description": "Used for Limit orders"
            },
            {
              "name": "TYPE_MARKET",
              "number": "2",
              "description": "Used for Market orders"
            },
            {
              "name": "TYPE_NETWORK",
              "number": "3",
              "description": "Used for orders where the initiating party is the network (with distressed parties)"
            }
          ]
        },
        {
          "name": "OrderError",
          "longName": "OrderError",
          "fullName": "vega.OrderError",
          "description": "OrderError codes are returned in the `[Order](#vega.Order).reason` field - If there is an issue\nwith an order during its life-cycle, it will be marked with `status.ORDER_STATUS_REJECTED`",
          "values": [
            {
              "name": "ORDER_ERROR_UNSPECIFIED",
              "number": "0",
              "description": "Default value, no error reported"
            },
            {
              "name": "ORDER_ERROR_INVALID_MARKET_ID",
              "number": "1",
              "description": "Order was submitted for a market that does not exist"
            },
            {
              "name": "ORDER_ERROR_INVALID_ORDER_ID",
              "number": "2",
              "description": "Order was submitted with an invalid identifier"
            },
            {
              "name": "ORDER_ERROR_OUT_OF_SEQUENCE",
              "number": "3",
              "description": "Order was amended with a sequence number that was not previous version + 1"
            },
            {
              "name": "ORDER_ERROR_INVALID_REMAINING_SIZE",
              "number": "4",
              "description": "Order was amended with an invalid remaining size (e.g. remaining greater than total size)"
            },
            {
              "name": "ORDER_ERROR_TIME_FAILURE",
              "number": "5",
              "description": "Node was unable to get Vega (blockchain) time"
            },
            {
              "name": "ORDER_ERROR_REMOVAL_FAILURE",
              "number": "6",
              "description": "Failed to remove an order from the book"
            },
            {
              "name": "ORDER_ERROR_INVALID_EXPIRATION_DATETIME",
              "number": "7",
              "description": "An order with `TimeInForce.TIME_IN_FORCE_GTT` was submitted or amended\nwith an expiration that was badly formatted or otherwise invalid"
            },
            {
              "name": "ORDER_ERROR_INVALID_ORDER_REFERENCE",
              "number": "8",
              "description": "Order was submitted or amended with an invalid reference field"
            },
            {
              "name": "ORDER_ERROR_EDIT_NOT_ALLOWED",
              "number": "9",
              "description": "Order amend was submitted for an order field that cannot not be amended (e.g. order identifier)"
            },
            {
              "name": "ORDER_ERROR_AMEND_FAILURE",
              "number": "10",
              "description": "Amend failure because amend details do not match original order"
            },
            {
              "name": "ORDER_ERROR_NOT_FOUND",
              "number": "11",
              "description": "Order not found in an order book or store"
            },
            {
              "name": "ORDER_ERROR_INVALID_PARTY_ID",
              "number": "12",
              "description": "Order was submitted with an invalid or missing party identifier"
            },
            {
              "name": "ORDER_ERROR_MARKET_CLOSED",
              "number": "13",
              "description": "Order was submitted for a market that has closed"
            },
            {
              "name": "ORDER_ERROR_MARGIN_CHECK_FAILED",
              "number": "14",
              "description": "Order was submitted, but the party did not have enough collateral to cover the order"
            },
            {
              "name": "ORDER_ERROR_MISSING_GENERAL_ACCOUNT",
              "number": "15",
              "description": "Order was submitted, but the party did not have an account for this asset"
            },
            {
              "name": "ORDER_ERROR_INTERNAL_ERROR",
              "number": "16",
              "description": "Unspecified internal error"
            },
            {
              "name": "ORDER_ERROR_INVALID_SIZE",
              "number": "17",
              "description": "Order was submitted with an invalid or missing size (e.g. 0)"
            },
            {
              "name": "ORDER_ERROR_INVALID_PERSISTENCE",
              "number": "18",
              "description": "Order was submitted with an invalid persistence for its type"
            },
            {
              "name": "ORDER_ERROR_INVALID_TYPE",
              "number": "19",
              "description": "Order was submitted with an invalid type field"
            },
            {
              "name": "ORDER_ERROR_SELF_TRADING",
              "number": "20",
              "description": "Order was stopped as it would have traded with another order submitted from the same party"
            },
            {
              "name": "ORDER_ERROR_INSUFFICIENT_FUNDS_TO_PAY_FEES",
              "number": "21",
              "description": "Order was submitted, but the party did not have enough collateral to cover the fees for the order"
            },
            {
              "name": "ORDER_ERROR_INCORRECT_MARKET_TYPE",
              "number": "22",
              "description": "Order was submitted with an incorrect or invalid market type"
            },
            {
              "name": "ORDER_ERROR_INVALID_TIME_IN_FORCE",
              "number": "23",
              "description": "Order was submitted with invalid time in force"
            },
            {
              "name": "ORDER_ERROR_GFN_ORDER_DURING_AN_AUCTION",
              "number": "24",
              "description": "A GFN order has got to the market when it is in auction mode"
            },
            {
              "name": "ORDER_ERROR_GFA_ORDER_DURING_CONTINUOUS_TRADING",
              "number": "25",
              "description": "A GFA order has got to the market when it is in continuous trading mode"
            },
            {
              "name": "ORDER_ERROR_CANNOT_AMEND_TO_GTT_WITHOUT_EXPIRYAT",
              "number": "26",
              "description": "Attempt to amend order to GTT without ExpiryAt"
            },
            {
              "name": "ORDER_ERROR_EXPIRYAT_BEFORE_CREATEDAT",
              "number": "27",
              "description": "Attempt to amend ExpiryAt to a value before CreatedAt"
            },
            {
              "name": "ORDER_ERROR_CANNOT_HAVE_GTC_AND_EXPIRYAT",
              "number": "28",
              "description": "Attempt to amend to GTC without an ExpiryAt value"
            },
            {
              "name": "ORDER_ERROR_CANNOT_AMEND_TO_FOK_OR_IOC",
              "number": "29",
              "description": "Amending to FOK or IOC is invalid"
            },
            {
              "name": "ORDER_ERROR_CANNOT_AMEND_TO_GFA_OR_GFN",
              "number": "30",
              "description": "Amending to GFA or GFN is invalid"
            },
            {
              "name": "ORDER_ERROR_CANNOT_AMEND_FROM_GFA_OR_GFN",
              "number": "31",
              "description": "Amending from GFA or GFN is invalid"
            },
            {
              "name": "ORDER_ERROR_CANNOT_SEND_IOC_ORDER_DURING_AUCTION",
              "number": "32",
              "description": "IOC orders are not allowed during auction"
            },
            {
              "name": "ORDER_ERROR_CANNOT_SEND_FOK_ORDER_DURING_AUCTION",
              "number": "33",
              "description": "FOK orders are not allowed during auction"
            },
            {
              "name": "ORDER_ERROR_MUST_BE_LIMIT_ORDER",
              "number": "34",
              "description": "Pegged orders must be LIMIT orders"
            },
            {
              "name": "ORDER_ERROR_MUST_BE_GTT_OR_GTC",
              "number": "35",
              "description": "Pegged orders can only have TIF GTC or GTT"
            },
            {
              "name": "ORDER_ERROR_WITHOUT_REFERENCE_PRICE",
              "number": "36",
              "description": "Pegged order must have a reference price"
            },
            {
              "name": "ORDER_ERROR_BUY_CANNOT_REFERENCE_BEST_ASK_PRICE",
              "number": "37",
              "description": "Buy pegged order cannot reference best ask price"
            },
            {
              "name": "ORDER_ERROR_OFFSET_MUST_BE_GREATER_OR_EQUAL_TO_ZERO",
              "number": "40",
              "description": "Pegged order offset must be \u003e= 0"
            },
            {
              "name": "ORDER_ERROR_SELL_CANNOT_REFERENCE_BEST_BID_PRICE",
              "number": "41",
              "description": "Sell pegged order cannot reference best bid price"
            },
            {
              "name": "ORDER_ERROR_OFFSET_MUST_BE_GREATER_THAN_ZERO",
              "number": "42",
              "description": "Pegged order offset must be \u003e zero"
            },
            {
              "name": "ORDER_ERROR_INSUFFICIENT_ASSET_BALANCE",
              "number": "43",
              "description": "The party has an insufficient balance, or does not have\na general account to submit the order (no deposits made\nfor the required asset)"
            },
            {
              "name": "ORDER_ERROR_CANNOT_AMEND_PEGGED_ORDER_DETAILS_ON_NON_PEGGED_ORDER",
              "number": "44",
              "description": "Cannot amend a non pegged orders details"
            },
            {
              "name": "ORDER_ERROR_UNABLE_TO_REPRICE_PEGGED_ORDER",
              "number": "45",
              "description": "We are unable to re-price a pegged order because a market price is unavailable"
            },
            {
              "name": "ORDER_ERROR_UNABLE_TO_AMEND_PRICE_ON_PEGGED_ORDER",
              "number": "46",
              "description": "It is not possible to amend the price of an existing pegged order"
            },
            {
              "name": "ORDER_ERROR_NON_PERSISTENT_ORDER_OUT_OF_PRICE_BOUNDS",
              "number": "47",
              "description": "An FOK, IOC, or GFN order was rejected because it resulted in trades outside the price bounds"
            }
          ]
        },
        {
          "name": "PeggedReference",
          "longName": "PeggedReference",
          "fullName": "vega.PeggedReference",
          "description": "A pegged reference defines which price point a pegged order is linked to - meaning\nthe price for a pegged order is calculated from the value of the reference price point",
          "values": [
            {
              "name": "PEGGED_REFERENCE_UNSPECIFIED",
              "number": "0",
              "description": "Default value for PeggedReference, no reference given"
            },
            {
              "name": "PEGGED_REFERENCE_MID",
              "number": "1",
              "description": "Mid price reference"
            },
            {
              "name": "PEGGED_REFERENCE_BEST_BID",
              "number": "2",
              "description": "Best bid price reference"
            },
            {
              "name": "PEGGED_REFERENCE_BEST_ASK",
              "number": "3",
              "description": "Best ask price reference"
            }
          ]
        },
        {
          "name": "Side",
          "longName": "Side",
          "fullName": "vega.Side",
          "description": "A side relates to the direction of an order, to Buy, or Sell",
          "values": [
            {
              "name": "SIDE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "SIDE_BUY",
              "number": "1",
              "description": "Buy order"
            },
            {
              "name": "SIDE_SELL",
              "number": "2",
              "description": "Sell order"
            }
          ]
        },
        {
          "name": "Type",
          "longName": "Trade.Type",
          "fullName": "vega.Trade.Type",
          "description": "Type values for a trade",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "TYPE_DEFAULT",
              "number": "1",
              "description": "Normal trading between two parties"
            },
            {
              "name": "TYPE_NETWORK_CLOSE_OUT_GOOD",
              "number": "2",
              "description": "Trading initiated by the network with another party on the book,\nwhich helps to zero-out the positions of one or more distressed parties"
            },
            {
              "name": "TYPE_NETWORK_CLOSE_OUT_BAD",
              "number": "3",
              "description": "Trading initiated by the network with another party off the book,\nwith a distressed party in order to zero-out the position of the party"
            }
          ]
        },
        {
          "name": "TransferType",
          "longName": "TransferType",
          "fullName": "vega.TransferType",
          "description": "Transfers can occur between parties on Vega, these are the types that indicate why a transfer took place",
          "values": [
            {
              "name": "TRANSFER_TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "TRANSFER_TYPE_LOSS",
              "number": "1",
              "description": "Loss"
            },
            {
              "name": "TRANSFER_TYPE_WIN",
              "number": "2",
              "description": "Win"
            },
            {
              "name": "TRANSFER_TYPE_CLOSE",
              "number": "3",
              "description": "Close"
            },
            {
              "name": "TRANSFER_TYPE_MTM_LOSS",
              "number": "4",
              "description": "Mark to market loss"
            },
            {
              "name": "TRANSFER_TYPE_MTM_WIN",
              "number": "5",
              "description": "Mark to market win"
            },
            {
              "name": "TRANSFER_TYPE_MARGIN_LOW",
              "number": "6",
              "description": "Margin too low"
            },
            {
              "name": "TRANSFER_TYPE_MARGIN_HIGH",
              "number": "7",
              "description": "Margin too high"
            },
            {
              "name": "TRANSFER_TYPE_MARGIN_CONFISCATED",
              "number": "8",
              "description": "Margin was confiscated"
            },
            {
              "name": "TRANSFER_TYPE_MAKER_FEE_PAY",
              "number": "9",
              "description": "Pay maker fee"
            },
            {
              "name": "TRANSFER_TYPE_MAKER_FEE_RECEIVE",
              "number": "10",
              "description": "Receive maker fee"
            },
            {
              "name": "TRANSFER_TYPE_INFRASTRUCTURE_FEE_PAY",
              "number": "11",
              "description": "Pay infrastructure fee"
            },
            {
              "name": "TRANSFER_TYPE_INFRASTRUCTURE_FEE_DISTRIBUTE",
              "number": "12",
              "description": "Receive infrastructure fee"
            },
            {
              "name": "TRANSFER_TYPE_LIQUIDITY_FEE_PAY",
              "number": "13",
              "description": "Pay liquidity fee"
            },
            {
              "name": "TRANSFER_TYPE_LIQUIDITY_FEE_DISTRIBUTE",
              "number": "14",
              "description": "Receive liquidity fee"
            },
            {
              "name": "TRANSFER_TYPE_BOND_LOW",
              "number": "15",
              "description": "Bond too low"
            },
            {
              "name": "TRANSFER_TYPE_BOND_HIGH",
              "number": "16",
              "description": "Bond too high"
            },
            {
              "name": "TRANSFER_TYPE_WITHDRAW_LOCK",
              "number": "17",
              "description": "Lock amount for withdraw"
            },
            {
              "name": "TRANSFER_TYPE_WITHDRAW",
              "number": "18",
              "description": "Actual withdraw from system"
            },
            {
              "name": "TRANSFER_TYPE_DEPOSIT",
              "number": "19",
              "description": "Deposit funds"
            },
            {
              "name": "TRANSFER_TYPE_BOND_SLASHING",
              "number": "20",
              "description": "Bond slashing"
            },
            {
              "name": "TRANSFER_TYPE_STAKE_REWARD",
              "number": "21",
              "description": "Stake reward"
            },
            {
              "name": "TRANSFER_TYPE_TRANSFER_FUNDS_SEND",
              "number": "22",
              "description": "Transfer funds"
            },
            {
              "name": "TRANSFER_TYPE_TRANSFER_FUNDS_DISTRIBUTE",
              "number": "23",
              "description": "Transfer funds"
            }
          ]
        },
        {
          "name": "Status",
          "longName": "Withdrawal.Status",
          "fullName": "vega.Withdrawal.Status",
          "description": "The status of the withdrawal",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "STATUS_OPEN",
              "number": "1",
              "description": "The withdrawal is open and being processed by the network"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "2",
              "description": "The withdrawal have been cancelled"
            },
            {
              "name": "STATUS_FINALIZED",
              "number": "3",
              "description": "The withdrawal went through and is fully finalised, the funds are removed from the\nVega network and are unlocked on the foreign chain bridge, for example, on the Ethereum network"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Account",
          "longName": "Account",
          "fullName": "vega.Account",
          "description": "Represents an account for an asset on Vega for a particular owner or party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique account identifier (used internally by Vega)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "The party that the account belongs to, special values include `network`, which represents the Vega network and is\nmost commonly seen during liquidation of distressed trading positions",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "Balance of the asset, the balance is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places\nand importantly balances cannot be negative",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset identifier for the account",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier for the account, if [`AccountType`](#vega.AccountType).`ACCOUNT_TYPE_GENERAL` this will be empty",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "The account type related to this account",
              "label": "",
              "type": "AccountType",
              "longType": "AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AuctionIndicativeState",
          "longName": "AuctionIndicativeState",
          "fullName": "vega.AuctionIndicativeState",
          "description": "AuctionIndicativeState is used to emit an event with the indicative price/volume per market during an auction",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "The market identifier for which this state relates to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "indicative_price",
              "description": "The Indicative Uncrossing Price is the price at which all trades would occur if we uncrossed the auction now",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "indicative_volume",
              "description": "The Indicative Uncrossing Volume is the volume available at the Indicative crossing price if we uncrossed the auction now",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_start",
              "description": "The timestamp at which the auction started",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_end",
              "description": "The timestamp at which the auction is meant to stop",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Candle",
          "longName": "Candle",
          "fullName": "vega.Candle",
          "description": "Represents the high, low, open, and closing prices for an interval of trading,\nreferred to commonly as a candlestick or candle",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "timestamp",
              "description": "Timestamp for the point in time when the candle was initially created/opened, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "datetime",
              "description": "An ISO-8601 datetime with nanosecond precision for when the candle was last updated",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "high",
              "description": "Highest price for trading during the candle interval",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "low",
              "description": "Lowest price for trading during the candle interval",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "open",
              "description": "Open trade price",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "close",
              "description": "Closing trade price",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "Total trading volume during the candle interval",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "interval",
              "description": "Time interval for the candle - See [`Interval`](#vega.Interval)",
              "label": "",
              "type": "Interval",
              "longType": "Interval",
              "fullType": "vega.Interval",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Delegation",
          "longName": "Delegation",
          "fullName": "vega.Delegation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "Party which is delegating",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "Node ID",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount delegated",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch of delegation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Deposit",
          "longName": "Deposit",
          "fullName": "vega.Deposit",
          "description": "A deposit on to the Vega network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique identifier for the deposit",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the deposit",
              "label": "",
              "type": "Status",
              "longType": "Deposit.Status",
              "fullType": "vega.Deposit.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier of the user initiating the deposit",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "The Vega asset targeted by this deposit",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount to be deposited",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "The hash of the transaction from the foreign chain",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "credited_timestamp",
              "description": "Timestamp for when the Vega account was updated with the deposit",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_timestamp",
              "description": "Timestamp for when the deposit was created on the Vega network",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Epoch",
          "longName": "Epoch",
          "fullName": "vega.Epoch",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "seq",
              "description": "Sequence is used as epoch identifier",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamps",
              "description": "Timestamps for start/end etc",
              "label": "",
              "type": "EpochTimestamps",
              "longType": "EpochTimestamps",
              "fullType": "vega.EpochTimestamps",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validators",
              "description": "Validators that participated in this epoch",
              "label": "repeated",
              "type": "Node",
              "longType": "Node",
              "fullType": "vega.Node",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "delegations",
              "description": "List of all delegations in epoch",
              "label": "repeated",
              "type": "Delegation",
              "longType": "Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochData",
          "longName": "EpochData",
          "fullName": "vega.EpochData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "total",
              "description": "Total number of epochs since node was created",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "offline",
              "description": "Total number of offline epochs since node was created",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "online",
              "description": "Total number of online epochs since node was created",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochParticipation",
          "longName": "EpochParticipation",
          "fullName": "vega.EpochParticipation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "",
              "label": "",
              "type": "Epoch",
              "longType": "Epoch",
              "fullType": "vega.Epoch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "offline",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "online",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_rewards",
              "description": "",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochTimestamps",
          "longName": "EpochTimestamps",
          "fullName": "vega.EpochTimestamps",
          "description": "Describes in both human readable and block time when an epoch spans",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "start_time",
              "description": "Timestamp of epoch start in nanoseconds\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expiry_time",
              "description": "Timestamp of epoch expiry in nanoseconds\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_time",
              "description": "Timestamp of epoch end in nanoseconds, empty if not started\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "first_block",
              "description": "Height of first block in the epoch",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_block",
              "description": "Height of last block in the epoch, empty if not ended",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Erc20WithdrawExt",
          "longName": "Erc20WithdrawExt",
          "fullName": "vega.Erc20WithdrawExt",
          "description": "An extension of data required for the withdraw submissions",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "receiver_address",
              "description": "The address into which the bridge will release the funds",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ErrorDetail",
          "longName": "ErrorDetail",
          "fullName": "vega.ErrorDetail",
          "description": "Represents Vega domain specific error information over gRPC/Protobuf",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "code",
              "description": "A Vega API domain specific unique error code, useful for client side mappings, e.g. 10004",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "A message that describes the error in more detail, should describe the problem encountered",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "inner",
              "description": "Any inner error information that could add more context, or be helpful for error reporting",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthereumConfig",
          "longName": "EthereumConfig",
          "fullName": "vega.EthereumConfig",
          "description": "Ethereum configuration details.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "network_id",
              "description": "Network identifier of this Ethereum network.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_id",
              "description": "Chain identifier of this Ethereum network.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collateral_bridge_contract",
              "description": "Contract configuration of the collateral bridge contract for this Ethereum network.",
              "label": "",
              "type": "EthereumContractConfig",
              "longType": "EthereumContractConfig",
              "fullType": "vega.EthereumContractConfig",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "confirmations",
              "description": "Number of block confirmations to wait to consider an Ethereum transaction trusted.\nAn Ethereum block is trusted when there are at least \"n\" blocks confirmed by the\nnetwork, \"n\" being the number of `confirmations` required. If `confirmations` was set to `3`,\nand the current block to be forged (or mined) on Ethereum is block 14, block\n10 would be considered as trusted, but not block 11.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staking_bridge_contract",
              "description": "Contract configuration of the stacking bridge contract for this Ethereum network.",
              "label": "",
              "type": "EthereumContractConfig",
              "longType": "EthereumContractConfig",
              "fullType": "vega.EthereumContractConfig",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "token_vesting_contract",
              "description": "Contract configuration of the token vesting contract for this Ethereum network.",
              "label": "",
              "type": "EthereumContractConfig",
              "longType": "EthereumContractConfig",
              "fullType": "vega.EthereumContractConfig",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthereumContractConfig",
          "longName": "EthereumContractConfig",
          "fullName": "vega.EthereumContractConfig",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "Address of the contract for this Ethereum network. The address should start with \"0x\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "deployment_block_height",
              "description": "Block height at which the stacking contract has been deployed for this Ethereum network.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Fee",
          "longName": "Fee",
          "fullName": "vega.Fee",
          "description": "Represents any fees paid by a party, resulting from a trade",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "maker_fee",
              "description": "Fee amount paid to the non-aggressive party of the trade",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "infrastructure_fee",
              "description": "Fee amount paid for maintaining the Vega infrastructure",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_fee",
              "description": "Fee amount paid to market makers",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FinancialAmount",
          "longName": "FinancialAmount",
          "fullName": "vega.FinancialAmount",
          "description": "Asset value information used within a transfer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "amount",
              "description": "A signed integer amount of asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "KeyValueBundle",
          "longName": "KeyValueBundle",
          "fullName": "vega.KeyValueBundle",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tolerance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "StateVarValue",
              "longType": "StateVarValue",
              "fullType": "vega.StateVarValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LedgerEntry",
          "longName": "LedgerEntry",
          "fullName": "vega.LedgerEntry",
          "description": "Represents a ledger entry on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from_account",
              "description": "One or more accounts to transfer from",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_account",
              "description": "One or more accounts to transfer to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "An amount to transfer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "A reference for auditing purposes",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type of ledger entry",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Timestamp for the time the ledger entry was created, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityOrder",
          "longName": "LiquidityOrder",
          "fullName": "vega.LiquidityOrder",
          "description": "Represents a liquidity order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "reference",
              "description": "The pegged reference point for the order",
              "label": "",
              "type": "PeggedReference",
              "longType": "PeggedReference",
              "fullType": "vega.PeggedReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proportion",
              "description": "The relative proportion of the commitment to be allocated at a price level",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "offset",
              "description": "The offset/amount of units away for the order",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityOrderReference",
          "longName": "LiquidityOrderReference",
          "fullName": "vega.LiquidityOrderReference",
          "description": "A pair of a liquidity order and the id of the generated order by the core",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order_id",
              "description": "Unique identifier of the pegged order generated by the core to fulfil this liquidity order",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_order",
              "description": "The liquidity order from the original submission",
              "label": "",
              "type": "LiquidityOrder",
              "longType": "LiquidityOrder",
              "fullType": "vega.LiquidityOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProviderFeeShare",
          "longName": "LiquidityProviderFeeShare",
          "fullName": "vega.LiquidityProviderFeeShare",
          "description": "The equity like share of liquidity fee for each liquidity provider",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "The liquidity provider party id",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "equity_like_share",
              "description": "The share own by this liquidity provider (float)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "average_entry_valuation",
              "description": "The average entry valuation of the liquidity provider for the market",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvision",
          "longName": "LiquidityProvision",
          "fullName": "vega.LiquidityProvision",
          "description": "An Liquidity provider commitment",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Unique party identifier for the creator of the provision",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Timestamp for when the order was created at, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Timestamp for when the order was updated at, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier for the order, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "commitment_amount",
              "description": "Specified as a unitless number that represents the amount of settlement asset of the market",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee",
              "description": "Nominated liquidity fee factor, which is an input to the calculation of taker fees on the market, as per seeting fees and rewarding liquidity providers",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sells",
              "description": "A set of liquidity sell orders to meet the liquidity provision obligation",
              "label": "repeated",
              "type": "LiquidityOrderReference",
              "longType": "LiquidityOrderReference",
              "fullType": "vega.LiquidityOrderReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buys",
              "description": "A set of liquidity buy orders to meet the liquidity provision obligation",
              "label": "repeated",
              "type": "LiquidityOrderReference",
              "longType": "LiquidityOrderReference",
              "fullType": "vega.LiquidityOrderReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of this liquidity provision order",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of this liquidity provision order",
              "label": "",
              "type": "Status",
              "longType": "LiquidityProvision.Status",
              "fullType": "vega.LiquidityProvision.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "A reference shared between this liquidity provision and all it's orders",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarginLevels",
          "longName": "MarginLevels",
          "fullName": "vega.MarginLevels",
          "description": "Represents the margin levels for a party on a market at a given time",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "maintenance_margin",
              "description": "Maintenance margin value",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "search_level",
              "description": "Search level value",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "initial_margin",
              "description": "Initial margin value",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collateral_release_level",
              "description": "Collateral release level value",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Timestamp for the time the ledger entry was created, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketData",
          "longName": "MarketData",
          "fullName": "vega.MarketData",
          "description": "Represents data generated by a market when open",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "mark_price",
              "description": "Mark price, as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_bid_price",
              "description": "Highest price level on an order book for buy orders, as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_bid_volume",
              "description": "Aggregated volume being bid at the best bid price",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_offer_price",
              "description": "Lowest price level on an order book for offer orders",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_offer_volume",
              "description": "Aggregated volume being offered at the best offer price, as an integer, for example `123456` is a correctly\n // formatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_static_bid_price",
              "description": "Highest price on the order book for buy orders not including pegged orders",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_static_bid_volume",
              "description": "Total volume at the best static bid price excluding pegged orders",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_static_offer_price",
              "description": "Lowest price on the order book for sell orders not including pegged orders",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_static_offer_volume",
              "description": "Total volume at the best static offer price excluding pegged orders",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "mid_price",
              "description": "Arithmetic average of the best bid price and best offer price, as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "static_mid_price",
              "description": "Arithmetic average of the best static bid price and best static offer price",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market",
              "description": "Market identifier for the data",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Timestamp at which this mark price was relevant, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "open_interest",
              "description": "The sum of the size of all positions greater than 0 on the market",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_end",
              "description": "Time in seconds until the end of the auction (0 if currently not in auction period)",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_start",
              "description": "Time until next auction (used in FBA's) - currently always 0",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "indicative_price",
              "description": "Indicative price (zero if not in auction)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "indicative_volume",
              "description": "Indicative volume (zero if not in auction)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_trading_mode",
              "description": "The current trading mode for the market",
              "label": "",
              "type": "TradingMode",
              "longType": "Market.TradingMode",
              "fullType": "vega.Market.TradingMode",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trigger",
              "description": "When a market is in an auction trading mode, this field indicates what triggered the auction",
              "label": "",
              "type": "AuctionTrigger",
              "longType": "AuctionTrigger",
              "fullType": "vega.AuctionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "extension_trigger",
              "description": "When a market auction is extended, this field indicates what caused the extension",
              "label": "",
              "type": "AuctionTrigger",
              "longType": "AuctionTrigger",
              "fullType": "vega.AuctionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_stake",
              "description": "Targeted stake for the given market",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "supplied_stake",
              "description": "Available stake for the given market",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_monitoring_bounds",
              "description": "One or more price monitoring bounds for the current timestamp",
              "label": "repeated",
              "type": "PriceMonitoringBounds",
              "longType": "PriceMonitoringBounds",
              "fullType": "vega.PriceMonitoringBounds",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_value_proxy",
              "description": "the market value proxy",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provider_fee_share",
              "description": "the equity like share of liquidity fee for each liquidity provider",
              "label": "repeated",
              "type": "LiquidityProviderFeeShare",
              "longType": "LiquidityProviderFeeShare",
              "fullType": "vega.LiquidityProviderFeeShare",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDepth",
          "longName": "MarketDepth",
          "fullName": "vega.MarketDepth",
          "description": "Represents market depth or order book data for the specified market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy",
              "description": "Collection of price levels for the buy side of the book",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell",
              "description": "Collection of price levels for the sell side of the book",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sequence_number",
              "description": "Sequence number for the market depth data returned",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDepthUpdate",
          "longName": "MarketDepthUpdate",
          "fullName": "vega.MarketDepthUpdate",
          "description": "Represents the changed market depth since the last update",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy",
              "description": "Collection of updated price levels for the buy side of the book",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell",
              "description": "Collection of updated price levels for the sell side of the book",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sequence_number",
              "description": "Sequence number for the market depth update data returned",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MatrixValue",
          "longName": "MatrixValue",
          "fullName": "vega.MatrixValue",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "repeated",
              "type": "VectorValue",
              "longType": "VectorValue",
              "fullType": "vega.VectorValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NetworkLimits",
          "longName": "NetworkLimits",
          "fullName": "vega.NetworkLimits",
          "description": "Network limits, defined in the genesis file",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "can_propose_market",
              "description": "Are market proposals allowed at this point in time",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "can_propose_asset",
              "description": "Are asset proposals allowed at this point in time",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bootstrap_finished",
              "description": "True once block count \u003e bootstrapBlockCount",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_market_enabled",
              "description": "Are market proposals enabled on this chain",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_asset_enabled",
              "description": "Are asset proposals enabled on this chain",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bootstrap_block_count",
              "description": "How many blocks before the chain comes out of bootstrap mode",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "genesis_loaded",
              "description": "True once the genesis file is loaded",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_market_enabled_from",
              "description": "The date/timestamp in unix nanoseconds at which market proposals will be enabled (0 indicates not set)",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_asset_enabled_from",
              "description": "The date/timestamp in unix nanoseconds at which asset proposals will be enabled (0 indicates not set)",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NetworkParameter",
          "longName": "NetworkParameter",
          "fullName": "vega.NetworkParameter",
          "description": "Represents a network parameter on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "The unique key",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "The value for the network parameter",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Node",
          "longName": "Node",
          "fullName": "vega.Node",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The node ID (wallet ID)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pub_key",
              "description": "Pub key of the node operator",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tm_pub_key",
              "description": "Public key of Tendermint",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_adddress",
              "description": "Ethereum public key of the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "info_url",
              "description": "URL where I can find out more info on the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "location",
              "description": "Country code for the location of the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staked_by_operator",
              "description": "The amount the node has put up themselves",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staked_by_delegates",
              "description": "The amount of stake that has been delegated by token holders",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staked_total",
              "description": "Total amount staked on node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_intended_stake",
              "description": "Max amount of (wanted) stake, is this a network param or a node param",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_stake",
              "description": "Amount of stake on the next epoch",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_data",
              "description": "Informantion about epoch",
              "label": "",
              "type": "EpochData",
              "longType": "EpochData",
              "fullType": "vega.EpochData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Node status",
              "label": "",
              "type": "NodeStatus",
              "longType": "NodeStatus",
              "fullType": "vega.NodeStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "delegations",
              "description": "Node's delegations",
              "label": "repeated",
              "type": "Delegation",
              "longType": "Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "score",
              "description": "Node score",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "normalised_score",
              "description": "Node normalised score",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Node name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "avatar_url",
              "description": "Avatar url",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "performance",
              "description": "Performance",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "raw_score",
              "description": "Raw Score",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeData",
          "longName": "NodeData",
          "fullName": "vega.NodeData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "staked_total",
              "description": "Total staked amount across all nodes",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_nodes",
              "description": "Total number of nodes",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "inactive_nodes",
              "description": "Number of inactive nodes",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validating_nodes",
              "description": "Number of nodes validating",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "uptime",
              "description": "Total uptime for all epochs across all nodes",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Order",
          "longName": "Order",
          "fullName": "vega.Order",
          "description": "An order can be submitted, amended and cancelled on Vega in an attempt to make trades with other parties",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique identifier for the order (set by the system after consensus)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier for the order",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier for the order",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "side",
              "description": "Side for the order, e.g. SIDE_BUY or SIDE_SELL - See [`Side`](#vega.Side)",
              "label": "",
              "type": "Side",
              "longType": "Side",
              "fullType": "vega.Side",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price for the order, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Size for the order, for example, in a futures market the size equals the number of contracts",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "remaining",
              "description": "Size remaining, when this reaches 0 then the order is fully filled and status becomes STATUS_FILLED",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time_in_force",
              "description": "Time in force indicates how long an order will remain active before it is executed or expires.\n- See [`Order.TimeInForce`](#vega.Order.TimeInForce)",
              "label": "",
              "type": "TimeInForce",
              "longType": "Order.TimeInForce",
              "fullType": "vega.Order.TimeInForce",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type for the order - See [`Order.Type`](#vega.Order.Type)",
              "label": "",
              "type": "Type",
              "longType": "Order.Type",
              "fullType": "vega.Order.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Timestamp for when the order was created at, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "The current status for the order. See [`Order.Status`](#vega.Order.Status)\n- For detail on `STATUS_REJECTED` please check the [`OrderError`](#vega.OrderError) value given in the `reason` field",
              "label": "",
              "type": "Status",
              "longType": "Order.Status",
              "fullType": "vega.Order.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expires_at",
              "description": "Timestamp for when the order will expire, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`, valid only for [`Order.TimeInForce`](#vega.Order.TimeInForce)`.TIME_IN_FORCE_GTT`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "Reference given for the order, this is typically used to retrieve an order submitted through consensus\n- Currently set internally by the node to return a unique reference identifier for the order submission",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "If the Order `status` is `STATUS_REJECTED` then an [`OrderError`](#vega.OrderError) reason will be specified\n- The default for this field is `ORDER_ERROR_NONE` which signifies that there were no errors",
              "label": "",
              "type": "OrderError",
              "longType": "OrderError",
              "fullType": "vega.OrderError",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Timestamp for when the Order was last updated, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "The version for the order, initial value is version 1 and is incremented after each successful amend",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "batch_id",
              "description": "Batch identifier for the order, used internally for orders submitted during auctions\nto keep track of the auction batch this order falls under (required for fees calculation)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pegged_order",
              "description": "Pegged order details, used only if the order represents a pegged order.",
              "label": "",
              "type": "PeggedOrder",
              "longType": "PeggedOrder",
              "fullType": "vega.PeggedOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_id",
              "description": "Is this order created as part of a liquidity provision, will be empty if not.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderCancellationConfirmation",
          "longName": "OrderCancellationConfirmation",
          "fullName": "vega.OrderCancellationConfirmation",
          "description": "Used when cancelling an Order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "The order that was cancelled",
              "label": "",
              "type": "Order",
              "longType": "Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderConfirmation",
          "longName": "OrderConfirmation",
          "fullName": "vega.OrderConfirmation",
          "description": "Used when confirming an Order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "The order that was confirmed",
              "label": "",
              "type": "Order",
              "longType": "Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trades",
              "description": "0 or more trades that were emitted",
              "label": "repeated",
              "type": "Trade",
              "longType": "Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "passive_orders_affected",
              "description": "0 or more passive orders that were affected",
              "label": "repeated",
              "type": "Order",
              "longType": "Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Party",
          "longName": "Party",
          "fullName": "vega.Party",
          "description": "A party represents an entity who wishes to trade on or query a Vega network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "A unique identifier for the party, typically represented by a public key",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PeggedOrder",
          "longName": "PeggedOrder",
          "fullName": "vega.PeggedOrder",
          "description": "Pegged orders are limit orders where the price is specified in the form REFERENCE +/- OFFSET\nThey can be used for any limit order that is valid during continuous trading",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "reference",
              "description": "Which price point are we linked to",
              "label": "",
              "type": "PeggedReference",
              "longType": "PeggedReference",
              "fullType": "vega.PeggedReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "offset",
              "description": "Offset from the price reference",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Position",
          "longName": "Position",
          "fullName": "vega.Position",
          "description": "Represents position data for a party on the specified market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "open_volume",
              "description": "Open volume for the position, value is signed +ve for long and -ve for short",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "realised_pnl",
              "description": "Realised profit and loss for the position, value is signed +ve for long and -ve for short",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "unrealised_pnl",
              "description": "Unrealised profit and loss for the position, value is signed +ve for long and -ve for short",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "average_entry_price",
              "description": "Average entry price for the position, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Timestamp for the latest time the position was updated",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionTrade",
          "longName": "PositionTrade",
          "fullName": "vega.PositionTrade",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "volume",
              "description": "Volume for the position trade, value is signed +ve for long and -ve for short",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price for the position trade, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Price",
          "longName": "Price",
          "fullName": "vega.Price",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "Price value, given as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceLevel",
          "longName": "PriceLevel",
          "fullName": "vega.PriceLevel",
          "description": "Represents a price level from market depth or order book data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "price",
              "description": "Price for the price level, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "number_of_orders",
              "description": "Number of orders at the price level",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "Volume at the price level",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceMonitoringBounds",
          "longName": "PriceMonitoringBounds",
          "fullName": "vega.PriceMonitoringBounds",
          "description": "Represents a list of valid (at the current timestamp) price ranges per associated trigger",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "min_valid_price",
              "description": "Minimum price that isn't currently breaching the specified price monitoring trigger",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_valid_price",
              "description": "Maximum price that isn't currently breaching the specified price monitoring trigger",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trigger",
              "description": "Price monitoring trigger associated with the bounds",
              "label": "",
              "type": "PriceMonitoringTrigger",
              "longType": "PriceMonitoringTrigger",
              "fullType": "vega.PriceMonitoringTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference_price",
              "description": "Reference price used to calculate the valid price range",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Reward",
          "longName": "Reward",
          "fullName": "vega.Reward",
          "description": "Details for a single reward payment",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "percentage_of_total",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "received_at",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardSummary",
          "longName": "RewardSummary",
          "fullName": "vega.RewardSummary",
          "description": "Details for rewards for a single asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Total amount of rewards for the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RiskFactor",
          "longName": "RiskFactor",
          "fullName": "vega.RiskFactor",
          "description": "Risk factors are used to calculate the current risk associated with orders trading on a given market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "Market ID that relates to this risk factor",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "short",
              "description": "Short Risk factor value",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "long",
              "description": "Long Risk factor value",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ScalarValue",
          "longName": "ScalarValue",
          "fullName": "vega.ScalarValue",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StateValueProposal",
          "longName": "StateValueProposal",
          "fullName": "vega.StateValueProposal",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "state_var_id",
              "description": "state variable identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "event_id",
              "description": "event identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "kvb",
              "description": "key value tolerance triplets",
              "label": "repeated",
              "type": "KeyValueBundle",
              "longType": "KeyValueBundle",
              "fullType": "vega.KeyValueBundle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StateVarValue",
          "longName": "StateVarValue",
          "fullName": "vega.StateVarValue",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "scalar_val",
              "description": "",
              "label": "",
              "type": "ScalarValue",
              "longType": "ScalarValue",
              "fullType": "vega.ScalarValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            },
            {
              "name": "vector_val",
              "description": "",
              "label": "",
              "type": "VectorValue",
              "longType": "VectorValue",
              "fullType": "vega.VectorValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            },
            {
              "name": "matrix_val",
              "description": "",
              "label": "",
              "type": "MatrixValue",
              "longType": "MatrixValue",
              "fullType": "vega.MatrixValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Timestamp",
          "longName": "Timestamp",
          "fullName": "vega.Timestamp",
          "description": "A timestamp in nanoseconds since epoch\nSee [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "Timestamp value",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Trade",
          "longName": "Trade",
          "fullName": "vega.Trade",
          "description": "A trade occurs when an aggressive order crosses one or more passive orders on the order book for a market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique identifier for the trade (generated by Vega)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier (the market that the trade occurred on)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price for the trade, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Size filled for the trade",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buyer",
              "description": "Unique party identifier for the buyer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seller",
              "description": "Unique party identifier for the seller",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "aggressor",
              "description": "Direction of the aggressive party e.g. SIDE_BUY or SIDE_SELL - See [`Side`](#vega.Side)",
              "label": "",
              "type": "Side",
              "longType": "Side",
              "fullType": "vega.Side",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy_order",
              "description": "Identifier of the order from the buy side",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell_order",
              "description": "Identifier of the order from the sell side",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Timestamp for when the trade occurred, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type for the trade - See [`Trade.Type`](#vega.Trade.Type)",
              "label": "",
              "type": "Type",
              "longType": "Trade.Type",
              "fullType": "vega.Trade.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buyer_fee",
              "description": "Fee amount charged to the buyer party for the trade",
              "label": "",
              "type": "Fee",
              "longType": "Fee",
              "fullType": "vega.Fee",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seller_fee",
              "description": "Fee amount charged to the seller party for the trade",
              "label": "",
              "type": "Fee",
              "longType": "Fee",
              "fullType": "vega.Fee",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buyer_auction_batch",
              "description": "Auction batch number that the buy side order was placed in",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seller_auction_batch",
              "description": "Auction batch number that the sell side order was placed in",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradeSet",
          "longName": "TradeSet",
          "fullName": "vega.TradeSet",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "trades",
              "description": "A set of one or more trades",
              "label": "repeated",
              "type": "Trade",
              "longType": "Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Transfer",
          "longName": "Transfer",
          "fullName": "vega.Transfer",
          "description": "Represents a financial transfer within Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "owner",
              "description": "Party identifier for the owner of the transfer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "A financial amount (of an asset) to transfer",
              "label": "",
              "type": "FinancialAmount",
              "longType": "FinancialAmount",
              "fullType": "vega.FinancialAmount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "The type of transfer, gives the reason for the transfer",
              "label": "",
              "type": "TransferType",
              "longType": "TransferType",
              "fullType": "vega.TransferType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "min_amount",
              "description": "A minimum amount",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferBalance",
          "longName": "TransferBalance",
          "fullName": "vega.TransferBalance",
          "description": "Represents the balance for an account during a transfer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "account",
              "description": "The account relating to the transfer",
              "label": "",
              "type": "Account",
              "longType": "Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "The balance relating to the transfer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferRequest",
          "longName": "TransferRequest",
          "fullName": "vega.TransferRequest",
          "description": "Represents a request to transfer from one set of accounts to another",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from_account",
              "description": "One or more accounts to transfer from",
              "label": "repeated",
              "type": "Account",
              "longType": "Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_account",
              "description": "One or more accounts to transfer to",
              "label": "repeated",
              "type": "Account",
              "longType": "Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "An amount to transfer for the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "min_amount",
              "description": "A minimum amount",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "A reference for auditing purposes",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferResponse",
          "longName": "TransferResponse",
          "fullName": "vega.TransferResponse",
          "description": "Represents the response from a transfer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfers",
              "description": "One or more ledger entries representing the transfers",
              "label": "repeated",
              "type": "LedgerEntry",
              "longType": "LedgerEntry",
              "fullType": "vega.LedgerEntry",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balances",
              "description": "One or more account balances",
              "label": "repeated",
              "type": "TransferBalance",
              "longType": "TransferBalance",
              "fullType": "vega.TransferBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Uint64Value",
          "longName": "Uint64Value",
          "fullName": "vega.Uint64Value",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VectorValue",
          "longName": "VectorValue",
          "fullName": "vega.VectorValue",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WithdrawExt",
          "longName": "WithdrawExt",
          "fullName": "vega.WithdrawExt",
          "description": "Withdrawal external details",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "erc20",
              "description": "ERC20 withdrawal details",
              "label": "",
              "type": "Erc20WithdrawExt",
              "longType": "Erc20WithdrawExt",
              "fullType": "vega.Erc20WithdrawExt",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "ext",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Withdrawal",
          "longName": "Withdrawal",
          "fullName": "vega.Withdrawal",
          "description": "A withdrawal from the Vega network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique identifier for the withdrawal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Unique party identifier of the user initiating the withdrawal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount to be withdrawn",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "The asset we want to withdraw funds from",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "The status of the withdrawal",
              "label": "",
              "type": "Status",
              "longType": "Withdrawal.Status",
              "fullType": "vega.Withdrawal.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ref",
              "description": "The reference which is used by the foreign chain\nto refer to this withdrawal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expiry",
              "description": "The time until when the withdrawal is valid",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "The hash of the foreign chain for this transaction",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_timestamp",
              "description": "Timestamp for when the network started to process this withdrawal",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdrawn_timestamp",
              "description": "Timestamp for when the withdrawal was finalised by the network",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ext",
              "description": "Foreign chain specifics",
              "label": "",
              "type": "WithdrawExt",
              "longType": "WithdrawExt",
              "fullType": "vega.WithdrawExt",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}