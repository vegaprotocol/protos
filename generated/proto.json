{
  "files": [
    {
      "name": "vega/assets.proto",
      "description": "",
      "package": "vega",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "Status",
          "longName": "Asset.Status",
          "fullName": "vega.Asset.Status",
          "description": "",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "STATUS_PROPOSED",
              "number": "1",
              "description": "Asset is proposed and under vote"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "2",
              "description": "Asset has been rejected from governance"
            },
            {
              "name": "STATUS_PENDING_LISTING",
              "number": "3",
              "description": "Asset is pending listing from the bridge"
            },
            {
              "name": "STATUS_ENABLED",
              "number": "4",
              "description": "Asset is fully usable in the network"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Asset",
          "longName": "Asset",
          "fullName": "vega.Asset",
          "description": "The Vega representation of an external asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Internal identifier of the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "details",
              "description": "The definition of the external source for this asset",
              "label": "",
              "type": "AssetDetails",
              "longType": "AssetDetails",
              "fullType": "vega.AssetDetails",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the asset",
              "label": "",
              "type": "Status",
              "longType": "Asset.Status",
              "fullType": "vega.Asset.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetDetails",
          "longName": "AssetDetails",
          "fullName": "vega.AssetDetails",
          "description": "The Vega representation of an external asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the asset (e.g: Great British Pound)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "symbol",
              "description": "Symbol of the asset (e.g: GBP)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_supply",
              "description": "Total circulating supply for the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "decimals",
              "description": "Number of decimal / precision handled by this asset",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quantum",
              "description": "The minimum economically meaningful amount in the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "builtin_asset",
              "description": "A built-in asset",
              "label": "",
              "type": "BuiltinAsset",
              "longType": "BuiltinAsset",
              "fullType": "vega.BuiltinAsset",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source",
              "defaultValue": ""
            },
            {
              "name": "erc20",
              "description": "An Ethereum ERC20 asset",
              "label": "",
              "type": "ERC20",
              "longType": "ERC20",
              "fullType": "vega.ERC20",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetDetailsUpdate",
          "longName": "AssetDetailsUpdate",
          "fullName": "vega.AssetDetailsUpdate",
          "description": "The changes to apply on an existing asset.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the asset (e.g: Great British Pound)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "symbol",
              "description": "Symbol of the asset (e.g: GBP)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_supply",
              "description": "Total circulating supply for the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "decimals",
              "description": "Number of decimal / precision handled by this asset",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quantum",
              "description": "The minimum economically meaningful amount in the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "erc20",
              "description": "An Ethereum ERC20 asset",
              "label": "",
              "type": "ERC20Update",
              "longType": "ERC20Update",
              "fullType": "vega.ERC20Update",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BuiltinAsset",
          "longName": "BuiltinAsset",
          "fullName": "vega.BuiltinAsset",
          "description": "A Vega internal asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "max_faucet_amount_mint",
              "description": "Maximum amount that can be requested by a party through the built-in asset faucet at a time",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20",
          "longName": "ERC20",
          "fullName": "vega.ERC20",
          "description": "An ERC20 token based asset, living on the ethereum network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "contract_address",
              "description": "The address of the contract for the token, on the ethereum network",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lifetime_limit",
              "description": "The lifetime limits deposit per address\nnote: this is a temporary measure for restricted mainnet",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdraw_threshold",
              "description": "The maximum allowed per withdraw\nnote: this is a temporary measure for restricted mainnet",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20Update",
          "longName": "ERC20Update",
          "fullName": "vega.ERC20Update",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "lifetime_limit",
              "description": "The lifetime limits deposit per address.\nThis is will be interpreted against the asset decimals.\nnote: this is a temporary measure for restricted mainnet",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdraw_threshold",
              "description": "The maximum allowed per withdraw.\nThis is will be interpreted against the asset decimals.\nnote: this is a temporary measure for restricted mainnet",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/chain_events.proto",
      "description": "",
      "package": "vega",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "BuiltinAssetDeposit",
          "longName": "BuiltinAssetDeposit",
          "fullName": "vega.BuiltinAssetDeposit",
          "description": "A deposit for a Vega built-in asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "A Vega network internal asset identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "A Vega party identifier (pub-key)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount to be deposited",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BuiltinAssetEvent",
          "longName": "BuiltinAssetEvent",
          "fullName": "vega.BuiltinAssetEvent",
          "description": "An event related to a Vega built-in asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "deposit",
              "description": "Built-in asset deposit",
              "label": "",
              "type": "BuiltinAssetDeposit",
              "longType": "BuiltinAssetDeposit",
              "fullType": "vega.BuiltinAssetDeposit",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "withdrawal",
              "description": "Built-in asset withdrawal",
              "label": "",
              "type": "BuiltinAssetWithdrawal",
              "longType": "BuiltinAssetWithdrawal",
              "fullType": "vega.BuiltinAssetWithdrawal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BuiltinAssetWithdrawal",
          "longName": "BuiltinAssetWithdrawal",
          "fullName": "vega.BuiltinAssetWithdrawal",
          "description": "A withdrawal for a Vega built-in asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "A Vega network internal asset identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "A Vega network party identifier (pub-key)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount to be withdrawn",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20AssetDelist",
          "longName": "ERC20AssetDelist",
          "fullName": "vega.ERC20AssetDelist",
          "description": "An asset deny-listing for an ERC20 token",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "The Vega network internal identifier of the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20AssetLimitsUpdated",
          "longName": "ERC20AssetLimitsUpdated",
          "fullName": "vega.ERC20AssetLimitsUpdated",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "The Vega network internal identifier of the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "source_ethereum_address",
              "description": "The Ethereum wallet that initiated the deposit",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lifetime_limits",
              "description": "The updated lifetime limits",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdraw_threshold",
              "description": "The updated withdraw threshold",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20AssetList",
          "longName": "ERC20AssetList",
          "fullName": "vega.ERC20AssetList",
          "description": "An asset allow-listing for an ERC20 token",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "The Vega network internal identifier of the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_source",
              "description": "The ethereum address of the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20Deposit",
          "longName": "ERC20Deposit",
          "fullName": "vega.ERC20Deposit",
          "description": "An asset deposit for an ERC20 token",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "The vega network internal identifier of the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "source_ethereum_address",
              "description": "The Ethereum wallet that initiated the deposit",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_party_id",
              "description": "The Vega party identifier (pub-key) which is the target of the deposit",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount to be deposited",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20Event",
          "longName": "ERC20Event",
          "fullName": "vega.ERC20Event",
          "description": "An event related to an ERC20 token",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "index",
              "description": "Index of the log in the transaction",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "The block in which the transaction was added",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_list",
              "description": "List an ERC20 asset",
              "label": "",
              "type": "ERC20AssetList",
              "longType": "ERC20AssetList",
              "fullType": "vega.ERC20AssetList",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "asset_delist",
              "description": "De-list an ERC20 asset",
              "label": "",
              "type": "ERC20AssetDelist",
              "longType": "ERC20AssetDelist",
              "fullType": "vega.ERC20AssetDelist",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "deposit",
              "description": "Deposit ERC20 asset",
              "label": "",
              "type": "ERC20Deposit",
              "longType": "ERC20Deposit",
              "fullType": "vega.ERC20Deposit",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "withdrawal",
              "description": "Withdraw ERC20 asset",
              "label": "",
              "type": "ERC20Withdrawal",
              "longType": "ERC20Withdrawal",
              "fullType": "vega.ERC20Withdrawal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "asset_limits_updated",
              "description": "Update an ERC20 asset",
              "label": "",
              "type": "ERC20AssetLimitsUpdated",
              "longType": "ERC20AssetLimitsUpdated",
              "fullType": "vega.ERC20AssetLimitsUpdated",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigEvent",
          "longName": "ERC20MultiSigEvent",
          "fullName": "vega.ERC20MultiSigEvent",
          "description": "An event related to the ERC20 MultiSig",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "index",
              "description": "Index of the log in the transaction",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "The block in which the transaction was added",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer_added",
              "description": "Add a signer to the erc20 bridge",
              "label": "",
              "type": "ERC20SignerAdded",
              "longType": "ERC20SignerAdded",
              "fullType": "vega.ERC20SignerAdded",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "signer_removed",
              "description": "Remove a signer from the erc20 bridge",
              "label": "",
              "type": "ERC20SignerRemoved",
              "longType": "ERC20SignerRemoved",
              "fullType": "vega.ERC20SignerRemoved",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "threshold_set",
              "description": "Threshold set",
              "label": "",
              "type": "ERC20ThresholdSet",
              "longType": "ERC20ThresholdSet",
              "fullType": "vega.ERC20ThresholdSet",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20SignerAdded",
          "longName": "ERC20SignerAdded",
          "fullName": "vega.ERC20SignerAdded",
          "description": "A new signer added to the ERC20 bridge",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "new_signer",
              "description": "The ethereum address of the new signer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "The nonce create by the vega network used for this new signer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "The time at which the block was produced\nwill be used to inform the core at what time\nthe stake was made unavailable.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20SignerRemoved",
          "longName": "ERC20SignerRemoved",
          "fullName": "vega.ERC20SignerRemoved",
          "description": "A signer removed from the ERC20 bridge",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "old_signer",
              "description": "The ethereum address of the old signer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "The nonce create by the vega network used for this old signer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "The time at which the block was produced\nwill be used to inform the core at what time\nthe stake was made unavailable.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20ThresholdSet",
          "longName": "ERC20ThresholdSet",
          "fullName": "vega.ERC20ThresholdSet",
          "description": "The threshold have been updated on the multisigcontrol",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "new_threshold",
              "description": "The new threshold",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "The nonce create by the vega network",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "The time at which the block was produced\nwill be used to inform the core at what time\nthe stake was made unavailable.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20Withdrawal",
          "longName": "ERC20Withdrawal",
          "fullName": "vega.ERC20Withdrawal",
          "description": "An asset withdrawal for an ERC20 token",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_asset_id",
              "description": "The Vega network internal identifier of the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_ethereum_address",
              "description": "The target Ethereum wallet address",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference_nonce",
              "description": "The reference nonce used for the transaction",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeDeposited",
          "longName": "StakeDeposited",
          "fullName": "vega.StakeDeposited",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ethereum_address",
              "description": "Ethereum Address of the user depositing stake (hex encode with 0x prefix)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_public_key",
              "description": "The public of the party receiving the stake deposit (hex encode)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount deposited (base 10)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "The time at which the block was produced\nwill be used to inform the core at what time\nthe stake started to be available.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeRemoved",
          "longName": "StakeRemoved",
          "fullName": "vega.StakeRemoved",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ethereum_address",
              "description": "Ethereum address of the user removing stake (hex encode with 0x prefix)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_public_key",
              "description": "The public key of the party from which to remove stake (hex encode)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount removed (base 10)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "The time at which the block was produced\nwill be used to inform the core at what time\nthe stake was made unavailable.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeTotalSupply",
          "longName": "StakeTotalSupply",
          "fullName": "vega.StakeTotalSupply",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "token_address",
              "description": "The address of the staking asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_supply",
              "description": "The total supply observed for the token",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakingEvent",
          "longName": "StakingEvent",
          "fullName": "vega.StakingEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "index",
              "description": "Index of the log in the transaction",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "The block in which the transaction was added",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake_deposited",
              "description": "",
              "label": "",
              "type": "StakeDeposited",
              "longType": "StakeDeposited",
              "fullType": "vega.StakeDeposited",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "stake_removed",
              "description": "",
              "label": "",
              "type": "StakeRemoved",
              "longType": "StakeRemoved",
              "fullType": "vega.StakeRemoved",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "total_supply",
              "description": "",
              "label": "",
              "type": "StakeTotalSupply",
              "longType": "StakeTotalSupply",
              "fullType": "vega.StakeTotalSupply",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/governance.proto",
      "description": "",
      "package": "vega",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "State",
          "longName": "Proposal.State",
          "fullName": "vega.Proposal.State",
          "description": "Proposal state transition:\nOpen -\u003e\n  - Passed -\u003e Enacted.\n  - Passed -\u003e Failed.\n  - Declined\nRejected\nProposal can enter Failed state from any other state",
          "values": [
            {
              "name": "STATE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "STATE_FAILED",
              "number": "1",
              "description": "Proposal enactment has failed - even though proposal has passed, its execution could not be performed"
            },
            {
              "name": "STATE_OPEN",
              "number": "2",
              "description": "Proposal is open for voting"
            },
            {
              "name": "STATE_PASSED",
              "number": "3",
              "description": "Proposal has gained enough support to be executed"
            },
            {
              "name": "STATE_REJECTED",
              "number": "4",
              "description": "Proposal wasn't accepted (proposal terms failed validation due to wrong configuration or failing to meet network requirements)"
            },
            {
              "name": "STATE_DECLINED",
              "number": "5",
              "description": "Proposal didn't get enough votes (either failing to gain required participation or majority level)"
            },
            {
              "name": "STATE_ENACTED",
              "number": "6",
              "description": "Proposal enacted"
            },
            {
              "name": "STATE_WAITING_FOR_NODE_VOTE",
              "number": "7",
              "description": "Waiting for node validation of the proposal"
            }
          ]
        },
        {
          "name": "ProposalError",
          "longName": "ProposalError",
          "fullName": "vega.ProposalError",
          "description": "A list of possible errors that can cause a proposal to be in state rejected or failed",
          "values": [
            {
              "name": "PROPOSAL_ERROR_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "PROPOSAL_ERROR_CLOSE_TIME_TOO_SOON",
              "number": "1",
              "description": "The specified close time is too early base on network parameters"
            },
            {
              "name": "PROPOSAL_ERROR_CLOSE_TIME_TOO_LATE",
              "number": "2",
              "description": "The specified close time is too late based on network parameters"
            },
            {
              "name": "PROPOSAL_ERROR_ENACT_TIME_TOO_SOON",
              "number": "3",
              "description": "The specified enact time is too early based on network parameters"
            },
            {
              "name": "PROPOSAL_ERROR_ENACT_TIME_TOO_LATE",
              "number": "4",
              "description": "The specified enact time is too late based on network parameters"
            },
            {
              "name": "PROPOSAL_ERROR_INSUFFICIENT_TOKENS",
              "number": "5",
              "description": "The proposer for this proposal as insufficient tokens"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_INSTRUMENT_SECURITY",
              "number": "6",
              "description": "The instrument quote name and base name were the same"
            },
            {
              "name": "PROPOSAL_ERROR_NO_PRODUCT",
              "number": "7",
              "description": "The proposal has no product"
            },
            {
              "name": "PROPOSAL_ERROR_UNSUPPORTED_PRODUCT",
              "number": "8",
              "description": "The specified product is not supported"
            },
            {
              "name": "PROPOSAL_ERROR_NO_TRADING_MODE",
              "number": "11",
              "description": "The proposal has no trading mode"
            },
            {
              "name": "PROPOSAL_ERROR_UNSUPPORTED_TRADING_MODE",
              "number": "12",
              "description": "The proposal has an unsupported trading mode"
            },
            {
              "name": "PROPOSAL_ERROR_NODE_VALIDATION_FAILED",
              "number": "13",
              "description": "The proposal failed node validation"
            },
            {
              "name": "PROPOSAL_ERROR_MISSING_BUILTIN_ASSET_FIELD",
              "number": "14",
              "description": "A field is missing in a builtin asset source"
            },
            {
              "name": "PROPOSAL_ERROR_MISSING_ERC20_CONTRACT_ADDRESS",
              "number": "15",
              "description": "The contract address is missing in the ERC20 asset source"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_ASSET",
              "number": "16",
              "description": "The asset identifier is invalid or does not exist on the Vega network"
            },
            {
              "name": "PROPOSAL_ERROR_INCOMPATIBLE_TIMESTAMPS",
              "number": "17",
              "description": "Proposal terms timestamps are not compatible (Validation \u003c Closing \u003c Enactment)"
            },
            {
              "name": "PROPOSAL_ERROR_NO_RISK_PARAMETERS",
              "number": "18",
              "description": "No risk parameters were specified"
            },
            {
              "name": "PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_KEY",
              "number": "19",
              "description": "Invalid key in update network parameter proposal"
            },
            {
              "name": "PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_VALUE",
              "number": "20",
              "description": "Invalid valid in update network parameter proposal"
            },
            {
              "name": "PROPOSAL_ERROR_NETWORK_PARAMETER_VALIDATION_FAILED",
              "number": "21",
              "description": "Validation failed for network parameter proposal"
            },
            {
              "name": "PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_SMALL",
              "number": "22",
              "description": "Opening auction duration is less than the network minimum opening auction time"
            },
            {
              "name": "PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_LARGE",
              "number": "23",
              "description": "Opening auction duration is more than the network minimum opening auction time"
            },
            {
              "name": "PROPOSAL_ERROR_MARKET_MISSING_LIQUIDITY_COMMITMENT",
              "number": "24",
              "description": "Market proposal is missing a liquidity commitment"
            },
            {
              "name": "PROPOSAL_ERROR_COULD_NOT_INSTANTIATE_MARKET",
              "number": "25",
              "description": "Market proposal market could not be instantiate in execution"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_FUTURE_PRODUCT",
              "number": "26",
              "description": "Market proposal market contained invalid product definition"
            },
            {
              "name": "PROPOSAL_ERROR_MISSING_COMMITMENT_AMOUNT",
              "number": "27",
              "description": "Market proposal is missing commitment amount"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_FEE_AMOUNT",
              "number": "28",
              "description": "Market proposal have invalid fee"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_SHAPE",
              "number": "29",
              "description": "Market proposal have invalid shape"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_RISK_PARAMETER",
              "number": "30",
              "description": "Market proposal invalid risk parameter"
            },
            {
              "name": "PROPOSAL_ERROR_MAJORITY_THRESHOLD_NOT_REACHED",
              "number": "31",
              "description": "Proposal was declined because vote didn't reach the majority threshold required"
            },
            {
              "name": "PROPOSAL_ERROR_PARTICIPATION_THRESHOLD_NOT_REACHED",
              "number": "32",
              "description": "Proposal declined because the participation threshold was not reached"
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_ASSET_DETAILS",
              "number": "33",
              "description": "Asset proposal invalid asset details"
            },
            {
              "name": "PROPOSAL_ERROR_UNKNOWN_TYPE",
              "number": "34",
              "description": "Proposal is an unknown type."
            },
            {
              "name": "PROPOSAL_ERROR_UNKNOWN_RISK_PARAMETER_TYPE",
              "number": "35",
              "description": "Proposal has an unknown risk parameter type."
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_FREEFORM",
              "number": "36",
              "description": "Validation failed for freeform proposal."
            },
            {
              "name": "PROPOSAL_ERROR_INSUFFICIENT_EQUITY_LIKE_SHARE",
              "number": "37",
              "description": "The party doesn't have enough equity-like share to propose an update on the market\ntargeted by the proposal."
            },
            {
              "name": "PROPOSAL_ERROR_INVALID_MARKET",
              "number": "38",
              "description": "The market targeted by the proposal does not exist or is not eligible to modification."
            },
            {
              "name": "PROPOSAL_ERROR_TOO_MANY_MARKET_DECIMAL_PLACES",
              "number": "39",
              "description": "The market proposal decimal place is higher to the market settlement asset decimal places"
            },
            {
              "name": "PROPOSAL_ERROR_TOO_MANY_PRICE_MONITORING_TRIGGERS",
              "number": "40",
              "description": "The market proposal contains too many price monitoring triggers"
            }
          ]
        },
        {
          "name": "Value",
          "longName": "Vote.Value",
          "fullName": "vega.Vote.Value",
          "description": "Vote value",
          "values": [
            {
              "name": "VALUE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "VALUE_NO",
              "number": "1",
              "description": "A vote against the proposal"
            },
            {
              "name": "VALUE_YES",
              "number": "2",
              "description": "A vote in favour of the proposal"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "FutureProduct",
          "longName": "FutureProduct",
          "fullName": "vega.FutureProduct",
          "description": "Future product configuration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "settlement_asset",
              "description": "Product settlement asset identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quote_name",
              "description": "Product quote name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec_for_settlement_price",
              "description": "The oracle spec describing the oracle data of settlement price",
              "label": "",
              "type": "OracleSpecConfiguration",
              "longType": "oracles.v1.OracleSpecConfiguration",
              "fullType": "oracles.v1.OracleSpecConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec_for_trading_termination",
              "description": "The oracle spec describing the oracle data of trading termination",
              "label": "",
              "type": "OracleSpecConfiguration",
              "longType": "oracles.v1.OracleSpecConfiguration",
              "fullType": "oracles.v1.OracleSpecConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec_binding",
              "description": "The binding between the oracle spec and the settlement price",
              "label": "",
              "type": "OracleSpecToFutureBinding",
              "longType": "OracleSpecToFutureBinding",
              "fullType": "vega.OracleSpecToFutureBinding",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "settlement_price_decimals",
              "description": "the number of decimal places implied by the settlement price emitted by the settlement oracle",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GovernanceData",
          "longName": "GovernanceData",
          "fullName": "vega.GovernanceData",
          "description": "Governance data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal",
              "description": "The governance proposal",
              "label": "",
              "type": "Proposal",
              "longType": "Proposal",
              "fullType": "vega.Proposal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "yes",
              "description": "All \"yes\" votes in favour of the proposal above",
              "label": "repeated",
              "type": "Vote",
              "longType": "Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "no",
              "description": "All \"no\" votes against the proposal above",
              "label": "repeated",
              "type": "Vote",
              "longType": "Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "yes_party",
              "description": "All latest YES votes by party (guaranteed to be unique),\nwhere key (string) is the party ID (public key) and\nvalue (Vote) is the vote cast by the given party",
              "label": "repeated",
              "type": "YesPartyEntry",
              "longType": "GovernanceData.YesPartyEntry",
              "fullType": "vega.GovernanceData.YesPartyEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "no_party",
              "description": "All latest NO votes by party (guaranteed to be unique),\nwhere key (string) is the party ID (public key) and\nvalue (Vote) is the vote cast by the given party",
              "label": "repeated",
              "type": "NoPartyEntry",
              "longType": "GovernanceData.NoPartyEntry",
              "fullType": "vega.GovernanceData.NoPartyEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NoPartyEntry",
          "longName": "GovernanceData.NoPartyEntry",
          "fullName": "vega.GovernanceData.NoPartyEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Vote",
              "longType": "Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "YesPartyEntry",
          "longName": "GovernanceData.YesPartyEntry",
          "fullName": "vega.GovernanceData.YesPartyEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Vote",
              "longType": "Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InstrumentConfiguration",
          "longName": "InstrumentConfiguration",
          "fullName": "vega.InstrumentConfiguration",
          "description": "Instrument configuration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Instrument name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "code",
              "description": "Instrument code",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "future",
              "description": "Future",
              "label": "",
              "type": "FutureProduct",
              "longType": "FutureProduct",
              "fullType": "vega.FutureProduct",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "product",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewAsset",
          "longName": "NewAsset",
          "fullName": "vega.NewAsset",
          "description": "New asset on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "changes",
              "description": "The configuration of the new asset",
              "label": "",
              "type": "AssetDetails",
              "longType": "AssetDetails",
              "fullType": "vega.AssetDetails",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewFreeform",
          "longName": "NewFreeform",
          "fullName": "vega.NewFreeform",
          "description": "Freeform proposal\nThis message is just used as a placeholder to sort out the nature of the\nproposal once parsed.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "NewMarket",
          "longName": "NewMarket",
          "fullName": "vega.NewMarket",
          "description": "New market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "changes",
              "description": "The configuration of the new market",
              "label": "",
              "type": "NewMarketConfiguration",
              "longType": "NewMarketConfiguration",
              "fullType": "vega.NewMarketConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_commitment",
              "description": "The commitment from the party creating the NewMarket proposal",
              "label": "",
              "type": "NewMarketCommitment",
              "longType": "NewMarketCommitment",
              "fullType": "vega.NewMarketCommitment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewMarketCommitment",
          "longName": "NewMarketCommitment",
          "fullName": "vega.NewMarketCommitment",
          "description": "A commitment of liquidity to be made by the party which proposes a market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "commitment_amount",
              "description": "Specified as a unitless number that represents the amount of settlement asset of the market",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee",
              "description": "Nominated liquidity fee factor, which is an input to the calculation of taker fees on the market, as per seeting fees and rewarding liquidity providers",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sells",
              "description": "A set of liquidity sell orders to meet the liquidity provision obligation",
              "label": "repeated",
              "type": "LiquidityOrder",
              "longType": "LiquidityOrder",
              "fullType": "vega.LiquidityOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buys",
              "description": "A set of liquidity buy orders to meet the liquidity provision obligation",
              "label": "repeated",
              "type": "LiquidityOrder",
              "longType": "LiquidityOrder",
              "fullType": "vega.LiquidityOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "A reference to be associated to all orders created from this commitment",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NewMarketConfiguration",
          "longName": "NewMarketConfiguration",
          "fullName": "vega.NewMarketConfiguration",
          "description": "Configuration for a new market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "instrument",
              "description": "New market instrument configuration",
              "label": "",
              "type": "InstrumentConfiguration",
              "longType": "InstrumentConfiguration",
              "fullType": "vega.InstrumentConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "decimal_places",
              "description": "Decimal places used for the new market",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Optional new market meta data, tags",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_monitoring_parameters",
              "description": "Price monitoring parameters",
              "label": "",
              "type": "PriceMonitoringParameters",
              "longType": "PriceMonitoringParameters",
              "fullType": "vega.PriceMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_monitoring_parameters",
              "description": "Liquidity monitoring parameters",
              "label": "",
              "type": "LiquidityMonitoringParameters",
              "longType": "LiquidityMonitoringParameters",
              "fullType": "vega.LiquidityMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "simple",
              "description": "Simple risk model parameters, valid only if MODEL_SIMPLE is selected",
              "label": "",
              "type": "SimpleModelParams",
              "longType": "SimpleModelParams",
              "fullType": "vega.SimpleModelParams",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_parameters",
              "defaultValue": ""
            },
            {
              "name": "log_normal",
              "description": "Log normal risk model parameters, valid only if MODEL_LOG_NORMAL is selected",
              "label": "",
              "type": "LogNormalRiskModel",
              "longType": "LogNormalRiskModel",
              "fullType": "vega.LogNormalRiskModel",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_parameters",
              "defaultValue": ""
            },
            {
              "name": "position_decimal_places",
              "description": "Decimal places for order sizes",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Proposal",
          "longName": "Proposal",
          "fullName": "vega.Proposal",
          "description": "Governance proposal",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique proposal identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "Proposal reference",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier of the author (the party submitting the proposal)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "Proposal state - See (Proposal.State)[#vega.Proposal.State] definition",
              "label": "",
              "type": "State",
              "longType": "Proposal.State",
              "fullType": "vega.Proposal.State",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Proposal timestamp for date and time (in nanoseconds) when proposal was submitted to the network",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "terms",
              "description": "Proposal configuration and the actual change that is meant to be executed when proposal is enacted",
              "label": "",
              "type": "ProposalTerms",
              "longType": "ProposalTerms",
              "fullType": "vega.ProposalTerms",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "A reason for the current state of the proposal, this may be set in case of REJECTED and FAILED statuses",
              "label": "",
              "type": "ProposalError",
              "longType": "ProposalError",
              "fullType": "vega.ProposalError",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "error_details",
              "description": "The detailed error associated to the reason.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rationale",
              "description": "The rationale behind a proposal.",
              "label": "",
              "type": "ProposalRationale",
              "longType": "ProposalRationale",
              "fullType": "vega.ProposalRationale",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProposalRationale",
          "longName": "ProposalRationale",
          "fullName": "vega.ProposalRationale",
          "description": "The rationale behind a proposal.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "description",
              "description": "Description to show a short title / something in case the link goes offline.\nThis is to be between 0 and 1024 unicode characters.\nThis is mandatory for all proposal.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash",
              "description": "Cryptographically secure hash (SHA3-512) of the text pointed by the `url` property\nso that viewers can check that the text hasn't been changed over time.\nOptional except for FreeFrom proposal where it's mandatory.\nIf set, the `url` property must be set.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "url",
              "description": "Link to a text file describing the proposal in depth.\nOptional except for FreeFrom proposal where it's mandatory.\nIf set, the `url` property must be set.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProposalTerms",
          "longName": "ProposalTerms",
          "fullName": "vega.ProposalTerms",
          "description": "Terms for a governance proposal on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "closing_timestamp",
              "description": "Timestamp (Unix time in seconds) when voting closes for this proposal,\nconstrained by `minClose` and `maxClose` network parameters",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "enactment_timestamp",
              "description": "Timestamp (Unix time in seconds) when proposal gets enacted (if passed),\nconstrained by `minEnact` and `maxEnact` network parameters",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validation_timestamp",
              "description": "Validation timestamp (Unix time in seconds)",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "update_market",
              "description": "Proposal change for modifying an existing market on Vega",
              "label": "",
              "type": "UpdateMarket",
              "longType": "UpdateMarket",
              "fullType": "vega.UpdateMarket",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "new_market",
              "description": "Proposal change for creating new market on Vega",
              "label": "",
              "type": "NewMarket",
              "longType": "NewMarket",
              "fullType": "vega.NewMarket",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "update_network_parameter",
              "description": "Proposal change for updating Vega network parameters",
              "label": "",
              "type": "UpdateNetworkParameter",
              "longType": "UpdateNetworkParameter",
              "fullType": "vega.UpdateNetworkParameter",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "new_asset",
              "description": "Proposal change for creating new assets on Vega",
              "label": "",
              "type": "NewAsset",
              "longType": "NewAsset",
              "fullType": "vega.NewAsset",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "new_freeform",
              "description": "Proposal change for a freeform voting thing",
              "label": "",
              "type": "NewFreeform",
              "longType": "NewFreeform",
              "fullType": "vega.NewFreeform",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            },
            {
              "name": "update_asset",
              "description": "Proposal change for updating an asset",
              "label": "",
              "type": "UpdateAsset",
              "longType": "UpdateAsset",
              "fullType": "vega.UpdateAsset",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "change",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateAsset",
          "longName": "UpdateAsset",
          "fullName": "vega.UpdateAsset",
          "description": "Update an existing asset on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "The asset concerned by the update",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "changes",
              "description": "The changes to apply on an existing asset",
              "label": "",
              "type": "AssetDetailsUpdate",
              "longType": "AssetDetailsUpdate",
              "fullType": "vega.AssetDetailsUpdate",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateFutureProduct",
          "longName": "UpdateFutureProduct",
          "fullName": "vega.UpdateFutureProduct",
          "description": "Future product configuration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "quote_name",
              "description": "Product quote name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec_for_settlement_price",
              "description": "The oracle spec describing the oracle data of settlement price",
              "label": "",
              "type": "OracleSpecConfiguration",
              "longType": "oracles.v1.OracleSpecConfiguration",
              "fullType": "oracles.v1.OracleSpecConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec_for_trading_termination",
              "description": "The oracle spec describing the oracle data of trading termination",
              "label": "",
              "type": "OracleSpecConfiguration",
              "longType": "oracles.v1.OracleSpecConfiguration",
              "fullType": "oracles.v1.OracleSpecConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec_binding",
              "description": "The binding between the oracle spec and the settlement price",
              "label": "",
              "type": "OracleSpecToFutureBinding",
              "longType": "OracleSpecToFutureBinding",
              "fullType": "vega.OracleSpecToFutureBinding",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "settlement_price_decimals",
              "description": "the number of decimal places implied by the settlement price emitted by the settlement oracle",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateInstrumentConfiguration",
          "longName": "UpdateInstrumentConfiguration",
          "fullName": "vega.UpdateInstrumentConfiguration",
          "description": "Instrument configuration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "code",
              "description": "Instrument code",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "future",
              "description": "Future",
              "label": "",
              "type": "UpdateFutureProduct",
              "longType": "UpdateFutureProduct",
              "fullType": "vega.UpdateFutureProduct",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "product",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateMarket",
          "longName": "UpdateMarket",
          "fullName": "vega.UpdateMarket",
          "description": "Update an existing market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "The market to update",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "changes",
              "description": "The updated configuration of the market",
              "label": "",
              "type": "UpdateMarketConfiguration",
              "longType": "UpdateMarketConfiguration",
              "fullType": "vega.UpdateMarketConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateMarketConfiguration",
          "longName": "UpdateMarketConfiguration",
          "fullName": "vega.UpdateMarketConfiguration",
          "description": "Configuration to update a market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "instrument",
              "description": "Updated market instrument configuration",
              "label": "",
              "type": "UpdateInstrumentConfiguration",
              "longType": "UpdateInstrumentConfiguration",
              "fullType": "vega.UpdateInstrumentConfiguration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Optional market metadata, tags",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_monitoring_parameters",
              "description": "Price monitoring parameters",
              "label": "",
              "type": "PriceMonitoringParameters",
              "longType": "PriceMonitoringParameters",
              "fullType": "vega.PriceMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_monitoring_parameters",
              "description": "Liquidity monitoring parameters",
              "label": "",
              "type": "LiquidityMonitoringParameters",
              "longType": "LiquidityMonitoringParameters",
              "fullType": "vega.LiquidityMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "simple",
              "description": "Simple risk model parameters, valid only if MODEL_SIMPLE is selected",
              "label": "",
              "type": "SimpleModelParams",
              "longType": "SimpleModelParams",
              "fullType": "vega.SimpleModelParams",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_parameters",
              "defaultValue": ""
            },
            {
              "name": "log_normal",
              "description": "Log normal risk model parameters, valid only if MODEL_LOG_NORMAL is selected",
              "label": "",
              "type": "LogNormalRiskModel",
              "longType": "LogNormalRiskModel",
              "fullType": "vega.LogNormalRiskModel",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_parameters",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateNetworkParameter",
          "longName": "UpdateNetworkParameter",
          "fullName": "vega.UpdateNetworkParameter",
          "description": "Update network configuration on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "changes",
              "description": "The network parameter to update",
              "label": "",
              "type": "NetworkParameter",
              "longType": "NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Vote",
          "longName": "Vote",
          "fullName": "vega.Vote",
          "description": "Governance vote",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Voter's party identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "Actual vote",
              "label": "",
              "type": "Value",
              "longType": "Vote.Value",
              "fullType": "vega.Vote.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proposal_id",
              "description": "Identifier of the proposal being voted on",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Vote timestamp for date and time (in nanoseconds) when vote was submitted to the network",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_governance_token_balance",
              "description": "Total number of governance token for the party that casted the vote",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_governance_token_weight",
              "description": "The weight of this vote based on the total of governance token",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_equity_like_share_weight",
              "description": "The weight of the vote compared to the total number of equity-like share on the market.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/markets.proto",
      "description": "",
      "package": "vega",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "State",
          "longName": "Market.State",
          "fullName": "vega.Market.State",
          "description": "The current state of the Market",
          "values": [
            {
              "name": "STATE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, invalid"
            },
            {
              "name": "STATE_PROPOSED",
              "number": "1",
              "description": "The Governance proposal valid and accepted"
            },
            {
              "name": "STATE_REJECTED",
              "number": "2",
              "description": "Outcome of governance votes is to reject the market"
            },
            {
              "name": "STATE_PENDING",
              "number": "3",
              "description": "Governance vote passes/wins"
            },
            {
              "name": "STATE_CANCELLED",
              "number": "4",
              "description": "Market triggers cancellation condition or governance\nvotes to close before market becomes Active"
            },
            {
              "name": "STATE_ACTIVE",
              "number": "5",
              "description": "Enactment date reached and usual auction exit checks pass"
            },
            {
              "name": "STATE_SUSPENDED",
              "number": "6",
              "description": "Price monitoring or liquidity monitoring trigger"
            },
            {
              "name": "STATE_CLOSED",
              "number": "7",
              "description": "Governance vote (to close)"
            },
            {
              "name": "STATE_TRADING_TERMINATED",
              "number": "8",
              "description": "Defined by the product (i.e. from a product parameter,\nspecified in market definition, giving close date/time)"
            },
            {
              "name": "STATE_SETTLED",
              "number": "9",
              "description": "Settlement triggered and completed as defined by product"
            }
          ]
        },
        {
          "name": "TradingMode",
          "longName": "Market.TradingMode",
          "fullName": "vega.Market.TradingMode",
          "description": "The trading mode the market is currently running, also referred to as 'market state'",
          "values": [
            {
              "name": "TRADING_MODE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, this is invalid"
            },
            {
              "name": "TRADING_MODE_CONTINUOUS",
              "number": "1",
              "description": "Normal trading"
            },
            {
              "name": "TRADING_MODE_BATCH_AUCTION",
              "number": "2",
              "description": "Auction trading (FBA)"
            },
            {
              "name": "TRADING_MODE_OPENING_AUCTION",
              "number": "3",
              "description": "Opening auction"
            },
            {
              "name": "TRADING_MODE_MONITORING_AUCTION",
              "number": "4",
              "description": "Auction triggered by monitoring"
            },
            {
              "name": "TRADING_MODE_NO_TRADING",
              "number": "5",
              "description": "Not trading is allowed"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AuctionDuration",
          "longName": "AuctionDuration",
          "fullName": "vega.AuctionDuration",
          "description": "An auction duration is used to configure 3 auction periods:\n1. `duration \u003e 0`, `volume == 0`:\n  The auction will last for at least N seconds\n2. `duration == 0`, `volume \u003e 0`:\n  The auction will end once we can close with given traded volume\n3. `duration \u003e 0`, `volume \u003e 0`:\n  The auction will take at least N seconds, but can end sooner if we can trade a certain volume",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "duration",
              "description": "Duration of the auction in seconds",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "Target uncrossing trading volume",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FeeFactors",
          "longName": "FeeFactors",
          "fullName": "vega.FeeFactors",
          "description": "Fee factors definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "maker_fee",
              "description": "Maker fee",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "infrastructure_fee",
              "description": "Infrastructure fee",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_fee",
              "description": "Liquidity fee",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Fees",
          "longName": "Fees",
          "fullName": "vega.Fees",
          "description": "Fees definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "factors",
              "description": "Fee factors",
              "label": "",
              "type": "FeeFactors",
              "longType": "FeeFactors",
              "fullType": "vega.FeeFactors",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Future",
          "longName": "Future",
          "fullName": "vega.Future",
          "description": "Future product definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "settlement_asset",
              "description": "The asset for the future",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quote_name",
              "description": "Quote name of the instrument",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec_for_settlement_price",
              "description": "The oracle spec describing the settlement price oracle filter",
              "label": "",
              "type": "OracleSpec",
              "longType": "oracles.v1.OracleSpec",
              "fullType": "oracles.v1.OracleSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec_for_trading_termination",
              "description": "the oracle spec describing the trading termination oracle filter",
              "label": "",
              "type": "OracleSpec",
              "longType": "oracles.v1.OracleSpec",
              "fullType": "oracles.v1.OracleSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec_binding",
              "description": "The binding between the oracle spec and the oracle data",
              "label": "",
              "type": "OracleSpecToFutureBinding",
              "longType": "OracleSpecToFutureBinding",
              "fullType": "vega.OracleSpecToFutureBinding",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "settlement_price_decimals",
              "description": "the number of decimal places implied by the settlement price emitted by the settlement oracle",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Instrument",
          "longName": "Instrument",
          "fullName": "vega.Instrument",
          "description": "Instrument definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Instrument identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "code",
              "description": "Code for the instrument",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Name of the instrument",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "A collection of instrument meta-data",
              "label": "",
              "type": "InstrumentMetadata",
              "longType": "InstrumentMetadata",
              "fullType": "vega.InstrumentMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "future",
              "description": "Future",
              "label": "",
              "type": "Future",
              "longType": "Future",
              "fullType": "vega.Future",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "product",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InstrumentMetadata",
          "longName": "InstrumentMetadata",
          "fullName": "vega.InstrumentMetadata",
          "description": "Instrument metadata definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tags",
              "description": "A list of 0 or more tags",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityMonitoringParameters",
          "longName": "LiquidityMonitoringParameters",
          "fullName": "vega.LiquidityMonitoringParameters",
          "description": "LiquidityMonitoringParameters contains settings used for liquidity monitoring",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "target_stake_parameters",
              "description": "Specifies parameters related to target stake calculation",
              "label": "",
              "type": "TargetStakeParameters",
              "longType": "TargetStakeParameters",
              "fullType": "vega.TargetStakeParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "triggering_ratio",
              "description": "Specifies the triggering ratio for entering liquidity auction",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_extension",
              "description": "Specifies by how many seconds an auction should be extended if leaving the auction were to trigger a liquidity auction",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LogNormalModelParams",
          "longName": "LogNormalModelParams",
          "fullName": "vega.LogNormalModelParams",
          "description": "Risk model parameters for log normal",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "mu",
              "description": "Mu param",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "r",
              "description": "R param",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sigma",
              "description": "Sigma param",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LogNormalRiskModel",
          "longName": "LogNormalRiskModel",
          "fullName": "vega.LogNormalRiskModel",
          "description": "Risk model for log normal",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "risk_aversion_parameter",
              "description": "Risk Aversion Parameter",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tau",
              "description": "Tau",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "params",
              "description": "Risk model parameters for log normal",
              "label": "",
              "type": "LogNormalModelParams",
              "longType": "LogNormalModelParams",
              "fullType": "vega.LogNormalModelParams",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarginCalculator",
          "longName": "MarginCalculator",
          "fullName": "vega.MarginCalculator",
          "description": "Margin Calculator definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "scaling_factors",
              "description": "Scaling factors for margin calculation",
              "label": "",
              "type": "ScalingFactors",
              "longType": "ScalingFactors",
              "fullType": "vega.ScalingFactors",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Market",
          "longName": "Market",
          "fullName": "vega.Market",
          "description": "Market definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tradable_instrument",
              "description": "Tradable instrument configuration",
              "label": "",
              "type": "TradableInstrument",
              "longType": "TradableInstrument",
              "fullType": "vega.TradableInstrument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "decimal_places",
              "description": "Number of decimal places that a price must be shifted by in order to get a\ncorrect price denominated in the currency of the market, for example:\n`realPrice = price / 10^decimalPlaces`",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fees",
              "description": "Fees configuration",
              "label": "",
              "type": "Fees",
              "longType": "Fees",
              "fullType": "vega.Fees",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "opening_auction",
              "description": "Auction duration specifies how long the opening auction will run (minimum\nduration and optionally a minimum traded volume)",
              "label": "",
              "type": "AuctionDuration",
              "longType": "AuctionDuration",
              "fullType": "vega.AuctionDuration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_monitoring_settings",
              "description": "PriceMonitoringSettings for the market",
              "label": "",
              "type": "PriceMonitoringSettings",
              "longType": "PriceMonitoringSettings",
              "fullType": "vega.PriceMonitoringSettings",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_monitoring_parameters",
              "description": "LiquidityMonitoringParameters for the market",
              "label": "",
              "type": "LiquidityMonitoringParameters",
              "longType": "LiquidityMonitoringParameters",
              "fullType": "vega.LiquidityMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trading_mode",
              "description": "Current mode of execution of the market",
              "label": "",
              "type": "TradingMode",
              "longType": "Market.TradingMode",
              "fullType": "vega.Market.TradingMode",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "Current state of the market",
              "label": "",
              "type": "State",
              "longType": "Market.State",
              "fullType": "vega.Market.State",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_timestamps",
              "description": "Timestamps for when the market stay changes",
              "label": "",
              "type": "MarketTimestamps",
              "longType": "MarketTimestamps",
              "fullType": "vega.MarketTimestamps",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "position_decimal_places",
              "description": "The number of decimal places for position",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketTimestamps",
          "longName": "MarketTimestamps",
          "fullName": "vega.MarketTimestamps",
          "description": "Time stamps for important times about creating, enacting etc the market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposed",
              "description": "Time when the market is first proposed",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending",
              "description": "Time when the market has been voted in and is created into an opening auction",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "open",
              "description": "Time when the market has left the opening auction and is ready to accept trades",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "close",
              "description": "Time when the market is closed",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleSpecToFutureBinding",
          "longName": "OracleSpecToFutureBinding",
          "fullName": "vega.OracleSpecToFutureBinding",
          "description": "OracleSpecToFutureBinding tells on which property oracle data should be\nused as settlement price and which to use the trading terminated trigger",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "settlement_price_property",
              "description": "settlement_price_property holds the name of the property in the oracle data\nthat should be used as settlement price.\nIf it is set to \"prices.BTC.value\", then the Future will use the value of\nthis property as settlement price.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trading_termination_property",
              "description": "the name of the property in the oracle data that signals termination of trading",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceMonitoringParameters",
          "longName": "PriceMonitoringParameters",
          "fullName": "vega.PriceMonitoringParameters",
          "description": "PriceMonitoringParameters contains a collection of triggers to be used for a given market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "triggers",
              "description": "",
              "label": "repeated",
              "type": "PriceMonitoringTrigger",
              "longType": "PriceMonitoringTrigger",
              "fullType": "vega.PriceMonitoringTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceMonitoringSettings",
          "longName": "PriceMonitoringSettings",
          "fullName": "vega.PriceMonitoringSettings",
          "description": "PriceMonitoringSettings contains the settings for price monitoring",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parameters",
              "description": "Specifies price monitoring parameters to be used for price monitoring purposes",
              "label": "",
              "type": "PriceMonitoringParameters",
              "longType": "PriceMonitoringParameters",
              "fullType": "vega.PriceMonitoringParameters",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "update_frequency",
              "description": "Specifies how often (expressed in seconds) the price monitoring bounds should be updated",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceMonitoringTrigger",
          "longName": "PriceMonitoringTrigger",
          "fullName": "vega.PriceMonitoringTrigger",
          "description": "PriceMonitoringTrigger holds together price projection horizon τ, probability level p, and auction extension duration",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "horizon",
              "description": "Price monitoring projection horizon τ in seconds",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "probability",
              "description": "Price monitoring probability level p",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_extension",
              "description": "Price monitoring auction extension duration in seconds should the price\nbreach it's theoretical level over the specified horizon at the specified\nprobability level",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ScalingFactors",
          "longName": "ScalingFactors",
          "fullName": "vega.ScalingFactors",
          "description": "Scaling Factors (for use in margin calculation)",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "search_level",
              "description": "Search level",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "initial_margin",
              "description": "Initial margin level",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collateral_release",
              "description": "Collateral release level",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SimpleModelParams",
          "longName": "SimpleModelParams",
          "fullName": "vega.SimpleModelParams",
          "description": "Risk model parameters for simple modelling",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "factor_long",
              "description": "Pre-defined risk factor value for long",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "factor_short",
              "description": "Pre-defined risk factor value for short",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_move_up",
              "description": "Pre-defined maximum price move up that the model considers as valid",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "min_move_down",
              "description": "Pre-defined minimum price move down that the model considers as valid",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "probability_of_trading",
              "description": "Pre-defined constant probability of trading",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SimpleRiskModel",
          "longName": "SimpleRiskModel",
          "fullName": "vega.SimpleRiskModel",
          "description": "Risk model for simple modelling",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "Risk model params for simple modelling",
              "label": "",
              "type": "SimpleModelParams",
              "longType": "SimpleModelParams",
              "fullType": "vega.SimpleModelParams",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TargetStakeParameters",
          "longName": "TargetStakeParameters",
          "fullName": "vega.TargetStakeParameters",
          "description": "TargetStakeParameters contains parameters used in target stake calculation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "time_window",
              "description": "Specifies length of time window expressed in seconds for target stake calculation",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "scaling_factor",
              "description": "Specifies scaling factors used in target stake calculation",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradableInstrument",
          "longName": "TradableInstrument",
          "fullName": "vega.TradableInstrument",
          "description": "Tradable Instrument definition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "instrument",
              "description": "Instrument details",
              "label": "",
              "type": "Instrument",
              "longType": "Instrument",
              "fullType": "vega.Instrument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "margin_calculator",
              "description": "Margin calculator for the instrument",
              "label": "",
              "type": "MarginCalculator",
              "longType": "MarginCalculator",
              "fullType": "vega.MarginCalculator",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_normal_risk_model",
              "description": "Log normal",
              "label": "",
              "type": "LogNormalRiskModel",
              "longType": "LogNormalRiskModel",
              "fullType": "vega.LogNormalRiskModel",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_model",
              "defaultValue": ""
            },
            {
              "name": "simple_risk_model",
              "description": "Simple",
              "label": "",
              "type": "SimpleRiskModel",
              "longType": "SimpleRiskModel",
              "fullType": "vega.SimpleRiskModel",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "risk_model",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/vega.proto",
      "description": "",
      "package": "vega",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "AccountType",
          "longName": "AccountType",
          "fullName": "vega.AccountType",
          "description": "Various collateral/account types as used by Vega",
          "values": [
            {
              "name": "ACCOUNT_TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "ACCOUNT_TYPE_INSURANCE",
              "number": "1",
              "description": "Insurance pool accounts contain insurance pool funds for a market"
            },
            {
              "name": "ACCOUNT_TYPE_SETTLEMENT",
              "number": "2",
              "description": "Settlement accounts exist only during settlement or mark-to-market"
            },
            {
              "name": "ACCOUNT_TYPE_MARGIN",
              "number": "3",
              "description": "Margin accounts contain margin funds for a party and each party will\nhave multiple margin accounts, one for each market they have traded in\n\nMargin account funds will alter as margin requirements on positions change"
            },
            {
              "name": "ACCOUNT_TYPE_GENERAL",
              "number": "4",
              "description": "General accounts contains general funds for a party. A party will\nhave multiple general accounts, one for each asset they want\nto trade with\n\nGeneral accounts are where funds are initially deposited or withdrawn from,\nit is also the account where funds are taken to fulfil fees and initial margin requirements"
            },
            {
              "name": "ACCOUNT_TYPE_FEES_INFRASTRUCTURE",
              "number": "5",
              "description": "Infrastructure accounts contain fees earned by providing infrastructure on Vega"
            },
            {
              "name": "ACCOUNT_TYPE_FEES_LIQUIDITY",
              "number": "6",
              "description": "Liquidity accounts contain fees earned by providing liquidity on Vega markets"
            },
            {
              "name": "ACCOUNT_TYPE_FEES_MAKER",
              "number": "7",
              "description": "This account is created to hold fees earned by placing orders that sit on the book\nand are then matched with an incoming order to create a trade - These fees reward parties\nwho provide the best priced liquidity that actually allows trading to take place"
            },
            {
              "name": "ACCOUNT_TYPE_LOCK_WITHDRAW",
              "number": "8",
              "description": "This account is created to lock funds to be withdrawn by parties"
            },
            {
              "name": "ACCOUNT_TYPE_BOND",
              "number": "9",
              "description": "This account is created to maintain liquidity providers funds commitments"
            },
            {
              "name": "ACCOUNT_TYPE_EXTERNAL",
              "number": "10",
              "description": "External account represents an external source (deposit/withdrawal)"
            },
            {
              "name": "ACCOUNT_TYPE_GLOBAL_INSURANCE",
              "number": "11",
              "description": "Global insurance account for the asset"
            },
            {
              "name": "ACCOUNT_TYPE_GLOBAL_REWARD",
              "number": "12",
              "description": "Global reward account for the asset"
            },
            {
              "name": "ACCOUNT_TYPE_PENDING_TRANSFERS",
              "number": "13",
              "description": "Per asset account used to store pending transfers (if any)"
            },
            {
              "name": "ACCOUNT_TYPE_REWARD_TAKER_PAID_FEES",
              "number": "14",
              "description": "Per asset reward account for fees paid by takers"
            },
            {
              "name": "ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES",
              "number": "15",
              "description": "Per asset reward account for fees received by makers"
            },
            {
              "name": "ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES",
              "number": "16",
              "description": "Per asset reward account for fees received by liquidity providers"
            },
            {
              "name": "ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS",
              "number": "17",
              "description": "Per asset reward account for market proposers when the market goes above some trading threshold"
            }
          ]
        },
        {
          "name": "AuctionTrigger",
          "longName": "AuctionTrigger",
          "fullName": "vega.AuctionTrigger",
          "description": "Auction triggers indicate what condition triggered an auction (if market is in auction mode)",
          "values": [
            {
              "name": "AUCTION_TRIGGER_UNSPECIFIED",
              "number": "0",
              "description": "Default value for AuctionTrigger, no auction triggered"
            },
            {
              "name": "AUCTION_TRIGGER_BATCH",
              "number": "1",
              "description": "Batch auction"
            },
            {
              "name": "AUCTION_TRIGGER_OPENING",
              "number": "2",
              "description": "Opening auction"
            },
            {
              "name": "AUCTION_TRIGGER_PRICE",
              "number": "3",
              "description": "Price monitoring trigger"
            },
            {
              "name": "AUCTION_TRIGGER_LIQUIDITY",
              "number": "4",
              "description": "Liquidity monitoring trigger"
            }
          ]
        },
        {
          "name": "ChainStatus",
          "longName": "ChainStatus",
          "fullName": "vega.ChainStatus",
          "description": "The Vega blockchain status as reported by the node the caller is connected to",
          "values": [
            {
              "name": "CHAIN_STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "CHAIN_STATUS_DISCONNECTED",
              "number": "1",
              "description": "Blockchain is disconnected"
            },
            {
              "name": "CHAIN_STATUS_REPLAYING",
              "number": "2",
              "description": "Blockchain is replaying historic transactions"
            },
            {
              "name": "CHAIN_STATUS_CONNECTED",
              "number": "3",
              "description": "Blockchain is connected and receiving transactions"
            }
          ]
        },
        {
          "name": "Status",
          "longName": "Deposit.Status",
          "fullName": "vega.Deposit.Status",
          "description": "The status of the deposit",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "STATUS_OPEN",
              "number": "1",
              "description": "The deposit is being processed by the network"
            },
            {
              "name": "STATUS_CANCELLED",
              "number": "2",
              "description": "The deposit has been cancelled by the network"
            },
            {
              "name": "STATUS_FINALIZED",
              "number": "3",
              "description": "The deposit has been finalised and accounts have been updated"
            }
          ]
        },
        {
          "name": "DispatchMetric",
          "longName": "DispatchMetric",
          "fullName": "vega.DispatchMetric",
          "description": "",
          "values": [
            {
              "name": "DISPATCH_METRIC_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "DISPATCH_METRIC_TAKER_FEES_PAID",
              "number": "1",
              "description": "Dispatch metric that is using the total taker fees paid in the market"
            },
            {
              "name": "DISPATCH_METRIC_MAKER_FEES_RECEIVED",
              "number": "2",
              "description": "Dispatch metric that is using the total maker fees received in the market"
            },
            {
              "name": "DISPATCH_METRIC_LP_FEES_RECEIVED",
              "number": "3",
              "description": "Dispatch metric that is using the total LP fees received in the market"
            },
            {
              "name": "DISPATCH_METRIC_MARKET_VALUE",
              "number": "4",
              "description": "Dispatch metric that is using total value of the market if above the required threshold and not paid given proposer bonus yet"
            }
          ]
        },
        {
          "name": "EpochAction",
          "longName": "EpochAction",
          "fullName": "vega.EpochAction",
          "description": "What epoch action has occurred",
          "values": [
            {
              "name": "EPOCH_ACTION_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "EPOCH_ACTION_START",
              "number": "1",
              "description": "The epoch update is for a new epoch"
            },
            {
              "name": "EPOCH_ACTION_END",
              "number": "2",
              "description": "The epoch update is for the end of an epoch"
            }
          ]
        },
        {
          "name": "Interval",
          "longName": "Interval",
          "fullName": "vega.Interval",
          "description": "Represents a set of time intervals that are used when querying for candle-stick data",
          "values": [
            {
              "name": "INTERVAL_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "INTERVAL_I1M",
              "number": "60",
              "description": "1 minute."
            },
            {
              "name": "INTERVAL_I5M",
              "number": "300",
              "description": "5 minutes."
            },
            {
              "name": "INTERVAL_I15M",
              "number": "900",
              "description": "15 minutes."
            },
            {
              "name": "INTERVAL_I1H",
              "number": "3600",
              "description": "1 hour."
            },
            {
              "name": "INTERVAL_I6H",
              "number": "21600",
              "description": "6 hours."
            },
            {
              "name": "INTERVAL_I1D",
              "number": "86400",
              "description": "1 day."
            }
          ]
        },
        {
          "name": "Status",
          "longName": "LiquidityProvision.Status",
          "fullName": "vega.LiquidityProvision.Status",
          "description": "Status of a liquidity provision order",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "The default value"
            },
            {
              "name": "STATUS_ACTIVE",
              "number": "1",
              "description": "The liquidity provision is active"
            },
            {
              "name": "STATUS_STOPPED",
              "number": "2",
              "description": "The liquidity provision was stopped by the network"
            },
            {
              "name": "STATUS_CANCELLED",
              "number": "3",
              "description": "The liquidity provision was cancelled by the liquidity provider"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "4",
              "description": "The liquidity provision was invalid and got rejected"
            },
            {
              "name": "STATUS_UNDEPLOYED",
              "number": "5",
              "description": "The liquidity provision is valid and accepted by network, but orders aren't deployed"
            },
            {
              "name": "STATUS_PENDING",
              "number": "6",
              "description": "The liquidity provision is valid and accepted by network\nbut have never been deployed. I when it's possible to deploy them for the first time\nmargin check fails, then they will be cancelled without any penalties."
            }
          ]
        },
        {
          "name": "NodeStatus",
          "longName": "NodeStatus",
          "fullName": "vega.NodeStatus",
          "description": "Node status type",
          "values": [
            {
              "name": "NODE_STATUS_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "NODE_STATUS_VALIDATOR",
              "number": "1",
              "description": "The node is validating"
            },
            {
              "name": "NODE_STATUS_NON_VALIDATOR",
              "number": "2",
              "description": "The node is non-validating"
            }
          ]
        },
        {
          "name": "Status",
          "longName": "Order.Status",
          "fullName": "vega.Order.Status",
          "description": "Status values for an order\nSee resulting status in [What order types are available to trade on Vega?](https://docs.testnet.vega.xyz/docs/trading-questions/#what-order-types-are-available-to-trade-on-vega) for more detail.",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "STATUS_ACTIVE",
              "number": "1",
              "description": "Used for active unfilled or partially filled orders"
            },
            {
              "name": "STATUS_EXPIRED",
              "number": "2",
              "description": "Used for expired GTT orders"
            },
            {
              "name": "STATUS_CANCELLED",
              "number": "3",
              "description": "Used for orders cancelled by the party that created the order"
            },
            {
              "name": "STATUS_STOPPED",
              "number": "4",
              "description": "Used for unfilled FOK or IOC orders, and for orders that were stopped by the network"
            },
            {
              "name": "STATUS_FILLED",
              "number": "5",
              "description": "Used for closed fully filled orders"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "6",
              "description": "Used for orders when not enough collateral was available to fill the margin requirements"
            },
            {
              "name": "STATUS_PARTIALLY_FILLED",
              "number": "7",
              "description": "Used for closed partially filled IOC orders"
            },
            {
              "name": "STATUS_PARKED",
              "number": "8",
              "description": "Order has been removed from the order book and has been parked, this applies to pegged orders only"
            }
          ]
        },
        {
          "name": "TimeInForce",
          "longName": "Order.TimeInForce",
          "fullName": "vega.Order.TimeInForce",
          "description": "Time In Force for an order\nSee [What order types are available to trade on Vega?](https://docs.testnet.vega.xyz/docs/trading-questions/#what-order-types-are-available-to-trade-on-vega) for more detail",
          "values": [
            {
              "name": "TIME_IN_FORCE_UNSPECIFIED",
              "number": "0",
              "description": "Default value for TimeInForce, can be valid for an amend"
            },
            {
              "name": "TIME_IN_FORCE_GTC",
              "number": "1",
              "description": "Good until cancelled"
            },
            {
              "name": "TIME_IN_FORCE_GTT",
              "number": "2",
              "description": "Good until specified time"
            },
            {
              "name": "TIME_IN_FORCE_IOC",
              "number": "3",
              "description": "Immediate or cancel"
            },
            {
              "name": "TIME_IN_FORCE_FOK",
              "number": "4",
              "description": "Fill or kill"
            },
            {
              "name": "TIME_IN_FORCE_GFA",
              "number": "5",
              "description": "Good for auction"
            },
            {
              "name": "TIME_IN_FORCE_GFN",
              "number": "6",
              "description": "Good for normal"
            }
          ]
        },
        {
          "name": "Type",
          "longName": "Order.Type",
          "fullName": "vega.Order.Type",
          "description": "Type values for an order",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "TYPE_LIMIT",
              "number": "1",
              "description": "Used for Limit orders"
            },
            {
              "name": "TYPE_MARKET",
              "number": "2",
              "description": "Used for Market orders"
            },
            {
              "name": "TYPE_NETWORK",
              "number": "3",
              "description": "Used for orders where the initiating party is the network (with distressed parties)"
            }
          ]
        },
        {
          "name": "OrderError",
          "longName": "OrderError",
          "fullName": "vega.OrderError",
          "description": "OrderError codes are returned in the `[Order](#vega.Order).reason` field - If there is an issue\nwith an order during its life-cycle, it will be marked with `status.ORDER_STATUS_REJECTED`",
          "values": [
            {
              "name": "ORDER_ERROR_UNSPECIFIED",
              "number": "0",
              "description": "Default value, no error reported"
            },
            {
              "name": "ORDER_ERROR_INVALID_MARKET_ID",
              "number": "1",
              "description": "Order was submitted for a market that does not exist"
            },
            {
              "name": "ORDER_ERROR_INVALID_ORDER_ID",
              "number": "2",
              "description": "Order was submitted with an invalid identifier"
            },
            {
              "name": "ORDER_ERROR_OUT_OF_SEQUENCE",
              "number": "3",
              "description": "Order was amended with a sequence number that was not previous version + 1"
            },
            {
              "name": "ORDER_ERROR_INVALID_REMAINING_SIZE",
              "number": "4",
              "description": "Order was amended with an invalid remaining size (e.g. remaining greater than total size)"
            },
            {
              "name": "ORDER_ERROR_TIME_FAILURE",
              "number": "5",
              "description": "Node was unable to get Vega (blockchain) time"
            },
            {
              "name": "ORDER_ERROR_REMOVAL_FAILURE",
              "number": "6",
              "description": "Failed to remove an order from the book"
            },
            {
              "name": "ORDER_ERROR_INVALID_EXPIRATION_DATETIME",
              "number": "7",
              "description": "An order with `TimeInForce.TIME_IN_FORCE_GTT` was submitted or amended\nwith an expiration that was badly formatted or otherwise invalid"
            },
            {
              "name": "ORDER_ERROR_INVALID_ORDER_REFERENCE",
              "number": "8",
              "description": "Order was submitted or amended with an invalid reference field"
            },
            {
              "name": "ORDER_ERROR_EDIT_NOT_ALLOWED",
              "number": "9",
              "description": "Order amend was submitted for an order field that cannot not be amended (e.g. order identifier)"
            },
            {
              "name": "ORDER_ERROR_AMEND_FAILURE",
              "number": "10",
              "description": "Amend failure because amend details do not match original order"
            },
            {
              "name": "ORDER_ERROR_NOT_FOUND",
              "number": "11",
              "description": "Order not found in an order book or store"
            },
            {
              "name": "ORDER_ERROR_INVALID_PARTY_ID",
              "number": "12",
              "description": "Order was submitted with an invalid or missing party identifier"
            },
            {
              "name": "ORDER_ERROR_MARKET_CLOSED",
              "number": "13",
              "description": "Order was submitted for a market that has closed"
            },
            {
              "name": "ORDER_ERROR_MARGIN_CHECK_FAILED",
              "number": "14",
              "description": "Order was submitted, but the party did not have enough collateral to cover the order"
            },
            {
              "name": "ORDER_ERROR_MISSING_GENERAL_ACCOUNT",
              "number": "15",
              "description": "Order was submitted, but the party did not have an account for this asset"
            },
            {
              "name": "ORDER_ERROR_INTERNAL_ERROR",
              "number": "16",
              "description": "Unspecified internal error"
            },
            {
              "name": "ORDER_ERROR_INVALID_SIZE",
              "number": "17",
              "description": "Order was submitted with an invalid or missing size (e.g. 0)"
            },
            {
              "name": "ORDER_ERROR_INVALID_PERSISTENCE",
              "number": "18",
              "description": "Order was submitted with an invalid persistence for its type"
            },
            {
              "name": "ORDER_ERROR_INVALID_TYPE",
              "number": "19",
              "description": "Order was submitted with an invalid type field"
            },
            {
              "name": "ORDER_ERROR_SELF_TRADING",
              "number": "20",
              "description": "Order was stopped as it would have traded with another order submitted from the same party"
            },
            {
              "name": "ORDER_ERROR_INSUFFICIENT_FUNDS_TO_PAY_FEES",
              "number": "21",
              "description": "Order was submitted, but the party did not have enough collateral to cover the fees for the order"
            },
            {
              "name": "ORDER_ERROR_INCORRECT_MARKET_TYPE",
              "number": "22",
              "description": "Order was submitted with an incorrect or invalid market type"
            },
            {
              "name": "ORDER_ERROR_INVALID_TIME_IN_FORCE",
              "number": "23",
              "description": "Order was submitted with invalid time in force"
            },
            {
              "name": "ORDER_ERROR_GFN_ORDER_DURING_AN_AUCTION",
              "number": "24",
              "description": "A GFN order has got to the market when it is in auction mode"
            },
            {
              "name": "ORDER_ERROR_GFA_ORDER_DURING_CONTINUOUS_TRADING",
              "number": "25",
              "description": "A GFA order has got to the market when it is in continuous trading mode"
            },
            {
              "name": "ORDER_ERROR_CANNOT_AMEND_TO_GTT_WITHOUT_EXPIRYAT",
              "number": "26",
              "description": "Attempt to amend order to GTT without ExpiryAt"
            },
            {
              "name": "ORDER_ERROR_EXPIRYAT_BEFORE_CREATEDAT",
              "number": "27",
              "description": "Attempt to amend ExpiryAt to a value before CreatedAt"
            },
            {
              "name": "ORDER_ERROR_CANNOT_HAVE_GTC_AND_EXPIRYAT",
              "number": "28",
              "description": "Attempt to amend to GTC without an ExpiryAt value"
            },
            {
              "name": "ORDER_ERROR_CANNOT_AMEND_TO_FOK_OR_IOC",
              "number": "29",
              "description": "Amending to FOK or IOC is invalid"
            },
            {
              "name": "ORDER_ERROR_CANNOT_AMEND_TO_GFA_OR_GFN",
              "number": "30",
              "description": "Amending to GFA or GFN is invalid"
            },
            {
              "name": "ORDER_ERROR_CANNOT_AMEND_FROM_GFA_OR_GFN",
              "number": "31",
              "description": "Amending from GFA or GFN is invalid"
            },
            {
              "name": "ORDER_ERROR_CANNOT_SEND_IOC_ORDER_DURING_AUCTION",
              "number": "32",
              "description": "IOC orders are not allowed during auction"
            },
            {
              "name": "ORDER_ERROR_CANNOT_SEND_FOK_ORDER_DURING_AUCTION",
              "number": "33",
              "description": "FOK orders are not allowed during auction"
            },
            {
              "name": "ORDER_ERROR_MUST_BE_LIMIT_ORDER",
              "number": "34",
              "description": "Pegged orders must be LIMIT orders"
            },
            {
              "name": "ORDER_ERROR_MUST_BE_GTT_OR_GTC",
              "number": "35",
              "description": "Pegged orders can only have TIF GTC or GTT"
            },
            {
              "name": "ORDER_ERROR_WITHOUT_REFERENCE_PRICE",
              "number": "36",
              "description": "Pegged order must have a reference price"
            },
            {
              "name": "ORDER_ERROR_BUY_CANNOT_REFERENCE_BEST_ASK_PRICE",
              "number": "37",
              "description": "Buy pegged order cannot reference best ask price"
            },
            {
              "name": "ORDER_ERROR_OFFSET_MUST_BE_GREATER_OR_EQUAL_TO_ZERO",
              "number": "40",
              "description": "Pegged order offset must be \u003e= 0"
            },
            {
              "name": "ORDER_ERROR_SELL_CANNOT_REFERENCE_BEST_BID_PRICE",
              "number": "41",
              "description": "Sell pegged order cannot reference best bid price"
            },
            {
              "name": "ORDER_ERROR_OFFSET_MUST_BE_GREATER_THAN_ZERO",
              "number": "42",
              "description": "Pegged order offset must be \u003e zero"
            },
            {
              "name": "ORDER_ERROR_INSUFFICIENT_ASSET_BALANCE",
              "number": "43",
              "description": "The party has an insufficient balance, or does not have\na general account to submit the order (no deposits made\nfor the required asset)"
            },
            {
              "name": "ORDER_ERROR_CANNOT_AMEND_PEGGED_ORDER_DETAILS_ON_NON_PEGGED_ORDER",
              "number": "44",
              "description": "Cannot amend a non pegged orders details"
            },
            {
              "name": "ORDER_ERROR_UNABLE_TO_REPRICE_PEGGED_ORDER",
              "number": "45",
              "description": "We are unable to re-price a pegged order because a market price is unavailable"
            },
            {
              "name": "ORDER_ERROR_UNABLE_TO_AMEND_PRICE_ON_PEGGED_ORDER",
              "number": "46",
              "description": "It is not possible to amend the price of an existing pegged order"
            },
            {
              "name": "ORDER_ERROR_NON_PERSISTENT_ORDER_OUT_OF_PRICE_BOUNDS",
              "number": "47",
              "description": "An FOK, IOC, or GFN order was rejected because it resulted in trades outside the price bounds"
            }
          ]
        },
        {
          "name": "PeggedReference",
          "longName": "PeggedReference",
          "fullName": "vega.PeggedReference",
          "description": "A pegged reference defines which price point a pegged order is linked to - meaning\nthe price for a pegged order is calculated from the value of the reference price point",
          "values": [
            {
              "name": "PEGGED_REFERENCE_UNSPECIFIED",
              "number": "0",
              "description": "Default value for PeggedReference, no reference given"
            },
            {
              "name": "PEGGED_REFERENCE_MID",
              "number": "1",
              "description": "Mid price reference"
            },
            {
              "name": "PEGGED_REFERENCE_BEST_BID",
              "number": "2",
              "description": "Best bid price reference"
            },
            {
              "name": "PEGGED_REFERENCE_BEST_ASK",
              "number": "3",
              "description": "Best ask price reference"
            }
          ]
        },
        {
          "name": "Side",
          "longName": "Side",
          "fullName": "vega.Side",
          "description": "A side relates to the direction of an order, to Buy, or Sell",
          "values": [
            {
              "name": "SIDE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "SIDE_BUY",
              "number": "1",
              "description": "Buy order"
            },
            {
              "name": "SIDE_SELL",
              "number": "2",
              "description": "Sell order"
            }
          ]
        },
        {
          "name": "Type",
          "longName": "Trade.Type",
          "fullName": "vega.Trade.Type",
          "description": "Type values for a trade",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "TYPE_DEFAULT",
              "number": "1",
              "description": "Normal trading between two parties"
            },
            {
              "name": "TYPE_NETWORK_CLOSE_OUT_GOOD",
              "number": "2",
              "description": "Trading initiated by the network with another party on the book,\nwhich helps to zero-out the positions of one or more distressed parties"
            },
            {
              "name": "TYPE_NETWORK_CLOSE_OUT_BAD",
              "number": "3",
              "description": "Trading initiated by the network with another party off the book,\nwith a distressed party in order to zero-out the position of the party"
            }
          ]
        },
        {
          "name": "TransferType",
          "longName": "TransferType",
          "fullName": "vega.TransferType",
          "description": "Transfers can occur between parties on Vega, these are the types that indicate why a transfer took place",
          "values": [
            {
              "name": "TRANSFER_TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "TRANSFER_TYPE_LOSS",
              "number": "1",
              "description": "Loss"
            },
            {
              "name": "TRANSFER_TYPE_WIN",
              "number": "2",
              "description": "Win"
            },
            {
              "name": "TRANSFER_TYPE_CLOSE",
              "number": "3",
              "description": "Close"
            },
            {
              "name": "TRANSFER_TYPE_MTM_LOSS",
              "number": "4",
              "description": "Mark to market loss"
            },
            {
              "name": "TRANSFER_TYPE_MTM_WIN",
              "number": "5",
              "description": "Mark to market win"
            },
            {
              "name": "TRANSFER_TYPE_MARGIN_LOW",
              "number": "6",
              "description": "Margin too low"
            },
            {
              "name": "TRANSFER_TYPE_MARGIN_HIGH",
              "number": "7",
              "description": "Margin too high"
            },
            {
              "name": "TRANSFER_TYPE_MARGIN_CONFISCATED",
              "number": "8",
              "description": "Margin was confiscated"
            },
            {
              "name": "TRANSFER_TYPE_MAKER_FEE_PAY",
              "number": "9",
              "description": "Pay maker fee"
            },
            {
              "name": "TRANSFER_TYPE_MAKER_FEE_RECEIVE",
              "number": "10",
              "description": "Receive maker fee"
            },
            {
              "name": "TRANSFER_TYPE_INFRASTRUCTURE_FEE_PAY",
              "number": "11",
              "description": "Pay infrastructure fee"
            },
            {
              "name": "TRANSFER_TYPE_INFRASTRUCTURE_FEE_DISTRIBUTE",
              "number": "12",
              "description": "Receive infrastructure fee"
            },
            {
              "name": "TRANSFER_TYPE_LIQUIDITY_FEE_PAY",
              "number": "13",
              "description": "Pay liquidity fee"
            },
            {
              "name": "TRANSFER_TYPE_LIQUIDITY_FEE_DISTRIBUTE",
              "number": "14",
              "description": "Receive liquidity fee"
            },
            {
              "name": "TRANSFER_TYPE_BOND_LOW",
              "number": "15",
              "description": "Bond too low"
            },
            {
              "name": "TRANSFER_TYPE_BOND_HIGH",
              "number": "16",
              "description": "Bond too high"
            },
            {
              "name": "TRANSFER_TYPE_WITHDRAW_LOCK",
              "number": "17",
              "description": "Lock amount for withdraw"
            },
            {
              "name": "TRANSFER_TYPE_WITHDRAW",
              "number": "18",
              "description": "Actual withdraw from system"
            },
            {
              "name": "TRANSFER_TYPE_DEPOSIT",
              "number": "19",
              "description": "Deposit funds"
            },
            {
              "name": "TRANSFER_TYPE_BOND_SLASHING",
              "number": "20",
              "description": "Bond slashing"
            },
            {
              "name": "TRANSFER_TYPE_STAKE_REWARD",
              "number": "21",
              "description": "Stake reward"
            },
            {
              "name": "TRANSFER_TYPE_TRANSFER_FUNDS_SEND",
              "number": "22",
              "description": "Transfer funds"
            },
            {
              "name": "TRANSFER_TYPE_TRANSFER_FUNDS_DISTRIBUTE",
              "number": "23",
              "description": "Transfer funds"
            }
          ]
        },
        {
          "name": "ValidatorNodeStatus",
          "longName": "ValidatorNodeStatus",
          "fullName": "vega.ValidatorNodeStatus",
          "description": "Validation status of the node",
          "values": [
            {
              "name": "VALIDATOR_NODE_STATUS_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "VALIDATOR_NODE_STATUS_TENDERMINT",
              "number": "1",
              "description": "The node is a tendermint validator"
            },
            {
              "name": "VALIDATOR_NODE_STATUS_ERSATZ",
              "number": "2",
              "description": "The node is an ersatz validator"
            },
            {
              "name": "VALIDATOR_NODE_STATUS_PENDING",
              "number": "3",
              "description": "The node is a pending validator"
            }
          ]
        },
        {
          "name": "Status",
          "longName": "Withdrawal.Status",
          "fullName": "vega.Withdrawal.Status",
          "description": "The status of the withdrawal",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "STATUS_OPEN",
              "number": "1",
              "description": "The withdrawal is open and being processed by the network"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "2",
              "description": "The withdrawal have been cancelled"
            },
            {
              "name": "STATUS_FINALIZED",
              "number": "3",
              "description": "The withdrawal went through and is fully finalised, the funds are removed from the\nVega network and are unlocked on the foreign chain bridge, for example, on the Ethereum network"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Account",
          "longName": "Account",
          "fullName": "vega.Account",
          "description": "Represents an account for an asset on Vega for a particular owner or party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique account identifier (used internally by Vega)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "The party that the account belongs to, special values include `network`, which represents the Vega network and is\nmost commonly seen during liquidation of distressed trading positions",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "Balance of the asset, the balance is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places\nand importantly balances cannot be negative",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset identifier for the account",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier for the account, if [`AccountType`](#vega.AccountType).`ACCOUNT_TYPE_GENERAL` this will be empty",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "The account type related to this account",
              "label": "",
              "type": "AccountType",
              "longType": "AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AuctionIndicativeState",
          "longName": "AuctionIndicativeState",
          "fullName": "vega.AuctionIndicativeState",
          "description": "AuctionIndicativeState is used to emit an event with the indicative price/volume per market during an auction",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "The market identifier for which this state relates to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "indicative_price",
              "description": "The Indicative Uncrossing Price is the price at which all trades would occur if we uncrossed the auction now",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "indicative_volume",
              "description": "The Indicative Uncrossing Volume is the volume available at the Indicative crossing price if we uncrossed the auction now",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_start",
              "description": "The timestamp at which the auction started",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_end",
              "description": "The timestamp at which the auction is meant to stop",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Candle",
          "longName": "Candle",
          "fullName": "vega.Candle",
          "description": "Represents the high, low, open, and closing prices for an interval of trading,\nreferred to commonly as a candlestick or candle",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "timestamp",
              "description": "Timestamp for the point in time when the candle was initially created/opened, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "datetime",
              "description": "An ISO-8601 datetime with nanosecond precision for when the candle was last updated",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "high",
              "description": "Highest price for trading during the candle interval",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "low",
              "description": "Lowest price for trading during the candle interval",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "open",
              "description": "Open trade price",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "close",
              "description": "Closing trade price",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "Total trading volume during the candle interval",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "interval",
              "description": "Time interval for the candle - See [`Interval`](#vega.Interval)",
              "label": "",
              "type": "Interval",
              "longType": "Interval",
              "fullType": "vega.Interval",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Delegation",
          "longName": "Delegation",
          "fullName": "vega.Delegation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "Party which is delegating",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "Node ID",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount delegated",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "Epoch of delegation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Deposit",
          "longName": "Deposit",
          "fullName": "vega.Deposit",
          "description": "A deposit on to the Vega network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique identifier for the deposit",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the deposit",
              "label": "",
              "type": "Status",
              "longType": "Deposit.Status",
              "fullType": "vega.Deposit.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier of the user initiating the deposit",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "The Vega asset targeted by this deposit",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount to be deposited",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "The hash of the transaction from the foreign chain",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "credited_timestamp",
              "description": "Timestamp for when the Vega account was updated with the deposit",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_timestamp",
              "description": "Timestamp for when the deposit was created on the Vega network",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DispatchStrategy",
          "longName": "DispatchStrategy",
          "fullName": "vega.DispatchStrategy",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_for_metric",
              "description": "The asset to use for metric",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metric",
              "description": "The metric to apply",
              "label": "",
              "type": "DispatchMetric",
              "longType": "DispatchMetric",
              "fullType": "vega.DispatchMetric",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "markets",
              "description": "Optional markets in scope",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Epoch",
          "longName": "Epoch",
          "fullName": "vega.Epoch",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "seq",
              "description": "Sequence is used as epoch identifier",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamps",
              "description": "Timestamps for start/end etc",
              "label": "",
              "type": "EpochTimestamps",
              "longType": "EpochTimestamps",
              "fullType": "vega.EpochTimestamps",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validators",
              "description": "Validators that participated in this epoch",
              "label": "repeated",
              "type": "Node",
              "longType": "Node",
              "fullType": "vega.Node",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "delegations",
              "description": "List of all delegations in epoch",
              "label": "repeated",
              "type": "Delegation",
              "longType": "Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochData",
          "longName": "EpochData",
          "fullName": "vega.EpochData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "total",
              "description": "Total number of epochs since node was created",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "offline",
              "description": "Total number of offline epochs since node was created",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "online",
              "description": "Total number of online epochs since node was created",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochParticipation",
          "longName": "EpochParticipation",
          "fullName": "vega.EpochParticipation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "",
              "label": "",
              "type": "Epoch",
              "longType": "Epoch",
              "fullType": "vega.Epoch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "offline",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "online",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_rewards",
              "description": "",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochTimestamps",
          "longName": "EpochTimestamps",
          "fullName": "vega.EpochTimestamps",
          "description": "Describes in both human readable and block time when an epoch spans",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "start_time",
              "description": "Timestamp of epoch start in nanoseconds\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expiry_time",
              "description": "Timestamp of epoch expiry in nanoseconds\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_time",
              "description": "Timestamp of epoch end in nanoseconds, empty if not started\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "first_block",
              "description": "Height of first block in the epoch",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_block",
              "description": "Height of last block in the epoch, empty if not ended",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Erc20WithdrawExt",
          "longName": "Erc20WithdrawExt",
          "fullName": "vega.Erc20WithdrawExt",
          "description": "An extension of data required for the withdraw submissions",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "receiver_address",
              "description": "The address into which the bridge will release the funds",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ErrorDetail",
          "longName": "ErrorDetail",
          "fullName": "vega.ErrorDetail",
          "description": "Represents Vega domain specific error information over gRPC/Protobuf",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "code",
              "description": "A Vega API domain specific unique error code, useful for client side mappings, e.g. 10004",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "A message that describes the error in more detail, should describe the problem encountered",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "inner",
              "description": "Any inner error information that could add more context, or be helpful for error reporting",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthereumConfig",
          "longName": "EthereumConfig",
          "fullName": "vega.EthereumConfig",
          "description": "Ethereum configuration details.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "network_id",
              "description": "Network identifier of this Ethereum network.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_id",
              "description": "Chain identifier of this Ethereum network.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collateral_bridge_contract",
              "description": "Contract configuration of the collateral bridge contract for this Ethereum network.",
              "label": "",
              "type": "EthereumContractConfig",
              "longType": "EthereumContractConfig",
              "fullType": "vega.EthereumContractConfig",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "confirmations",
              "description": "Number of block confirmations to wait to consider an Ethereum transaction trusted.\nAn Ethereum block is trusted when there are at least \"n\" blocks confirmed by the\nnetwork, \"n\" being the number of `confirmations` required. If `confirmations` was set to `3`,\nand the current block to be forged (or mined) on Ethereum is block 14, block\n10 would be considered as trusted, but not block 11.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staking_bridge_contract",
              "description": "Contract configuration of the stacking bridge contract for this Ethereum network.",
              "label": "",
              "type": "EthereumContractConfig",
              "longType": "EthereumContractConfig",
              "fullType": "vega.EthereumContractConfig",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "token_vesting_contract",
              "description": "Contract configuration of the token vesting contract for this Ethereum network.",
              "label": "",
              "type": "EthereumContractConfig",
              "longType": "EthereumContractConfig",
              "fullType": "vega.EthereumContractConfig",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "multisig_control_contract",
              "description": "Contract configuration of the multisig controld contract for this Ethereum network.",
              "label": "",
              "type": "EthereumContractConfig",
              "longType": "EthereumContractConfig",
              "fullType": "vega.EthereumContractConfig",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthereumContractConfig",
          "longName": "EthereumContractConfig",
          "fullName": "vega.EthereumContractConfig",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "Address of the contract for this Ethereum network. The address should start with \"0x\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "deployment_block_height",
              "description": "Block height at which the stacking contract has been deployed for this Ethereum network.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Fee",
          "longName": "Fee",
          "fullName": "vega.Fee",
          "description": "Represents any fees paid by a party, resulting from a trade",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "maker_fee",
              "description": "Fee amount paid to the non-aggressive party of the trade",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "infrastructure_fee",
              "description": "Fee amount paid for maintaining the Vega infrastructure",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_fee",
              "description": "Fee amount paid to market makers",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FinancialAmount",
          "longName": "FinancialAmount",
          "fullName": "vega.FinancialAmount",
          "description": "Asset value information used within a transfer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "amount",
              "description": "A signed integer amount of asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "KeyValueBundle",
          "longName": "KeyValueBundle",
          "fullName": "vega.KeyValueBundle",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tolerance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "StateVarValue",
              "longType": "StateVarValue",
              "fullType": "vega.StateVarValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LedgerEntry",
          "longName": "LedgerEntry",
          "fullName": "vega.LedgerEntry",
          "description": "Represents a ledger entry on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from_account",
              "description": "One or more accounts to transfer from",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_account",
              "description": "One or more accounts to transfer to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "An amount to transfer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "A reference for auditing purposes",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type of ledger entry",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Timestamp for the time the ledger entry was created, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityOrder",
          "longName": "LiquidityOrder",
          "fullName": "vega.LiquidityOrder",
          "description": "Represents a liquidity order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "reference",
              "description": "The pegged reference point for the order",
              "label": "",
              "type": "PeggedReference",
              "longType": "PeggedReference",
              "fullType": "vega.PeggedReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proportion",
              "description": "The relative proportion of the commitment to be allocated at a price level",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "offset",
              "description": "The offset/amount of units away for the order",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityOrderReference",
          "longName": "LiquidityOrderReference",
          "fullName": "vega.LiquidityOrderReference",
          "description": "A pair of a liquidity order and the id of the generated order by the core",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order_id",
              "description": "Unique identifier of the pegged order generated by the core to fulfil this liquidity order",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_order",
              "description": "The liquidity order from the original submission",
              "label": "",
              "type": "LiquidityOrder",
              "longType": "LiquidityOrder",
              "fullType": "vega.LiquidityOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProviderFeeShare",
          "longName": "LiquidityProviderFeeShare",
          "fullName": "vega.LiquidityProviderFeeShare",
          "description": "The equity like share of liquidity fee for each liquidity provider",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "The liquidity provider party id",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "equity_like_share",
              "description": "The share own by this liquidity provider (float)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "average_entry_valuation",
              "description": "The average entry valuation of the liquidity provider for the market",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvision",
          "longName": "LiquidityProvision",
          "fullName": "vega.LiquidityProvision",
          "description": "An Liquidity provider commitment",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Unique party identifier for the creator of the provision",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Timestamp for when the order was created at, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Timestamp for when the order was updated at, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier for the order, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "commitment_amount",
              "description": "Specified as a unitless number that represents the amount of settlement asset of the market",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee",
              "description": "Nominated liquidity fee factor, which is an input to the calculation of taker fees on the market, as per seeting fees and rewarding liquidity providers",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sells",
              "description": "A set of liquidity sell orders to meet the liquidity provision obligation",
              "label": "repeated",
              "type": "LiquidityOrderReference",
              "longType": "LiquidityOrderReference",
              "fullType": "vega.LiquidityOrderReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buys",
              "description": "A set of liquidity buy orders to meet the liquidity provision obligation",
              "label": "repeated",
              "type": "LiquidityOrderReference",
              "longType": "LiquidityOrderReference",
              "fullType": "vega.LiquidityOrderReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of this liquidity provision order",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of this liquidity provision order",
              "label": "",
              "type": "Status",
              "longType": "LiquidityProvision.Status",
              "fullType": "vega.LiquidityProvision.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "A reference shared between this liquidity provision and all it's orders",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarginLevels",
          "longName": "MarginLevels",
          "fullName": "vega.MarginLevels",
          "description": "Represents the margin levels for a party on a market at a given time",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "maintenance_margin",
              "description": "Maintenance margin value",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "search_level",
              "description": "Search level value",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "initial_margin",
              "description": "Initial margin value",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collateral_release_level",
              "description": "Collateral release level value",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Timestamp for the time the ledger entry was created, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketData",
          "longName": "MarketData",
          "fullName": "vega.MarketData",
          "description": "Represents data generated by a market when open",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "mark_price",
              "description": "Mark price, as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_bid_price",
              "description": "Highest price level on an order book for buy orders, as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_bid_volume",
              "description": "Aggregated volume being bid at the best bid price",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_offer_price",
              "description": "Lowest price level on an order book for offer orders",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_offer_volume",
              "description": "Aggregated volume being offered at the best offer price, as an integer, for example `123456` is a correctly\n // formatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_static_bid_price",
              "description": "Highest price on the order book for buy orders not including pegged orders",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_static_bid_volume",
              "description": "Total volume at the best static bid price excluding pegged orders",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_static_offer_price",
              "description": "Lowest price on the order book for sell orders not including pegged orders",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "best_static_offer_volume",
              "description": "Total volume at the best static offer price excluding pegged orders",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "mid_price",
              "description": "Arithmetic average of the best bid price and best offer price, as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "static_mid_price",
              "description": "Arithmetic average of the best static bid price and best static offer price",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market",
              "description": "Market identifier for the data",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Timestamp at which this mark price was relevant, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "open_interest",
              "description": "The sum of the size of all positions greater than 0 on the market",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_end",
              "description": "Time in seconds until the end of the auction (0 if currently not in auction period)",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_start",
              "description": "Time until next auction (used in FBA's) - currently always 0",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "indicative_price",
              "description": "Indicative price (zero if not in auction)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "indicative_volume",
              "description": "Indicative volume (zero if not in auction)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_trading_mode",
              "description": "The current trading mode for the market",
              "label": "",
              "type": "TradingMode",
              "longType": "Market.TradingMode",
              "fullType": "vega.Market.TradingMode",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trigger",
              "description": "When a market is in an auction trading mode, this field indicates what triggered the auction",
              "label": "",
              "type": "AuctionTrigger",
              "longType": "AuctionTrigger",
              "fullType": "vega.AuctionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "extension_trigger",
              "description": "When a market auction is extended, this field indicates what caused the extension",
              "label": "",
              "type": "AuctionTrigger",
              "longType": "AuctionTrigger",
              "fullType": "vega.AuctionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_stake",
              "description": "Targeted stake for the given market",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "supplied_stake",
              "description": "Available stake for the given market",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_monitoring_bounds",
              "description": "One or more price monitoring bounds for the current timestamp",
              "label": "repeated",
              "type": "PriceMonitoringBounds",
              "longType": "PriceMonitoringBounds",
              "fullType": "vega.PriceMonitoringBounds",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_value_proxy",
              "description": "the market value proxy",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provider_fee_share",
              "description": "the equity like share of liquidity fee for each liquidity provider",
              "label": "repeated",
              "type": "LiquidityProviderFeeShare",
              "longType": "LiquidityProviderFeeShare",
              "fullType": "vega.LiquidityProviderFeeShare",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDepth",
          "longName": "MarketDepth",
          "fullName": "vega.MarketDepth",
          "description": "Represents market depth or order book data for the specified market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy",
              "description": "Collection of price levels for the buy side of the book",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell",
              "description": "Collection of price levels for the sell side of the book",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sequence_number",
              "description": "Sequence number for the market depth data returned",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDepthUpdate",
          "longName": "MarketDepthUpdate",
          "fullName": "vega.MarketDepthUpdate",
          "description": "Represents the changed market depth since the last update",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy",
              "description": "Collection of updated price levels for the buy side of the book",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell",
              "description": "Collection of updated price levels for the sell side of the book",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sequence_number",
              "description": "Sequence number for the market depth update data returned. It is increasing but not monotonic.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "previous_sequence_number",
              "description": "Sequence number of of the previous market depth update, for checking there are no gaps.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MatrixValue",
          "longName": "MatrixValue",
          "fullName": "vega.MatrixValue",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "repeated",
              "type": "VectorValue",
              "longType": "VectorValue",
              "fullType": "vega.VectorValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NetworkLimits",
          "longName": "NetworkLimits",
          "fullName": "vega.NetworkLimits",
          "description": "Network limits, defined in the genesis file",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "can_propose_market",
              "description": "Are market proposals allowed at this point in time",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "can_propose_asset",
              "description": "Are asset proposals allowed at this point in time",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bootstrap_finished",
              "description": "True once block count \u003e bootstrapBlockCount",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_market_enabled",
              "description": "Are market proposals enabled on this chain",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_asset_enabled",
              "description": "Are asset proposals enabled on this chain",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bootstrap_block_count",
              "description": "How many blocks before the chain comes out of bootstrap mode",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "genesis_loaded",
              "description": "True once the genesis file is loaded",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_market_enabled_from",
              "description": "The date/timestamp in unix nanoseconds at which market proposals will be enabled (0 indicates not set)",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_asset_enabled_from",
              "description": "The date/timestamp in unix nanoseconds at which asset proposals will be enabled (0 indicates not set)",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NetworkParameter",
          "longName": "NetworkParameter",
          "fullName": "vega.NetworkParameter",
          "description": "Represents a network parameter on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "The unique key",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "The value for the network parameter",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Node",
          "longName": "Node",
          "fullName": "vega.Node",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The node ID (wallet ID)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pub_key",
              "description": "Pub key of the node operator",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tm_pub_key",
              "description": "Public key of Tendermint",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_adddress",
              "description": "Ethereum public key of the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "info_url",
              "description": "URL where I can find out more info on the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "location",
              "description": "Country code for the location of the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staked_by_operator",
              "description": "The amount the node has put up themselves",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staked_by_delegates",
              "description": "The amount of stake that has been delegated by token holders",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staked_total",
              "description": "Total amount staked on node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_intended_stake",
              "description": "Max amount of (wanted) stake, is this a network param or a node param",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_stake",
              "description": "Amount of stake on the next epoch",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_data",
              "description": "Informantion about epoch",
              "label": "",
              "type": "EpochData",
              "longType": "EpochData",
              "fullType": "vega.EpochData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Node status",
              "label": "",
              "type": "NodeStatus",
              "longType": "NodeStatus",
              "fullType": "vega.NodeStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "delegations",
              "description": "Node's delegations",
              "label": "repeated",
              "type": "Delegation",
              "longType": "Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_score",
              "description": "Node reward score",
              "label": "",
              "type": "RewardScore",
              "longType": "RewardScore",
              "fullType": "vega.RewardScore",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ranking_score",
              "description": "Node ranking information",
              "label": "",
              "type": "RankingScore",
              "longType": "RankingScore",
              "fullType": "vega.RankingScore",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Node name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "avatar_url",
              "description": "Avatar url",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeData",
          "longName": "NodeData",
          "fullName": "vega.NodeData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "staked_total",
              "description": "Total staked amount across all nodes",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_nodes",
              "description": "Total number of nodes",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "inactive_nodes",
              "description": "Number of inactive nodes",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validating_nodes",
              "description": "Number of nodes validating",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "uptime",
              "description": "Total uptime for all epochs across all nodes",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Order",
          "longName": "Order",
          "fullName": "vega.Order",
          "description": "An order can be submitted, amended and cancelled on Vega in an attempt to make trades with other parties",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique identifier for the order (set by the system after consensus)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier for the order",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier for the order",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "side",
              "description": "Side for the order, e.g. SIDE_BUY or SIDE_SELL - See [`Side`](#vega.Side)",
              "label": "",
              "type": "Side",
              "longType": "Side",
              "fullType": "vega.Side",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price for the order, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Size for the order, for example, in a futures market the size equals the number of contracts",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "remaining",
              "description": "Size remaining, when this reaches 0 then the order is fully filled and status becomes STATUS_FILLED",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time_in_force",
              "description": "Time in force indicates how long an order will remain active before it is executed or expires.\n- See [`Order.TimeInForce`](#vega.Order.TimeInForce)",
              "label": "",
              "type": "TimeInForce",
              "longType": "Order.TimeInForce",
              "fullType": "vega.Order.TimeInForce",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type for the order - See [`Order.Type`](#vega.Order.Type)",
              "label": "",
              "type": "Type",
              "longType": "Order.Type",
              "fullType": "vega.Order.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Timestamp for when the order was created at, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "The current status for the order. See [`Order.Status`](#vega.Order.Status)\n- For detail on `STATUS_REJECTED` please check the [`OrderError`](#vega.OrderError) value given in the `reason` field",
              "label": "",
              "type": "Status",
              "longType": "Order.Status",
              "fullType": "vega.Order.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expires_at",
              "description": "Timestamp for when the order will expire, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`, valid only for [`Order.TimeInForce`](#vega.Order.TimeInForce)`.TIME_IN_FORCE_GTT`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "Reference given for the order, this is typically used to retrieve an order submitted through consensus\n- Currently set internally by the node to return a unique reference identifier for the order submission",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "If the Order `status` is `STATUS_REJECTED` then an [`OrderError`](#vega.OrderError) reason will be specified\n- The default for this field is `ORDER_ERROR_NONE` which signifies that there were no errors",
              "label": "",
              "type": "OrderError",
              "longType": "OrderError",
              "fullType": "vega.OrderError",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Timestamp for when the Order was last updated, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "The version for the order, initial value is version 1 and is incremented after each successful amend",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "batch_id",
              "description": "Batch identifier for the order, used internally for orders submitted during auctions\nto keep track of the auction batch this order falls under (required for fees calculation)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pegged_order",
              "description": "Pegged order details, used only if the order represents a pegged order.",
              "label": "",
              "type": "PeggedOrder",
              "longType": "PeggedOrder",
              "fullType": "vega.PeggedOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_id",
              "description": "Is this order created as part of a liquidity provision, will be empty if not.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderCancellationConfirmation",
          "longName": "OrderCancellationConfirmation",
          "fullName": "vega.OrderCancellationConfirmation",
          "description": "Used when cancelling an Order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "The order that was cancelled",
              "label": "",
              "type": "Order",
              "longType": "Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderConfirmation",
          "longName": "OrderConfirmation",
          "fullName": "vega.OrderConfirmation",
          "description": "Used when confirming an Order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "The order that was confirmed",
              "label": "",
              "type": "Order",
              "longType": "Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trades",
              "description": "0 or more trades that were emitted",
              "label": "repeated",
              "type": "Trade",
              "longType": "Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "passive_orders_affected",
              "description": "0 or more passive orders that were affected",
              "label": "repeated",
              "type": "Order",
              "longType": "Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Party",
          "longName": "Party",
          "fullName": "vega.Party",
          "description": "A party represents an entity who wishes to trade on or query a Vega network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "A unique identifier for the party, typically represented by a public key",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PeggedOrder",
          "longName": "PeggedOrder",
          "fullName": "vega.PeggedOrder",
          "description": "Pegged orders are limit orders where the price is specified in the form REFERENCE +/- OFFSET\nThey can be used for any limit order that is valid during continuous trading",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "reference",
              "description": "Which price point are we linked to",
              "label": "",
              "type": "PeggedReference",
              "longType": "PeggedReference",
              "fullType": "vega.PeggedReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "offset",
              "description": "Offset from the price reference",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Position",
          "longName": "Position",
          "fullName": "vega.Position",
          "description": "Represents position data for a party on the specified market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "open_volume",
              "description": "Open volume for the position, value is signed +ve for long and -ve for short",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "realised_pnl",
              "description": "Realised profit and loss for the position, value is signed +ve for long and -ve for short",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "unrealised_pnl",
              "description": "Unrealised profit and loss for the position, value is signed +ve for long and -ve for short",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "average_entry_price",
              "description": "Average entry price for the position, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Timestamp for the latest time the position was updated",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionTrade",
          "longName": "PositionTrade",
          "fullName": "vega.PositionTrade",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "volume",
              "description": "Volume for the position trade, value is signed +ve for long and -ve for short",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price for the position trade, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Price",
          "longName": "Price",
          "fullName": "vega.Price",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "Price value, given as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceLevel",
          "longName": "PriceLevel",
          "fullName": "vega.PriceLevel",
          "description": "Represents a price level from market depth or order book data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "price",
              "description": "Price for the price level, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "number_of_orders",
              "description": "Number of orders at the price level",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "Volume at the price level",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceMonitoringBounds",
          "longName": "PriceMonitoringBounds",
          "fullName": "vega.PriceMonitoringBounds",
          "description": "Represents a list of valid (at the current timestamp) price ranges per associated trigger",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "min_valid_price",
              "description": "Minimum price that isn't currently breaching the specified price monitoring trigger",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_valid_price",
              "description": "Maximum price that isn't currently breaching the specified price monitoring trigger",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trigger",
              "description": "Price monitoring trigger associated with the bounds",
              "label": "",
              "type": "PriceMonitoringTrigger",
              "longType": "PriceMonitoringTrigger",
              "fullType": "vega.PriceMonitoringTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference_price",
              "description": "Reference price used to calculate the valid price range",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RankingScore",
          "longName": "RankingScore",
          "fullName": "vega.RankingScore",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "stake_score",
              "description": "stake based score - no anti-whaling",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "performance_score",
              "description": "performance based score",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "previous_status",
              "description": "the status of the validator in the previous epoch",
              "label": "",
              "type": "ValidatorNodeStatus",
              "longType": "ValidatorNodeStatus",
              "fullType": "vega.ValidatorNodeStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "the status of the validator in the current epoch",
              "label": "",
              "type": "ValidatorNodeStatus",
              "longType": "ValidatorNodeStatus",
              "fullType": "vega.ValidatorNodeStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "voting_power",
              "description": "tendermint voting power of the validator",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ranking_score",
              "description": "final score",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Reward",
          "longName": "Reward",
          "fullName": "vega.Reward",
          "description": "Details for a single reward payment",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "percentage_of_total",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "received_at",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardScore",
          "longName": "RewardScore",
          "fullName": "vega.RewardScore",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "raw_validator_score",
              "description": "stake based score - with anti-whaling",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "performance_score",
              "description": "performance based score",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "multisig_score",
              "description": "multisig score",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_score",
              "description": "un-normalised score",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "normalised_score",
              "description": "normalised validator score for rewards",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_status",
              "description": "the status of the validator for reward",
              "label": "",
              "type": "ValidatorNodeStatus",
              "longType": "ValidatorNodeStatus",
              "fullType": "vega.ValidatorNodeStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardSummary",
          "longName": "RewardSummary",
          "fullName": "vega.RewardSummary",
          "description": "Details for rewards for a single asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Total amount of rewards for the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RiskFactor",
          "longName": "RiskFactor",
          "fullName": "vega.RiskFactor",
          "description": "Risk factors are used to calculate the current risk associated with orders trading on a given market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "Market ID that relates to this risk factor",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "short",
              "description": "Short Risk factor value",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "long",
              "description": "Long Risk factor value",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ScalarValue",
          "longName": "ScalarValue",
          "fullName": "vega.ScalarValue",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StateValueProposal",
          "longName": "StateValueProposal",
          "fullName": "vega.StateValueProposal",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "state_var_id",
              "description": "state variable identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "event_id",
              "description": "event identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "kvb",
              "description": "key value tolerance triplets",
              "label": "repeated",
              "type": "KeyValueBundle",
              "longType": "KeyValueBundle",
              "fullType": "vega.KeyValueBundle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StateVarValue",
          "longName": "StateVarValue",
          "fullName": "vega.StateVarValue",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "scalar_val",
              "description": "",
              "label": "",
              "type": "ScalarValue",
              "longType": "ScalarValue",
              "fullType": "vega.ScalarValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            },
            {
              "name": "vector_val",
              "description": "",
              "label": "",
              "type": "VectorValue",
              "longType": "VectorValue",
              "fullType": "vega.VectorValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            },
            {
              "name": "matrix_val",
              "description": "",
              "label": "",
              "type": "MatrixValue",
              "longType": "MatrixValue",
              "fullType": "vega.MatrixValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Timestamp",
          "longName": "Timestamp",
          "fullName": "vega.Timestamp",
          "description": "A timestamp in nanoseconds since epoch\nSee [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "Timestamp value",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Trade",
          "longName": "Trade",
          "fullName": "vega.Trade",
          "description": "A trade occurs when an aggressive order crosses one or more passive orders on the order book for a market on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique identifier for the trade (generated by Vega)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier (the market that the trade occurred on)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price for the trade, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Size filled for the trade",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buyer",
              "description": "Unique party identifier for the buyer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seller",
              "description": "Unique party identifier for the seller",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "aggressor",
              "description": "Direction of the aggressive party e.g. SIDE_BUY or SIDE_SELL - See [`Side`](#vega.Side)",
              "label": "",
              "type": "Side",
              "longType": "Side",
              "fullType": "vega.Side",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy_order",
              "description": "Identifier of the order from the buy side",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell_order",
              "description": "Identifier of the order from the sell side",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Timestamp for when the trade occurred, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type for the trade - See [`Trade.Type`](#vega.Trade.Type)",
              "label": "",
              "type": "Type",
              "longType": "Trade.Type",
              "fullType": "vega.Trade.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buyer_fee",
              "description": "Fee amount charged to the buyer party for the trade",
              "label": "",
              "type": "Fee",
              "longType": "Fee",
              "fullType": "vega.Fee",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seller_fee",
              "description": "Fee amount charged to the seller party for the trade",
              "label": "",
              "type": "Fee",
              "longType": "Fee",
              "fullType": "vega.Fee",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buyer_auction_batch",
              "description": "Auction batch number that the buy side order was placed in",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seller_auction_batch",
              "description": "Auction batch number that the sell side order was placed in",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradeSet",
          "longName": "TradeSet",
          "fullName": "vega.TradeSet",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "trades",
              "description": "A set of one or more trades",
              "label": "repeated",
              "type": "Trade",
              "longType": "Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Transfer",
          "longName": "Transfer",
          "fullName": "vega.Transfer",
          "description": "Represents a financial transfer within Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "owner",
              "description": "Party identifier for the owner of the transfer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "A financial amount (of an asset) to transfer",
              "label": "",
              "type": "FinancialAmount",
              "longType": "FinancialAmount",
              "fullType": "vega.FinancialAmount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "The type of transfer, gives the reason for the transfer",
              "label": "",
              "type": "TransferType",
              "longType": "TransferType",
              "fullType": "vega.TransferType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "min_amount",
              "description": "A minimum amount",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "optional dispatch strategy",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferBalance",
          "longName": "TransferBalance",
          "fullName": "vega.TransferBalance",
          "description": "Represents the balance for an account during a transfer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "account",
              "description": "The account relating to the transfer",
              "label": "",
              "type": "Account",
              "longType": "Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "The balance relating to the transfer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferRequest",
          "longName": "TransferRequest",
          "fullName": "vega.TransferRequest",
          "description": "Represents a request to transfer from one set of accounts to another",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from_account",
              "description": "One or more accounts to transfer from",
              "label": "repeated",
              "type": "Account",
              "longType": "Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_account",
              "description": "One or more accounts to transfer to",
              "label": "repeated",
              "type": "Account",
              "longType": "Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "An amount to transfer for the asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "min_amount",
              "description": "A minimum amount",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "A reference for auditing purposes",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferResponse",
          "longName": "TransferResponse",
          "fullName": "vega.TransferResponse",
          "description": "Represents the response from a transfer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfers",
              "description": "One or more ledger entries representing the transfers",
              "label": "repeated",
              "type": "LedgerEntry",
              "longType": "LedgerEntry",
              "fullType": "vega.LedgerEntry",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balances",
              "description": "One or more account balances",
              "label": "repeated",
              "type": "TransferBalance",
              "longType": "TransferBalance",
              "fullType": "vega.TransferBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Uint64Value",
          "longName": "Uint64Value",
          "fullName": "vega.Uint64Value",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VectorValue",
          "longName": "VectorValue",
          "fullName": "vega.VectorValue",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WithdrawExt",
          "longName": "WithdrawExt",
          "fullName": "vega.WithdrawExt",
          "description": "Withdrawal external details",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "erc20",
              "description": "ERC20 withdrawal details",
              "label": "",
              "type": "Erc20WithdrawExt",
              "longType": "Erc20WithdrawExt",
              "fullType": "vega.Erc20WithdrawExt",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "ext",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Withdrawal",
          "longName": "Withdrawal",
          "fullName": "vega.Withdrawal",
          "description": "A withdrawal from the Vega network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Unique identifier for the withdrawal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Unique party identifier of the user initiating the withdrawal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount to be withdrawn",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "The asset we want to withdraw funds from",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "The status of the withdrawal",
              "label": "",
              "type": "Status",
              "longType": "Withdrawal.Status",
              "fullType": "vega.Withdrawal.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ref",
              "description": "The reference which is used by the foreign chain\nto refer to this withdrawal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expiry",
              "description": "The time until when the withdrawal is valid",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "The hash of the foreign chain for this transaction",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_timestamp",
              "description": "Timestamp for when the network started to process this withdrawal",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdrawn_timestamp",
              "description": "Timestamp for when the withdrawal was finalised by the network",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ext",
              "description": "Foreign chain specifics",
              "label": "",
              "type": "WithdrawExt",
              "longType": "WithdrawExt",
              "fullType": "vega.WithdrawExt",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/oracles/v1/data.proto",
      "description": "",
      "package": "oracles.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "OracleData",
          "longName": "OracleData",
          "fullName": "oracles.v1.OracleData",
          "description": "OracleData describes valid oracle data that has been received by the node.\nIt represents both matched and unmatched oracle data.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pub_keys",
              "description": "pubKeys is the list of authorized public keys that signed the data for this\noracle. All the public keys in the oracle data should be contained in these\npublic keys.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "data holds all the properties of the oracle data",
              "label": "repeated",
              "type": "Property",
              "longType": "Property",
              "fullType": "oracles.v1.Property",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "matched_spec_ids",
              "description": "matched_specs_ids lists all the oracle specs that matched this oracle data.\nWhen the array is empty, it means no oracle spec matched this oracle data.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "broadcast_at",
              "description": "broadcast_at is the time at which the data was broadcast to the markets\nwith a matching oracle spec.\nIt has no value when the oracle date did not match any oracle spec.\nThe value is a Unix timestamp in nanoseconds.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Property",
          "longName": "Property",
          "fullName": "oracles.v1.Property",
          "description": "Property describes one property of an oracle spec with a key with its value.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "name is the name of the property.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "value is the value of the property.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/oracles/v1/spec.proto",
      "description": "",
      "package": "oracles.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "Operator",
          "longName": "Condition.Operator",
          "fullName": "oracles.v1.Condition.Operator",
          "description": "Comparator describes the type of comparison.",
          "values": [
            {
              "name": "OPERATOR_UNSPECIFIED",
              "number": "0",
              "description": "The default value"
            },
            {
              "name": "OPERATOR_EQUALS",
              "number": "1",
              "description": "Verify if the property values are strictly equal or not."
            },
            {
              "name": "OPERATOR_GREATER_THAN",
              "number": "2",
              "description": "Verify if the oracle data value is greater than the Condition value."
            },
            {
              "name": "OPERATOR_GREATER_THAN_OR_EQUAL",
              "number": "3",
              "description": "Verify if the oracle data value is greater than or equal to the Condition\nvalue."
            },
            {
              "name": "OPERATOR_LESS_THAN",
              "number": "4",
              "description": "Verify if the oracle data value is less than the Condition value."
            },
            {
              "name": "OPERATOR_LESS_THAN_OR_EQUAL",
              "number": "5",
              "description": "Verify if the oracle data value is less or equal to than the Condition\nvalue."
            }
          ]
        },
        {
          "name": "Status",
          "longName": "OracleSpec.Status",
          "fullName": "oracles.v1.OracleSpec.Status",
          "description": "Status describe the status of the oracle spec",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "The default value."
            },
            {
              "name": "STATUS_ACTIVE",
              "number": "1",
              "description": "STATUS_ACTIVE describes an active oracle spec."
            },
            {
              "name": "STATUS_DEACTIVATED",
              "number": "2",
              "description": "STATUS_DEACTIVATED describes an oracle spec that is not listening to data\nanymore."
            }
          ]
        },
        {
          "name": "Type",
          "longName": "PropertyKey.Type",
          "fullName": "oracles.v1.PropertyKey.Type",
          "description": "Type describes the type of properties that are supported by the oracle\nengine.",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": "The default value."
            },
            {
              "name": "TYPE_EMPTY",
              "number": "1",
              "description": "Any type."
            },
            {
              "name": "TYPE_INTEGER",
              "number": "2",
              "description": "Integer type."
            },
            {
              "name": "TYPE_STRING",
              "number": "3",
              "description": "String type."
            },
            {
              "name": "TYPE_BOOLEAN",
              "number": "4",
              "description": "Boolean type."
            },
            {
              "name": "TYPE_DECIMAL",
              "number": "5",
              "description": "Any floating point decimal type."
            },
            {
              "name": "TYPE_TIMESTAMP",
              "number": "6",
              "description": "Timestamp date type."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Condition",
          "longName": "Condition",
          "fullName": "oracles.v1.Condition",
          "description": "Condition describes the condition that must be validated by the",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "operator",
              "description": "comparator is the type of comparison to make on the value.",
              "label": "",
              "type": "Operator",
              "longType": "Condition.Operator",
              "fullType": "oracles.v1.Condition.Operator",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "value is used by the comparator.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Filter",
          "longName": "Filter",
          "fullName": "oracles.v1.Filter",
          "description": "Filter describes the conditions under which an oracle data is considered of\ninterest or not.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "key is the oracle data property key targeted by the filter.",
              "label": "",
              "type": "PropertyKey",
              "longType": "PropertyKey",
              "fullType": "oracles.v1.PropertyKey",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "conditions",
              "description": "conditions are the conditions that should be matched by the data to be\nconsidered of interest.",
              "label": "repeated",
              "type": "Condition",
              "longType": "Condition",
              "fullType": "oracles.v1.Condition",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleSpec",
          "longName": "OracleSpec",
          "fullName": "oracles.v1.OracleSpec",
          "description": "An oracle spec describe the oracle data that a product (or a risk model)\nwants to get from the oracle engine.\nThis message contains additional information used by the API.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "id is a hash generated from the OracleSpec data.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Creation Date time",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "Last Updated timestamp",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pub_keys",
              "description": "pubKeys is the list of authorized public keys that signed the data for this\noracle. All the public keys in the oracle data should be contained in these\npublic keys.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "filters",
              "description": "filters describes which oracle data are considered of interest or not for\nthe product (or the risk model).",
              "label": "repeated",
              "type": "Filter",
              "longType": "Filter",
              "fullType": "oracles.v1.Filter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "status describes the status of the oracle spec",
              "label": "",
              "type": "Status",
              "longType": "OracleSpec.Status",
              "fullType": "oracles.v1.OracleSpec.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleSpecConfiguration",
          "longName": "OracleSpecConfiguration",
          "fullName": "oracles.v1.OracleSpecConfiguration",
          "description": "An oracle spec describe the oracle data that a product (or a risk model)\nwants to get from the oracle engine.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pub_keys",
              "description": "pubKeys is the list of authorized public keys that signed the data for this\noracle. All the public keys in the oracle data should be contained in these\npublic keys.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "filters",
              "description": "filters describes which oracle data are considered of interest or not for\nthe product (or the risk model).",
              "label": "repeated",
              "type": "Filter",
              "longType": "Filter",
              "fullType": "oracles.v1.Filter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PropertyKey",
          "longName": "PropertyKey",
          "fullName": "oracles.v1.PropertyKey",
          "description": "PropertyKey describes the property key contained in an oracle data.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "name is the name of the property.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "type is the type of the property.",
              "label": "",
              "type": "Type",
              "longType": "PropertyKey.Type",
              "fullType": "oracles.v1.PropertyKey.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/commands/v1/commands.proto",
      "description": "",
      "package": "vega.commands.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "Method",
          "longName": "UndelegateSubmission.Method",
          "fullName": "vega.commands.v1.UndelegateSubmission.Method",
          "description": "",
          "values": [
            {
              "name": "METHOD_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "METHOD_NOW",
              "number": "1",
              "description": ""
            },
            {
              "name": "METHOD_AT_END_OF_EPOCH",
              "number": "2",
              "description": ""
            },
            {
              "name": "METHOD_IN_ANGER",
              "number": "3",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "CancelTransfer",
          "longName": "CancelTransfer",
          "fullName": "vega.commands.v1.CancelTransfer",
          "description": "A request for cancelling a recurring transfer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfer_id",
              "description": "The ID of the transfer to cancel",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegateSubmission",
          "longName": "DelegateSubmission",
          "fullName": "vega.commands.v1.DelegateSubmission",
          "description": "A command to submit an instruction to delegate some stake to a node",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "The ID for the node to delegate to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount of stake to delegate",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Int64Value",
          "longName": "Int64Value",
          "fullName": "vega.commands.v1.Int64Value",
          "description": "Replacement for the google well-known type until we can get rid of this\nentirely",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvisionAmendment",
          "longName": "LiquidityProvisionAmendment",
          "fullName": "vega.commands.v1.LiquidityProvisionAmendment",
          "description": "Amend a liquidity provision request",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Unique ID for the market with the liquidity provision to be amended",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "commitment_amount",
              "description": "From here at least one of the following is required to consider the command valid\n\nan empty strings means no change",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee",
              "description": "an empty strings means no change",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sells",
              "description": "empty slice means no change",
              "label": "repeated",
              "type": "LiquidityOrder",
              "longType": "vega.LiquidityOrder",
              "fullType": "vega.LiquidityOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buys",
              "description": "empty slice means no change",
              "label": "repeated",
              "type": "LiquidityOrder",
              "longType": "vega.LiquidityOrder",
              "fullType": "vega.LiquidityOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "empty string means no change",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvisionCancellation",
          "longName": "LiquidityProvisionCancellation",
          "fullName": "vega.commands.v1.LiquidityProvisionCancellation",
          "description": "Cancel a liquidity provision request",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Unique ID for the market with the liquidity provision to be cancelled",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvisionSubmission",
          "longName": "LiquidityProvisionSubmission",
          "fullName": "vega.commands.v1.LiquidityProvisionSubmission",
          "description": "A liquidity provision submitted for a given market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier for the order, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "commitment_amount",
              "description": "Specified as a unitless number that represents the amount of settlement asset of the market",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee",
              "description": "Nominated liquidity fee factor, which is an input to the calculation of taker fees on the market, as per setting fees and rewarding liquidity providers",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sells",
              "description": "A set of liquidity sell orders to meet the liquidity provision obligation",
              "label": "repeated",
              "type": "LiquidityOrder",
              "longType": "vega.LiquidityOrder",
              "fullType": "vega.LiquidityOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buys",
              "description": "A set of liquidity buy orders to meet the liquidity provision obligation",
              "label": "repeated",
              "type": "LiquidityOrder",
              "longType": "vega.LiquidityOrder",
              "fullType": "vega.LiquidityOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "A reference to be added to every order created out of this liquidityProvisionSubmission",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OneOffTransfer",
          "longName": "OneOffTransfer",
          "fullName": "vega.commands.v1.OneOffTransfer",
          "description": "Specific details for a one off transfer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deliver_on",
              "description": "A unix timestamp in second. Time at which the\ntransfer should be delivered in the to account",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderAmendment",
          "longName": "OrderAmendment",
          "fullName": "vega.commands.v1.OrderAmendment",
          "description": "An order amendment is a request to amend or update an existing order on Vega\n\nThe `orderID`, `partyID` and `marketID` fields are used for looking up the order only and cannot be amended by this command",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order_id",
              "description": "Order identifier, this is required to find the order and will not be updated, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier, this is required to find the order and will not be updated",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Amend the price for the order, if the Price value is set, otherwise price will remain unchanged - See [`Price`](#vega.Price)",
              "label": "",
              "type": "Price",
              "longType": "vega.Price",
              "fullType": "vega.Price",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size_delta",
              "description": "Amend the size for the order by the delta specified:\n- To reduce the size from the current value set a negative integer value\n- To increase the size from the current value, set a positive integer value\n- To leave the size unchanged set a value of zero",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expires_at",
              "description": "Amend the expiry time for the order, if the Timestamp value is set, otherwise expiry time will remain unchanged\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "Timestamp",
              "longType": "vega.Timestamp",
              "fullType": "vega.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time_in_force",
              "description": "Amend the time in force for the order, set to TIME_IN_FORCE_UNSPECIFIED to remain unchanged\n- See [`TimeInForce`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "TimeInForce",
              "longType": "vega.Order.TimeInForce",
              "fullType": "vega.Order.TimeInForce",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pegged_offset",
              "description": "Amend the pegged order offset for the order",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pegged_reference",
              "description": "Amend the pegged order reference for the order\n- See [`PeggedReference`](#vega.PeggedReference)",
              "label": "",
              "type": "PeggedReference",
              "longType": "vega.PeggedReference",
              "fullType": "vega.PeggedReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderCancellation",
          "longName": "OrderCancellation",
          "fullName": "vega.commands.v1.OrderCancellation",
          "description": "An order cancellation is a request to cancel an existing order on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order_id",
              "description": "Unique identifier for the order (set by the system after consensus), required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier for the order, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderSubmission",
          "longName": "OrderSubmission",
          "fullName": "vega.commands.v1.OrderSubmission",
          "description": "An order submission is a request to submit or create a new order on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier for the order, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price for the order, the price is an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places,\n, required field for limit orders, however it is not required for market orders",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Size for the order, for example, in a futures market the size equals the number of contracts, cannot be negative",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "side",
              "description": "Side for the order, e.g. SIDE_BUY or SIDE_SELL, required field\n- See `Side`",
              "label": "",
              "type": "Side",
              "longType": "vega.Side",
              "fullType": "vega.Side",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time_in_force",
              "description": "Time in force indicates how long an order will remain active before it is executed or expires, required field\n- See `Order.TimeInForce`",
              "label": "",
              "type": "TimeInForce",
              "longType": "vega.Order.TimeInForce",
              "fullType": "vega.Order.TimeInForce",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expires_at",
              "description": "Timestamp for when the order will expire, in nanoseconds since the epoch,\nrequired field only for `Order.TimeInForce`.TIME_IN_FORCE_GTT`\n- See `VegaTimeResponse`.`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type for the order, required field - See `Order.Type`",
              "label": "",
              "type": "Type",
              "longType": "vega.Order.Type",
              "fullType": "vega.Order.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "Reference given for the order, this is typically used to retrieve an order submitted through consensus, currently\nset internally by the node to return a unique reference identifier for the order submission",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pegged_order",
              "description": "Used to specify the details for a pegged order\n- See `PeggedOrder`",
              "label": "",
              "type": "PeggedOrder",
              "longType": "vega.PeggedOrder",
              "fullType": "vega.PeggedOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProposalSubmission",
          "longName": "ProposalSubmission",
          "fullName": "vega.commands.v1.ProposalSubmission",
          "description": "A command to submit a new proposal for the\nVega network governance",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "reference",
              "description": "Proposal reference",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "terms",
              "description": "Proposal configuration and the actual change that is meant to be executed when proposal is enacted",
              "label": "",
              "type": "ProposalTerms",
              "longType": "vega.ProposalTerms",
              "fullType": "vega.ProposalTerms",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rationale",
              "description": "The rationale behind a proposal.",
              "label": "",
              "type": "ProposalRationale",
              "longType": "vega.ProposalRationale",
              "fullType": "vega.ProposalRationale",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RecurringTransfer",
          "longName": "RecurringTransfer",
          "fullName": "vega.commands.v1.RecurringTransfer",
          "description": "Specific details for a recurring transfer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "start_epoch",
              "description": "The first epoch from which this transfer shall be paid",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_epoch",
              "description": "The last epoch at which this transfer shall be paid",
              "label": "",
              "type": "Uint64Value",
              "longType": "vega.Uint64Value",
              "fullType": "vega.Uint64Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "factor",
              "description": "factor needs to be \u003e 0",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "dispatch_strategy",
              "description": "optional parameter defining how a transfer is dispatched",
              "label": "",
              "type": "DispatchStrategy",
              "longType": "vega.DispatchStrategy",
              "fullType": "vega.DispatchStrategy",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Transfer",
          "longName": "Transfer",
          "fullName": "vega.commands.v1.Transfer",
          "description": "A transfer initiated by a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "from_account_type",
              "description": "The account type from which the funds of the party\nshould be taken",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to",
              "description": "The public key of the destination account",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_account_type",
              "description": "The type of the destination account",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "The asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount to be taken from the source account",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "The reference to be attached to the transfer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "one_off",
              "description": "",
              "label": "",
              "type": "OneOffTransfer",
              "longType": "OneOffTransfer",
              "fullType": "vega.commands.v1.OneOffTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "recurring",
              "description": "",
              "label": "",
              "type": "RecurringTransfer",
              "longType": "RecurringTransfer",
              "fullType": "vega.commands.v1.RecurringTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UndelegateSubmission",
          "longName": "UndelegateSubmission",
          "fullName": "vega.commands.v1.UndelegateSubmission",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "optional, if not specified = ALL",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "method",
              "description": "",
              "label": "",
              "type": "Method",
              "longType": "UndelegateSubmission.Method",
              "fullType": "vega.commands.v1.UndelegateSubmission.Method",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VoteSubmission",
          "longName": "VoteSubmission",
          "fullName": "vega.commands.v1.VoteSubmission",
          "description": "A command to submit a new vote for a governance\nproposal.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal_id",
              "description": "The ID of the proposal to vote for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "The actual value of the vote",
              "label": "",
              "type": "Value",
              "longType": "vega.Vote.Value",
              "fullType": "vega.Vote.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WithdrawSubmission",
          "longName": "WithdrawSubmission",
          "fullName": "vega.commands.v1.WithdrawSubmission",
          "description": "Represents the submission request to withdraw funds for a party on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "amount",
              "description": "The amount to be withdrawn",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "The asset to be withdrawn",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ext",
              "description": "Foreign chain specifics",
              "label": "",
              "type": "WithdrawExt",
              "longType": "vega.WithdrawExt",
              "fullType": "vega.WithdrawExt",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/commands/v1/oracles.proto",
      "description": "",
      "package": "vega.commands.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "OracleSource",
          "longName": "OracleDataSubmission.OracleSource",
          "fullName": "vega.commands.v1.OracleDataSubmission.OracleSource",
          "description": "The supported Oracle sources",
          "values": [
            {
              "name": "ORACLE_SOURCE_UNSPECIFIED",
              "number": "0",
              "description": "The default value"
            },
            {
              "name": "ORACLE_SOURCE_OPEN_ORACLE",
              "number": "1",
              "description": "Support for Open Oracle standard"
            },
            {
              "name": "ORACLE_SOURCE_JSON",
              "number": "2",
              "description": "Support for custom JSON data"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "OracleDataSubmission",
          "longName": "OracleDataSubmission",
          "fullName": "vega.commands.v1.OracleDataSubmission",
          "description": "Command to submit new Oracle data from third party providers",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "source",
              "description": "The source from which the data is coming from",
              "label": "",
              "type": "OracleSource",
              "longType": "OracleDataSubmission.OracleSource",
              "fullType": "vega.commands.v1.OracleDataSubmission.OracleSource",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "payload",
              "description": "The data provided by the third party provider",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/commands/v1/signature.proto",
      "description": "",
      "package": "vega.commands.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Signature",
          "longName": "Signature",
          "fullName": "vega.commands.v1.Signature",
          "description": "A signature to authenticate a transaction and to be verified by the Vega\nnetwork.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "The bytes of the signature (hex-encoded).",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "algo",
              "description": "The algorithm used to create the signature.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "The version of the signature used to create the signature.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/commands/v1/transaction.proto",
      "description": "",
      "package": "vega.commands.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "InputData",
          "longName": "InputData",
          "fullName": "vega.commands.v1.InputData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "nonce",
              "description": "A number to provide uniqueness to prevent accidental replays and,\nin combination with `block_height`, deliberate attacks.\nA nonce provides uniqueness for otherwise identical transactions,\nensuring that the transaction hash uniquely identifies a specific transaction.\nGranted all other fields are equal, the nonce can either be a counter\nor generated at random to submit multiple transactions within the same\nblock (see below), without being identified as replays.\nPlease note that Protocol Buffers do not have a canonical, unique encoding\nand therefore different libraries or binaries may encode the same message\nslightly differently, causing a different hash.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "The block height at which the transaction was made.\nThis should be the current block height. The transaction will be valid\nfrom the block and up to the `tolerance` block height.\nExample: If the network has a tolerance of 150 blocks and `block_height`\nis set to `200`, then the transaction will be valid until block `350`.\nNote that a `block_height` that is ahead of the real block height will be\nrejected. The tolerance can be queried from the chain's network parameters.\n`block_height` prevents replay attacks in conjunction with `nonce` (see above).",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_submission",
              "description": "User commands",
              "label": "",
              "type": "OrderSubmission",
              "longType": "OrderSubmission",
              "fullType": "vega.commands.v1.OrderSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "order_cancellation",
              "description": "",
              "label": "",
              "type": "OrderCancellation",
              "longType": "OrderCancellation",
              "fullType": "vega.commands.v1.OrderCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "order_amendment",
              "description": "",
              "label": "",
              "type": "OrderAmendment",
              "longType": "OrderAmendment",
              "fullType": "vega.commands.v1.OrderAmendment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "withdraw_submission",
              "description": "",
              "label": "",
              "type": "WithdrawSubmission",
              "longType": "WithdrawSubmission",
              "fullType": "vega.commands.v1.WithdrawSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "proposal_submission",
              "description": "",
              "label": "",
              "type": "ProposalSubmission",
              "longType": "ProposalSubmission",
              "fullType": "vega.commands.v1.ProposalSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "vote_submission",
              "description": "",
              "label": "",
              "type": "VoteSubmission",
              "longType": "VoteSubmission",
              "fullType": "vega.commands.v1.VoteSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_submission",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionSubmission",
              "longType": "LiquidityProvisionSubmission",
              "fullType": "vega.commands.v1.LiquidityProvisionSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "delegate_submission",
              "description": "",
              "label": "",
              "type": "DelegateSubmission",
              "longType": "DelegateSubmission",
              "fullType": "vega.commands.v1.DelegateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "undelegate_submission",
              "description": "",
              "label": "",
              "type": "UndelegateSubmission",
              "longType": "UndelegateSubmission",
              "fullType": "vega.commands.v1.UndelegateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_cancellation",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionCancellation",
              "longType": "LiquidityProvisionCancellation",
              "fullType": "vega.commands.v1.LiquidityProvisionCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_amendment",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionAmendment",
              "longType": "LiquidityProvisionAmendment",
              "fullType": "vega.commands.v1.LiquidityProvisionAmendment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "transfer",
              "description": "",
              "label": "",
              "type": "Transfer",
              "longType": "Transfer",
              "fullType": "vega.commands.v1.Transfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "cancel_transfer",
              "description": "",
              "label": "",
              "type": "CancelTransfer",
              "longType": "CancelTransfer",
              "fullType": "vega.commands.v1.CancelTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "announce_node",
              "description": "",
              "label": "",
              "type": "AnnounceNode",
              "longType": "AnnounceNode",
              "fullType": "vega.commands.v1.AnnounceNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "node_vote",
              "description": "Validator commands",
              "label": "",
              "type": "NodeVote",
              "longType": "NodeVote",
              "fullType": "vega.commands.v1.NodeVote",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "node_signature",
              "description": "",
              "label": "",
              "type": "NodeSignature",
              "longType": "NodeSignature",
              "fullType": "vega.commands.v1.NodeSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "chain_event",
              "description": "",
              "label": "",
              "type": "ChainEvent",
              "longType": "ChainEvent",
              "fullType": "vega.commands.v1.ChainEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "key_rotate_submission",
              "description": "",
              "label": "",
              "type": "KeyRotateSubmission",
              "longType": "KeyRotateSubmission",
              "fullType": "vega.commands.v1.KeyRotateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "state_variable_proposal",
              "description": "",
              "label": "",
              "type": "StateVariableProposal",
              "longType": "StateVariableProposal",
              "fullType": "vega.commands.v1.StateVariableProposal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "validator_heartbeat",
              "description": "",
              "label": "",
              "type": "ValidatorHeartbeat",
              "longType": "ValidatorHeartbeat",
              "fullType": "vega.commands.v1.ValidatorHeartbeat",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "ethereum_key_rotate_submission",
              "description": "",
              "label": "",
              "type": "EthereumKeyRotateSubmission",
              "longType": "EthereumKeyRotateSubmission",
              "fullType": "vega.commands.v1.EthereumKeyRotateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_proposal",
              "description": "",
              "label": "",
              "type": "ProtocolUpgradeProposal",
              "longType": "ProtocolUpgradeProposal",
              "fullType": "vega.commands.v1.ProtocolUpgradeProposal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "oracle_data_submission",
              "description": "Oracles",
              "label": "",
              "type": "OracleDataSubmission",
              "longType": "OracleDataSubmission",
              "fullType": "vega.commands.v1.OracleDataSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProofOfWork",
          "longName": "ProofOfWork",
          "fullName": "vega.commands.v1.ProofOfWork",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tid",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash_function",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Transaction",
          "longName": "Transaction",
          "fullName": "vega.commands.v1.Transaction",
          "description": "Represents a transaction to be sent to Vega.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "input_data",
              "description": "One of the set of Vega commands (proto marshalled).",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "The signature of the inputData.",
              "label": "",
              "type": "Signature",
              "longType": "Signature",
              "fullType": "vega.commands.v1.Signature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "address",
              "description": "The address of the sender (hex-encoded). Not supported yet.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "from",
              "defaultValue": ""
            },
            {
              "name": "pub_key",
              "description": "The public key of the sender (hex-encoded).",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "from",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "A version of the transaction, to be used in the future in case changes are implemented\nto the Transaction format.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pow",
              "description": "Proof of work contains the random transaction id used by the client and the nonce.",
              "label": "",
              "type": "ProofOfWork",
              "longType": "ProofOfWork",
              "fullType": "vega.commands.v1.ProofOfWork",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/commands/v1/validator_commands.proto",
      "description": "",
      "package": "vega.commands.v1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "NodeSignatureKind",
          "longName": "NodeSignatureKind",
          "fullName": "vega.commands.v1.NodeSignatureKind",
          "description": "The kind of the signature created by a node, for example, allow-listing a new asset, withdrawal etc",
          "values": [
            {
              "name": "NODE_SIGNATURE_KIND_UNSPECIFIED",
              "number": "0",
              "description": "Represents an unspecified or missing value from the input"
            },
            {
              "name": "NODE_SIGNATURE_KIND_ASSET_NEW",
              "number": "1",
              "description": "Represents a signature for a new asset allow-listing"
            },
            {
              "name": "NODE_SIGNATURE_KIND_ASSET_WITHDRAWAL",
              "number": "2",
              "description": "Represents a signature for an asset withdrawal"
            },
            {
              "name": "NODE_SIGNATURE_KIND_ERC20_MULTISIG_SIGNER_ADDED",
              "number": "3",
              "description": "Represents a signature for a new signer added to the erc20 multisig contract"
            },
            {
              "name": "NODE_SIGNATURE_KIND_ERC20_MULTISIG_SIGNER_REMOVED",
              "number": "4",
              "description": "Represents a signature for a signer removed from the erc20 multisig contract"
            },
            {
              "name": "NODE_SIGNATURE_KIND_ASSET_UPDATE",
              "number": "5",
              "description": "Represents a signature for an asset update allow-listing"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AnnounceNode",
          "longName": "AnnounceNode",
          "fullName": "vega.commands.v1.AnnounceNode",
          "description": "Used announce a node as a new potential validator",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vega_pub_key",
              "description": "Vega public key, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_address",
              "description": "Ethereum public key, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_pub_key",
              "description": "Public key for the blockchain, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "info_url",
              "description": "URL with more info on the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "country",
              "description": "Country code (ISO 3166-1 alpha-2) for the location of the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "ID of the validator, (public master key)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Name of the validator",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "avatar_url",
              "description": "AvatarURL of the validator",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_pub_key_index",
              "description": "Vega public key derivation index",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_epoch",
              "description": "The epoch from which the validator is expected\nto be ready to validate blocks",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_signature",
              "description": "Signature from the validator made using the ethereum wallet",
              "label": "",
              "type": "Signature",
              "longType": "Signature",
              "fullType": "vega.commands.v1.Signature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_signature",
              "description": "Signature from the validator made using the vega wallet",
              "label": "",
              "type": "Signature",
              "longType": "Signature",
              "fullType": "vega.commands.v1.Signature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ChainEvent",
          "longName": "ChainEvent",
          "fullName": "vega.commands.v1.ChainEvent",
          "description": "An event forwarded to the Vega network to provide information on events happening on other networks",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "tx_id",
              "description": "The identifier of the transaction in which the events happened, usually a hash",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "Arbitrary one-time integer used to prevent replay attacks",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "builtin",
              "description": "Built-in asset event",
              "label": "",
              "type": "BuiltinAssetEvent",
              "longType": "vega.BuiltinAssetEvent",
              "fullType": "vega.BuiltinAssetEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "erc20",
              "description": "Ethereum ERC20 event",
              "label": "",
              "type": "ERC20Event",
              "longType": "vega.ERC20Event",
              "fullType": "vega.ERC20Event",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "staking_event",
              "description": "Ethereum Staking event",
              "label": "",
              "type": "StakingEvent",
              "longType": "vega.StakingEvent",
              "fullType": "vega.StakingEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig",
              "description": "Ethereum ERC20 multisig event",
              "label": "",
              "type": "ERC20MultiSigEvent",
              "longType": "vega.ERC20MultiSigEvent",
              "fullType": "vega.ERC20MultiSigEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthereumKeyRotateSubmission",
          "longName": "EthereumKeyRotateSubmission",
          "fullName": "vega.commands.v1.EthereumKeyRotateSubmission",
          "description": "A transaction to allow validator to rotate their ethereum keys",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "target_block",
              "description": "Target block at which the key rotation will take effect on",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_address",
              "description": "The new adress to rotate to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_address",
              "description": "Currently used public address",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "KeyRotateSubmission",
          "longName": "KeyRotateSubmission",
          "fullName": "vega.commands.v1.KeyRotateSubmission",
          "description": "A transaction to allow validator to rotate their vega keys",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "new_pub_key_index",
              "description": "New Vega public key derivation index",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_block",
              "description": "Target block at which the key rotation will take effect on",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_pub_key",
              "description": "The new public key to rotate to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_pub_key_hash",
              "description": "Hash of currently used public key",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeSignature",
          "longName": "NodeSignature",
          "fullName": "vega.commands.v1.NodeSignature",
          "description": "Represents a signature from a validator, to be used by a foreign chain in order to recognise a decision taken by the Vega network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The identifier of the resource being signed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sig",
              "description": "The signature",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "kind",
              "description": "The kind of resource being signed",
              "label": "",
              "type": "NodeSignatureKind",
              "longType": "NodeSignatureKind",
              "fullType": "vega.commands.v1.NodeSignatureKind",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeVote",
          "longName": "NodeVote",
          "fullName": "vega.commands.v1.NodeVote",
          "description": "Used when a node votes for validating a given resource exists or is valid,\nfor example, an ERC20 deposit is valid and exists on ethereum",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "reference",
              "description": "Reference, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProtocolUpgradeProposal",
          "longName": "ProtocolUpgradeProposal",
          "fullName": "vega.commands.v1.ProtocolUpgradeProposal",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "upgrade_block_height",
              "description": "The block height at which to perform the upgrade",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_release_tag",
              "description": "the release tag for the vega binary",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_node_release_tag",
              "description": "the release tag for the data-node binary",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StateVariableProposal",
          "longName": "StateVariableProposal",
          "fullName": "vega.commands.v1.StateVariableProposal",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal",
              "description": "The state value proposal details",
              "label": "",
              "type": "StateValueProposal",
              "longType": "vega.StateValueProposal",
              "fullType": "vega.StateValueProposal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorHeartbeat",
          "longName": "ValidatorHeartbeat",
          "fullName": "vega.commands.v1.ValidatorHeartbeat",
          "description": "A message from a validator signaling they are still online and validating blocks\nor ready to validate block when they are till a potential validator",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "the id of the node emitting the heartbeat",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_signature",
              "description": "Signature from the validator made using the ethereum wallet",
              "label": "",
              "type": "Signature",
              "longType": "Signature",
              "fullType": "vega.commands.v1.Signature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_signature",
              "description": "Signature from the validator made using the vega wallet",
              "label": "",
              "type": "Signature",
              "longType": "Signature",
              "fullType": "vega.commands.v1.Signature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/events/v1/events.proto",
      "description": "",
      "package": "vega.events.v1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "BusEventType",
          "longName": "BusEventType",
          "fullName": "vega.events.v1.BusEventType",
          "description": "An (event) bus event type is used to specify a type of event\nIt has 2 styles of event:\nSingle values (e.g. BUS_EVENT_TYPE_ORDER) where they represent one data item\nGroup values (e.g. BUS_EVENT_TYPE_AUCTION) where they represent a group of data items",
          "values": [
            {
              "name": "BUS_EVENT_TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "BUS_EVENT_TYPE_ALL",
              "number": "1",
              "description": "Events of ALL event types, used when filtering stream from event bus"
            },
            {
              "name": "BUS_EVENT_TYPE_TIME_UPDATE",
              "number": "2",
              "description": "Event for blockchain time updates"
            },
            {
              "name": "BUS_EVENT_TYPE_TRANSFER_RESPONSES",
              "number": "3",
              "description": "Event for when a transfer happens internally, contains the transfer information"
            },
            {
              "name": "BUS_EVENT_TYPE_POSITION_RESOLUTION",
              "number": "4",
              "description": "Event indicating position resolution has occurred"
            },
            {
              "name": "BUS_EVENT_TYPE_ORDER",
              "number": "5",
              "description": "Event for order updates, both new and existing orders"
            },
            {
              "name": "BUS_EVENT_TYPE_ACCOUNT",
              "number": "6",
              "description": "Event for account updates"
            },
            {
              "name": "BUS_EVENT_TYPE_PARTY",
              "number": "7",
              "description": "Event for party updates"
            },
            {
              "name": "BUS_EVENT_TYPE_TRADE",
              "number": "8",
              "description": "Event indicating a new trade has occurred"
            },
            {
              "name": "BUS_EVENT_TYPE_MARGIN_LEVELS",
              "number": "9",
              "description": "Event indicating margin levels have changed for a party"
            },
            {
              "name": "BUS_EVENT_TYPE_PROPOSAL",
              "number": "10",
              "description": "Event for proposal updates (for governance)"
            },
            {
              "name": "BUS_EVENT_TYPE_VOTE",
              "number": "11",
              "description": "Event indicating a new vote has occurred (for governance)"
            },
            {
              "name": "BUS_EVENT_TYPE_MARKET_DATA",
              "number": "12",
              "description": "Event for market data updates"
            },
            {
              "name": "BUS_EVENT_TYPE_NODE_SIGNATURE",
              "number": "13",
              "description": "Event for a new signature for a Vega node"
            },
            {
              "name": "BUS_EVENT_TYPE_LOSS_SOCIALIZATION",
              "number": "14",
              "description": "Event indicating loss socialisation occurred for a party"
            },
            {
              "name": "BUS_EVENT_TYPE_SETTLE_POSITION",
              "number": "15",
              "description": "Event for when a position is being settled"
            },
            {
              "name": "BUS_EVENT_TYPE_SETTLE_DISTRESSED",
              "number": "16",
              "description": "Event for when a position is distressed"
            },
            {
              "name": "BUS_EVENT_TYPE_MARKET_CREATED",
              "number": "17",
              "description": "Event indicating a new market was created"
            },
            {
              "name": "BUS_EVENT_TYPE_ASSET",
              "number": "18",
              "description": "Event for when an asset is added to Vega"
            },
            {
              "name": "BUS_EVENT_TYPE_MARKET_TICK",
              "number": "19",
              "description": "Event indicating a market tick event"
            },
            {
              "name": "BUS_EVENT_TYPE_WITHDRAWAL",
              "number": "20",
              "description": "Event for when a withdrawal occurs"
            },
            {
              "name": "BUS_EVENT_TYPE_DEPOSIT",
              "number": "21",
              "description": "Event for when a deposit occurs"
            },
            {
              "name": "BUS_EVENT_TYPE_AUCTION",
              "number": "22",
              "description": "Event indicating a change in auction state, for example starting or ending an auction"
            },
            {
              "name": "BUS_EVENT_TYPE_RISK_FACTOR",
              "number": "23",
              "description": "Event indicating a risk factor has been updated"
            },
            {
              "name": "BUS_EVENT_TYPE_NETWORK_PARAMETER",
              "number": "24",
              "description": "Event indicating a network parameter has been added or updated"
            },
            {
              "name": "BUS_EVENT_TYPE_LIQUIDITY_PROVISION",
              "number": "25",
              "description": "Event indicating a liquidity provision has been created or updated"
            },
            {
              "name": "BUS_EVENT_TYPE_MARKET_UPDATED",
              "number": "26",
              "description": "Event indicating a new market was created"
            },
            {
              "name": "BUS_EVENT_TYPE_ORACLE_SPEC",
              "number": "27",
              "description": "Event indicating an oracle spec has been created or updated"
            },
            {
              "name": "BUS_EVENT_TYPE_ORACLE_DATA",
              "number": "28",
              "description": "Event indicating that an oracle data has been broadcast"
            },
            {
              "name": "BUS_EVENT_TYPE_DELEGATION_BALANCE",
              "number": "29",
              "description": "Event indicating that an delegation balance of a party to a node for current epoch has changed"
            },
            {
              "name": "BUS_EVENT_TYPE_VALIDATOR_SCORE",
              "number": "30",
              "description": "Event indicating the validator score for the given epoch"
            },
            {
              "name": "BUS_EVENT_TYPE_EPOCH_UPDATE",
              "number": "31",
              "description": "Event indicating the start or end of an epoch"
            },
            {
              "name": "BUS_EVENT_TYPE_VALIDATOR_UPDATE",
              "number": "32",
              "description": "Event indicating that validator node has been updated"
            },
            {
              "name": "BUS_EVENT_TYPE_STAKE_LINKING",
              "number": "33",
              "description": "Event indicating a new staking event have been processed by the network"
            },
            {
              "name": "BUS_EVENT_TYPE_REWARD_PAYOUT_EVENT",
              "number": "34",
              "description": "Event indicating the payout of a reward has been initiated"
            },
            {
              "name": "BUS_EVENT_TYPE_CHECKPOINT",
              "number": "35",
              "description": "Event indicating a new checkpoint was created"
            },
            {
              "name": "BUS_EVENT_TYPE_STREAM_START",
              "number": "36",
              "description": "Event indicating stream is starting"
            },
            {
              "name": "BUS_EVENT_TYPE_KEY_ROTATION",
              "number": "37",
              "description": "Event indicating key rotation took place"
            },
            {
              "name": "BUS_EVENT_TYPE_STATE_VAR",
              "number": "38",
              "description": "Event indicating state transitions in state variable consensus"
            },
            {
              "name": "BUS_EVENT_TYPE_NETWORK_LIMITS",
              "number": "39",
              "description": "Event indicating network limits set or updated"
            },
            {
              "name": "BUS_EVENT_TYPE_TRANSFER",
              "number": "40",
              "description": "Event indicating a update for a transfert"
            },
            {
              "name": "BUS_EVENT_TYPE_VALIDATOR_RANKING",
              "number": "41",
              "description": "Event indicating the ranking of validator and their status in vega"
            },
            {
              "name": "BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_EVENT",
              "number": "42",
              "description": "Event indicating a new multi sig signer event have been processed"
            },
            {
              "name": "BUS_EVENT_TYPE_ERC20_MULTI_SIG_SET_THRESHOLD",
              "number": "43",
              "description": "Event indicating the erc20 multi sig threshold have been updated"
            },
            {
              "name": "BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_ADDED",
              "number": "44",
              "description": "Event indicating a new signer has been added to the erc20 multisig"
            },
            {
              "name": "BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_REMOVED",
              "number": "45",
              "description": "Event indicating a signer has been removed from the erc20 multisig"
            },
            {
              "name": "BUS_EVENT_TYPE_POSITION_STATE",
              "number": "46",
              "description": "Event indicting that a party's position has changed"
            },
            {
              "name": "BUS_EVENT_TYPE_ETHEREUM_KEY_ROTATION",
              "number": "47",
              "description": "Event indicating Ethereum key rotation took place"
            },
            {
              "name": "BUS_EVENT_TYPE_PROTOCOL_UPGRADE_PROPOSAL",
              "number": "48",
              "description": "Event indicating protocol upgrade proposal updates"
            },
            {
              "name": "BUS_EVENT_TYPE_MARKET",
              "number": "101",
              "description": "Event indicating a market related event, for example when a market opens"
            },
            {
              "name": "BUS_EVENT_TYPE_TX_ERROR",
              "number": "201",
              "description": "Event used to report failed transactions back to a user, this is excluded from the ALL type"
            }
          ]
        },
        {
          "name": "Type",
          "longName": "ERC20MultiSigSignerEvent.Type",
          "fullName": "vega.events.v1.ERC20MultiSigSignerEvent.Type",
          "description": "",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "TYPE_ADDED",
              "number": "1",
              "description": ""
            },
            {
              "name": "TYPE_REMOVED",
              "number": "2",
              "description": ""
            }
          ]
        },
        {
          "name": "ProtocolUpgradeProposalStatus",
          "longName": "ProtocolUpgradeProposalStatus",
          "fullName": "vega.events.v1.ProtocolUpgradeProposalStatus",
          "description": "",
          "values": [
            {
              "name": "PROTOCOL_UPGRADE_PROPOSAL_STATUS_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "PROTOCOL_UPGRADE_PROPOSAL_STATUS_PENDING",
              "number": "1",
              "description": "The proposal is pending"
            },
            {
              "name": "PROTOCOL_UPGRADE_PROPOSAL_STATUS_APPROVED",
              "number": "2",
              "description": "The proposal is approved"
            },
            {
              "name": "PROTOCOL_UPGRADE_PROPOSAL_STATUS_REJECTED",
              "number": "3",
              "description": "The proposal is rejected"
            }
          ]
        },
        {
          "name": "Status",
          "longName": "StakeLinking.Status",
          "fullName": "vega.events.v1.StakeLinking.Status",
          "description": "",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "STATUS_PENDING",
              "number": "1",
              "description": "Indicate an event waiting for confirmation from the vega network"
            },
            {
              "name": "STATUS_ACCEPTED",
              "number": "2",
              "description": "Indicate of an event accepted by the vega network"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "3",
              "description": "Indaicate of an event rejected by the vega network"
            }
          ]
        },
        {
          "name": "Type",
          "longName": "StakeLinking.Type",
          "fullName": "vega.events.v1.StakeLinking.Type",
          "description": "",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "TYPE_LINK",
              "number": "1",
              "description": "Indicate of a stake deposit instruction"
            },
            {
              "name": "TYPE_UNLINK",
              "number": "2",
              "description": "Indicate of a stake remove instruction"
            }
          ]
        },
        {
          "name": "Status",
          "longName": "Transfer.Status",
          "fullName": "vega.events.v1.Transfer.Status",
          "description": "",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "STATUS_PENDING",
              "number": "1",
              "description": "Indicate a transfer still being processed"
            },
            {
              "name": "STATUS_DONE",
              "number": "2",
              "description": "Indicate of an transfer accepted by the vega network"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "3",
              "description": "Indicate of an transfer rejected by the vega network"
            },
            {
              "name": "STATUS_STOPPED",
              "number": "4",
              "description": "Indicate of a transfer stopped by the vega network\ne.g: no funds left to cover the transfer"
            },
            {
              "name": "STATUS_CANCELLED",
              "number": "5",
              "description": "Indicate of a transfer cancel by the user"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AuctionEvent",
          "longName": "AuctionEvent",
          "fullName": "vega.events.v1.AuctionEvent",
          "description": "An auction event indicating a change in auction state, for example starting or ending an auction",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "opening_auction",
              "description": "True if the event indicates an auction opening and False otherwise",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "leave",
              "description": "True if the event indicates leaving auction mode and False otherwise",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start",
              "description": "Timestamp containing the start time for an auction",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end",
              "description": "Timestamp containing the end time for an auction",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trigger",
              "description": "the reason this market is/was in auction",
              "label": "",
              "type": "AuctionTrigger",
              "longType": "vega.AuctionTrigger",
              "fullType": "vega.AuctionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "extension_trigger",
              "description": "If an auction was ongoing, but was extended for whatever reason, this field will\nbe set to the trigger type indicating which component extended the auction",
              "label": "",
              "type": "AuctionTrigger",
              "longType": "vega.AuctionTrigger",
              "fullType": "vega.AuctionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BusEvent",
          "longName": "BusEvent",
          "fullName": "vega.events.v1.BusEvent",
          "description": "A bus event is a container for event bus events emitted by Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "A unique event identifier for the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "The batch (or block) of transactions that the events relate to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "The type of bus event (one of the list below)",
              "label": "",
              "type": "BusEventType",
              "longType": "BusEventType",
              "fullType": "vega.events.v1.BusEventType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time_update",
              "description": "Time update events - See [TimeUpdate](#vega.TimeUpdate)",
              "label": "",
              "type": "TimeUpdate",
              "longType": "TimeUpdate",
              "fullType": "vega.events.v1.TimeUpdate",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "transfer_responses",
              "description": "Transfer responses update events - See [TransferResponses](#vega.TransferResponses)",
              "label": "",
              "type": "TransferResponses",
              "longType": "TransferResponses",
              "fullType": "vega.events.v1.TransferResponses",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "position_resolution",
              "description": "Position resolution events - See [PositionResolution](#vega.PositionResolution)",
              "label": "",
              "type": "PositionResolution",
              "longType": "PositionResolution",
              "fullType": "vega.events.v1.PositionResolution",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "order",
              "description": "Order events",
              "label": "",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "account",
              "description": "Account events",
              "label": "",
              "type": "Account",
              "longType": "vega.Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "party",
              "description": "Party events",
              "label": "",
              "type": "Party",
              "longType": "vega.Party",
              "fullType": "vega.Party",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "trade",
              "description": "Trade events",
              "label": "",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "margin_levels",
              "description": "Margin level update events",
              "label": "",
              "type": "MarginLevels",
              "longType": "vega.MarginLevels",
              "fullType": "vega.MarginLevels",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "proposal",
              "description": "Proposal events (for governance)",
              "label": "",
              "type": "Proposal",
              "longType": "vega.Proposal",
              "fullType": "vega.Proposal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "vote",
              "description": "Vote events (for governance)",
              "label": "",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "market_data",
              "description": "Market data events",
              "label": "",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "node_signature",
              "description": "Node signature events",
              "label": "",
              "type": "NodeSignature",
              "longType": "vega.commands.v1.NodeSignature",
              "fullType": "vega.commands.v1.NodeSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "loss_socialization",
              "description": "Loss socialization events - See [LossSocialization](#vega.LossSocialization)",
              "label": "",
              "type": "LossSocialization",
              "longType": "LossSocialization",
              "fullType": "vega.events.v1.LossSocialization",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "settle_position",
              "description": "Position settlement events - See [SettlePosition](#vega.SettlePosition)",
              "label": "",
              "type": "SettlePosition",
              "longType": "SettlePosition",
              "fullType": "vega.events.v1.SettlePosition",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "settle_distressed",
              "description": "Position distressed events - See [SettleDistressed](#vega.SettleDistressed)",
              "label": "",
              "type": "SettleDistressed",
              "longType": "SettleDistressed",
              "fullType": "vega.events.v1.SettleDistressed",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "market_created",
              "description": "Market created events",
              "label": "",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset events",
              "label": "",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "market_tick",
              "description": "Market tick events - See [MarketTick](#vega.MarketTick)",
              "label": "",
              "type": "MarketTick",
              "longType": "MarketTick",
              "fullType": "vega.events.v1.MarketTick",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "withdrawal",
              "description": "Withdrawal events",
              "label": "",
              "type": "Withdrawal",
              "longType": "vega.Withdrawal",
              "fullType": "vega.Withdrawal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "deposit",
              "description": "Deposit events",
              "label": "",
              "type": "Deposit",
              "longType": "vega.Deposit",
              "fullType": "vega.Deposit",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "auction",
              "description": "Auction events - See [AuctionEvent](#vega.AuctionEvent)",
              "label": "",
              "type": "AuctionEvent",
              "longType": "AuctionEvent",
              "fullType": "vega.events.v1.AuctionEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "risk_factor",
              "description": "Risk factor events",
              "label": "",
              "type": "RiskFactor",
              "longType": "vega.RiskFactor",
              "fullType": "vega.RiskFactor",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "network_parameter",
              "description": "Network parameter events",
              "label": "",
              "type": "NetworkParameter",
              "longType": "vega.NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision",
              "description": "LiquidityProvision  events",
              "label": "",
              "type": "LiquidityProvision",
              "longType": "vega.LiquidityProvision",
              "fullType": "vega.LiquidityProvision",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "market_updated",
              "description": "Market created events",
              "label": "",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec",
              "description": "OracleSpec events",
              "label": "",
              "type": "OracleSpec",
              "longType": "oracles.v1.OracleSpec",
              "fullType": "oracles.v1.OracleSpec",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "oracle_data",
              "description": "OracleData events",
              "label": "",
              "type": "OracleData",
              "longType": "oracles.v1.OracleData",
              "fullType": "oracles.v1.OracleData",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "delegation_balance",
              "description": "Delegation balance events",
              "label": "",
              "type": "DelegationBalanceEvent",
              "longType": "DelegationBalanceEvent",
              "fullType": "vega.events.v1.DelegationBalanceEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "validator_score",
              "description": "Validator score calculated",
              "label": "",
              "type": "ValidatorScoreEvent",
              "longType": "ValidatorScoreEvent",
              "fullType": "vega.events.v1.ValidatorScoreEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "epoch_event",
              "description": "Epoch update events - See [Epoch](#vega.Epoch)",
              "label": "",
              "type": "EpochEvent",
              "longType": "EpochEvent",
              "fullType": "vega.events.v1.EpochEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "validator_update",
              "description": "Validator update events",
              "label": "",
              "type": "ValidatorUpdate",
              "longType": "ValidatorUpdate",
              "fullType": "vega.events.v1.ValidatorUpdate",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "stake_linking",
              "description": "Staking event",
              "label": "",
              "type": "StakeLinking",
              "longType": "StakeLinking",
              "fullType": "vega.events.v1.StakeLinking",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "reward_payout",
              "description": "Reward payout event",
              "label": "",
              "type": "RewardPayoutEvent",
              "longType": "RewardPayoutEvent",
              "fullType": "vega.events.v1.RewardPayoutEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "checkpoint",
              "description": "Checkpoint was created",
              "label": "",
              "type": "CheckpointEvent",
              "longType": "CheckpointEvent",
              "fullType": "vega.events.v1.CheckpointEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "key_rotation",
              "description": "Key rotation took place",
              "label": "",
              "type": "KeyRotation",
              "longType": "KeyRotation",
              "fullType": "vega.events.v1.KeyRotation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "state_var",
              "description": "State variable consensus state transition update",
              "label": "",
              "type": "StateVar",
              "longType": "StateVar",
              "fullType": "vega.events.v1.StateVar",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "network_limits",
              "description": "Network limits events",
              "label": "",
              "type": "NetworkLimits",
              "longType": "vega.NetworkLimits",
              "fullType": "vega.NetworkLimits",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "transfer",
              "description": "Transfer event",
              "label": "",
              "type": "Transfer",
              "longType": "Transfer",
              "fullType": "vega.events.v1.Transfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "ranking_event",
              "description": "Ranking event",
              "label": "",
              "type": "ValidatorRankingEvent",
              "longType": "ValidatorRankingEvent",
              "fullType": "vega.events.v1.ValidatorRankingEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig_signer_event",
              "description": "ERC20 multi sig signer event",
              "label": "",
              "type": "ERC20MultiSigSignerEvent",
              "longType": "ERC20MultiSigSignerEvent",
              "fullType": "vega.events.v1.ERC20MultiSigSignerEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig_set_threshold_event",
              "description": "ERC20 multi sig set threshold event",
              "label": "",
              "type": "ERC20MultiSigThresholdSetEvent",
              "longType": "ERC20MultiSigThresholdSetEvent",
              "fullType": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig_signer_added",
              "description": "ERC20 multi sig signer added",
              "label": "",
              "type": "ERC20MultiSigSignerAdded",
              "longType": "ERC20MultiSigSignerAdded",
              "fullType": "vega.events.v1.ERC20MultiSigSignerAdded",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig_signer_removed",
              "description": "ERC20 multi sig signer removed",
              "label": "",
              "type": "ERC20MultiSigSignerRemoved",
              "longType": "ERC20MultiSigSignerRemoved",
              "fullType": "vega.events.v1.ERC20MultiSigSignerRemoved",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "position_state_event",
              "description": "Position status for a party in a market",
              "label": "",
              "type": "PositionStateEvent",
              "longType": "PositionStateEvent",
              "fullType": "vega.events.v1.PositionStateEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "ethereum_key_rotation",
              "description": "Ethereum key rotation took place",
              "label": "",
              "type": "EthereumKeyRotation",
              "longType": "EthereumKeyRotation",
              "fullType": "vega.events.v1.EthereumKeyRotation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_event",
              "description": "Protocol upgrade proposal updates",
              "label": "",
              "type": "ProtocolUpgradeEvent",
              "longType": "ProtocolUpgradeEvent",
              "fullType": "vega.events.v1.ProtocolUpgradeEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "market",
              "description": "Market tick events - See [MarketEvent](#vega.MarketEvent)",
              "label": "",
              "type": "MarketEvent",
              "longType": "MarketEvent",
              "fullType": "vega.events.v1.MarketEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "tx_err_event",
              "description": "Transaction error events, not included in the ALL event type",
              "label": "",
              "type": "TxErrorEvent",
              "longType": "TxErrorEvent",
              "fullType": "vega.events.v1.TxErrorEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of bus event",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckpointEvent",
          "longName": "CheckpointEvent",
          "fullName": "vega.events.v1.CheckpointEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationBalanceEvent",
          "longName": "DelegationBalanceEvent",
          "fullName": "vega.events.v1.DelegationBalanceEvent",
          "description": "DelegationBalanceEvent - updates on the delegation balance of a party to a node in the current epoch in effect",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MulistSigSignerRemovedSubmitter",
          "longName": "ERC20MulistSigSignerRemovedSubmitter",
          "fullName": "vega.events.v1.ERC20MulistSigSignerRemovedSubmitter",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signature_id",
              "description": "The ID of this signature bundle",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter",
              "description": "The address of the submitter of the transaction",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerAdded",
          "longName": "ERC20MultiSigSignerAdded",
          "fullName": "vega.events.v1.ERC20MultiSigSignerAdded",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signature_id",
              "description": "The identifier of the signature bundle",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_id",
              "description": "The vega node ID of the node to be added",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "the time at which this happened",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_signer",
              "description": "The ethereum address of the new signer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter",
              "description": "The address of the submitter of the transaction",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "The nonce used.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "The epoch that the node was added for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerEvent",
          "longName": "ERC20MultiSigSignerEvent",
          "fullName": "vega.events.v1.ERC20MultiSigSignerEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "",
              "label": "",
              "type": "Type",
              "longType": "ERC20MultiSigSignerEvent.Type",
              "fullType": "vega.events.v1.ERC20MultiSigSignerEvent.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_index",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_number",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerRemoved",
          "longName": "ERC20MultiSigSignerRemoved",
          "fullName": "vega.events.v1.ERC20MultiSigSignerRemoved",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signature_submitters",
              "description": "A list containing all the IDs of bundle generated\nThere should be one bundle generated for every validators\nin the validator set",
              "label": "repeated",
              "type": "ERC20MulistSigSignerRemovedSubmitter",
              "longType": "ERC20MulistSigSignerRemovedSubmitter",
              "fullType": "vega.events.v1.ERC20MulistSigSignerRemovedSubmitter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_id",
              "description": "The vega node ID of the node which is to be removed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "the time at which this happened",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "old_signer",
              "description": "The ethereum address of the signer to be removed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "The nonce used.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "The epoch that the node was removed for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigThresholdSetEvent",
          "longName": "ERC20MultiSigThresholdSetEvent",
          "fullName": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_threshold",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_index",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_number",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochEvent",
          "longName": "EpochEvent",
          "fullName": "vega.events.v1.EpochEvent",
          "description": "Epoch details",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "seq",
              "description": "Sequence number that increases by one each epoch",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "action",
              "description": "Action tells us what action is taking place",
              "label": "",
              "type": "EpochAction",
              "longType": "vega.EpochAction",
              "fullType": "vega.EpochAction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_time",
              "description": "What time did this epoch start",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expire_time",
              "description": "What time should this epoch end",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_time",
              "description": "What time did it actually end",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthereumKeyRotation",
          "longName": "EthereumKeyRotation",
          "fullName": "vega.events.v1.EthereumKeyRotation",
          "description": "An Ethereum key rotation events contains information about Ethereum key rotation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Node id of the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "old_address",
              "description": "Old Ethereum address of validator node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_address",
              "description": "New Ethereum address of validator node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "Height of the block where key rotation took effect",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "KeyRotation",
          "longName": "KeyRotation",
          "fullName": "vega.events.v1.KeyRotation",
          "description": "A key rotation events contains information about Vega key rotation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Node id of the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "old_pub_key",
              "description": "Old Vega public key of validator node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_pub_key",
              "description": "New Vega public key of validator node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "Height of the block where key rotation took effect",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LossSocialization",
          "longName": "LossSocialization",
          "fullName": "vega.events.v1.LossSocialization",
          "description": "A loss socialization event contains details on the amount of wins unable to be distributed",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier (public key) for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount distributed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketEvent",
          "longName": "MarketEvent",
          "fullName": "vega.events.v1.MarketEvent",
          "description": "MarketEvent - the common denominator for all market events\ninterface has a method to return a string for logging",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "payload",
              "description": "Payload is a unique information string",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketTick",
          "longName": "MarketTick",
          "fullName": "vega.events.v1.MarketTick",
          "description": "A market ticket event contains the time value for when a particular market was last processed on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Market identifier for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time",
              "description": "Timestamp containing latest update from Vega blockchain aka Vega-time",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OneOffTransfer",
          "longName": "OneOffTransfer",
          "fullName": "vega.events.v1.OneOffTransfer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deliver_on",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionResolution",
          "longName": "PositionResolution",
          "fullName": "vega.events.v1.PositionResolution",
          "description": "A position resolution event contains information on distressed trades",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "distressed",
              "description": "Number of distressed traders",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "closed",
              "description": "Number of close outs",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "mark_price",
              "description": "Mark price as a string representing a scaled price",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionStateEvent",
          "longName": "PositionStateEvent",
          "fullName": "vega.events.v1.PositionStateEvent",
          "description": "A position state event contains the current position state for a single party in a single market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party identifier for this position update",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier for this position update",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Current position",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "potential_buys",
              "description": "Potential orders",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "potential_sells",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vw_buy_price",
              "description": "Volume weighted prices",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vw_sell_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProtocolUpgradeEvent",
          "longName": "ProtocolUpgradeEvent",
          "fullName": "vega.events.v1.ProtocolUpgradeEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "upgrade_block_height",
              "description": "The block height at which to perform the upgrade",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_release_tag",
              "description": "the release tag for the vega binary",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_node_release_tag",
              "description": "the release tag for the data-node binary",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "approvers",
              "description": "tendermint validators that have agreed to the upgrade",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "the status of the proposal",
              "label": "",
              "type": "ProtocolUpgradeProposalStatus",
              "longType": "ProtocolUpgradeProposalStatus",
              "fullType": "vega.events.v1.ProtocolUpgradeProposalStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RecurringTransfer",
          "longName": "RecurringTransfer",
          "fullName": "vega.events.v1.RecurringTransfer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "start_epoch",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_epoch",
              "description": "",
              "label": "",
              "type": "Uint64Value",
              "longType": "vega.Uint64Value",
              "fullType": "vega.Uint64Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "factor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "dispatch_strategy",
              "description": "",
              "label": "",
              "type": "DispatchStrategy",
              "longType": "vega.DispatchStrategy",
              "fullType": "vega.DispatchStrategy",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardPayoutEvent",
          "longName": "RewardPayoutEvent",
          "fullName": "vega.events.v1.RewardPayoutEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "percent_of_total_reward",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SettleDistressed",
          "longName": "SettleDistressed",
          "fullName": "vega.events.v1.SettleDistressed",
          "description": "A settle distressed event contains information on distressed trading parties who are closed out\n\nNote: Any PositionResolution event (market level) will most likely be followed by a number of these events",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier (public key) for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "margin",
              "description": "Margin value as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SettlePosition",
          "longName": "SettlePosition",
          "fullName": "vega.events.v1.SettlePosition",
          "description": "A settle position event contains position settlement information for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier (public key) for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price of settlement as a string",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trade_settlements",
              "description": "A collection of 1 or more trade settlements",
              "label": "repeated",
              "type": "TradeSettlement",
              "longType": "TradeSettlement",
              "fullType": "vega.events.v1.TradeSettlement",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "position_factor",
              "description": "Position factor - 10 ^ number of position decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeLinking",
          "longName": "StakeLinking",
          "fullName": "vega.events.v1.StakeLinking",
          "description": "StakeLinking - an event notifying of stake being deposited or removed for a given party\nThese events are emitted for every Staking deposit or removed accepted by the network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The internal ID for this staking event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "The type of event",
              "label": "",
              "type": "Type",
              "longType": "StakeLinking.Type",
              "fullType": "vega.events.v1.StakeLinking.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ts",
              "description": "The timestamps at which the event was emitted by ethereum",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party",
              "description": "The party to whom the event is directed at.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount of stake deposited or removed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "The status of the event",
              "label": "",
              "type": "Status",
              "longType": "StakeLinking.Status",
              "fullType": "vega.events.v1.StakeLinking.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "finalized_at",
              "description": "The time at which the vega network finalized the state of the event",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "The hash of the transaction from which the events happen",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "The block when the event happened",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "The block time",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_index",
              "description": "The log index",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_address",
              "description": "the ethereum address from which the stake link was iniated",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StateVar",
          "longName": "StateVar",
          "fullName": "vega.events.v1.StateVar",
          "description": "StateVarEvent - updates on state changes in state variable consensus",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "event_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StreamStartEvent",
          "longName": "StreamStartEvent",
          "fullName": "vega.events.v1.StreamStartEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "chain_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TimeUpdate",
          "longName": "TimeUpdate",
          "fullName": "vega.events.v1.TimeUpdate",
          "description": "A time update event contains the latest time update from Vega blockchain and indicates the start of a new block",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "timestamp",
              "description": "Timestamp containing latest update from Vega blockchain aka Vega-time",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradeSettlement",
          "longName": "TradeSettlement",
          "fullName": "vega.events.v1.TradeSettlement",
          "description": "A trade settlement is part of the settle position event",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "size",
              "description": "Size of trade settlement",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price of settlement as string",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Transfer",
          "longName": "Transfer",
          "fullName": "vega.events.v1.Transfer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_account_type",
              "description": "",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_account_type",
              "description": "",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "",
              "label": "",
              "type": "Status",
              "longType": "Transfer.Status",
              "fullType": "vega.events.v1.Transfer.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "one_off",
              "description": "",
              "label": "",
              "type": "OneOffTransfer",
              "longType": "OneOffTransfer",
              "fullType": "vega.events.v1.OneOffTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "recurring",
              "description": "",
              "label": "",
              "type": "RecurringTransfer",
              "longType": "RecurringTransfer",
              "fullType": "vega.events.v1.RecurringTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferResponses",
          "longName": "TransferResponses",
          "fullName": "vega.events.v1.TransferResponses",
          "description": "A transfer responses event contains a collection of transfer information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "responses",
              "description": "One or more entries containing internal transfer information",
              "label": "repeated",
              "type": "TransferResponse",
              "longType": "vega.TransferResponse",
              "fullType": "vega.TransferResponse",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TxErrorEvent",
          "longName": "TxErrorEvent",
          "fullName": "vega.events.v1.TxErrorEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Unique party identifier for the related party",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "err_msg",
              "description": "An error message describing what went wrong",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_submission",
              "description": "",
              "label": "",
              "type": "OrderSubmission",
              "longType": "vega.commands.v1.OrderSubmission",
              "fullType": "vega.commands.v1.OrderSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "order_amendment",
              "description": "",
              "label": "",
              "type": "OrderAmendment",
              "longType": "vega.commands.v1.OrderAmendment",
              "fullType": "vega.commands.v1.OrderAmendment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "order_cancellation",
              "description": "",
              "label": "",
              "type": "OrderCancellation",
              "longType": "vega.commands.v1.OrderCancellation",
              "fullType": "vega.commands.v1.OrderCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "proposal",
              "description": "",
              "label": "",
              "type": "ProposalSubmission",
              "longType": "vega.commands.v1.ProposalSubmission",
              "fullType": "vega.commands.v1.ProposalSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "vote_submission",
              "description": "",
              "label": "",
              "type": "VoteSubmission",
              "longType": "vega.commands.v1.VoteSubmission",
              "fullType": "vega.commands.v1.VoteSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_submission",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionSubmission",
              "longType": "vega.commands.v1.LiquidityProvisionSubmission",
              "fullType": "vega.commands.v1.LiquidityProvisionSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "withdraw_submission",
              "description": "",
              "label": "",
              "type": "WithdrawSubmission",
              "longType": "vega.commands.v1.WithdrawSubmission",
              "fullType": "vega.commands.v1.WithdrawSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "delegate_submission",
              "description": "",
              "label": "",
              "type": "DelegateSubmission",
              "longType": "vega.commands.v1.DelegateSubmission",
              "fullType": "vega.commands.v1.DelegateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "undelegate_submission",
              "description": "",
              "label": "",
              "type": "UndelegateSubmission",
              "longType": "vega.commands.v1.UndelegateSubmission",
              "fullType": "vega.commands.v1.UndelegateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_cancellation",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionCancellation",
              "longType": "vega.commands.v1.LiquidityProvisionCancellation",
              "fullType": "vega.commands.v1.LiquidityProvisionCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_amendment",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionAmendment",
              "longType": "vega.commands.v1.LiquidityProvisionAmendment",
              "fullType": "vega.commands.v1.LiquidityProvisionAmendment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "transfer",
              "description": "",
              "label": "",
              "type": "Transfer",
              "longType": "vega.commands.v1.Transfer",
              "fullType": "vega.commands.v1.Transfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "cancel_transfer",
              "description": "",
              "label": "",
              "type": "CancelTransfer",
              "longType": "vega.commands.v1.CancelTransfer",
              "fullType": "vega.commands.v1.CancelTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "announce_node",
              "description": "",
              "label": "",
              "type": "AnnounceNode",
              "longType": "vega.commands.v1.AnnounceNode",
              "fullType": "vega.commands.v1.AnnounceNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "oracle_data_submission",
              "description": "",
              "label": "",
              "type": "OracleDataSubmission",
              "longType": "vega.commands.v1.OracleDataSubmission",
              "fullType": "vega.commands.v1.OracleDataSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_proposal",
              "description": "",
              "label": "",
              "type": "ProtocolUpgradeProposal",
              "longType": "vega.commands.v1.ProtocolUpgradeProposal",
              "fullType": "vega.commands.v1.ProtocolUpgradeProposal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorRankingEvent",
          "longName": "ValidatorRankingEvent",
          "fullName": "vega.events.v1.ValidatorRankingEvent",
          "description": "An event that explains the status of the validator for the coming epoch",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake_score",
              "description": "stake based score - no anti-whaling",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "performance_score",
              "description": "performance base score",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ranking_score",
              "description": "final score",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "previous_status",
              "description": "the status of the validator in the previous epoch",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_status",
              "description": "the status of the validator in the next epoch",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "the epoch seq for which the status is valid",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tm_voting_power",
              "description": "tendermint voting power of the validator",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorScoreEvent",
          "longName": "ValidatorScoreEvent",
          "fullName": "vega.events.v1.ValidatorScoreEvent",
          "description": "ValidatorScoreEvent is the score a validator gets for a given epoch",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_score",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "normalised_score",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_performance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "raw_validator_score",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_status",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "multisig_score",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorUpdate",
          "longName": "ValidatorUpdate",
          "fullName": "vega.events.v1.ValidatorUpdate",
          "description": "A validator update event contains information about validator node",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Node id of the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_pub_key",
              "description": "Vega public key of validator node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_address",
              "description": "Ethereum public key of validator node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tm_pub_key",
              "description": "Public key of Tendermint",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "info_url",
              "description": "URL with more info on the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "country",
              "description": "Country code (ISO 3166-1 alpha-2) for the location of the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Name of the validator",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "avatar_url",
              "description": "AvatarURL of the validator",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_pub_key_index",
              "description": "Vega public key derivation index",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "added",
              "description": "Flag indicating if the validator has been added to or removed from vega",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_epoch",
              "description": "The epoch from which the validator was added or removed",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/api/v1/core.proto",
      "description": "",
      "package": "vega.api.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [
        {
          "name": "Type",
          "longName": "SubmitRawTransactionRequest.Type",
          "fullName": "vega.api.v1.SubmitRawTransactionRequest.Type",
          "description": "Blockchain transaction type",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "TYPE_ASYNC",
              "number": "1",
              "description": "The transaction will be submitted without waiting for response"
            },
            {
              "name": "TYPE_SYNC",
              "number": "2",
              "description": "The transaction will be submitted, and blocking until the\ntendermint mempool return a response"
            },
            {
              "name": "TYPE_COMMIT",
              "number": "3",
              "description": "The transaction will submitted, and blocking until the tendermint\nnetwork will have committed it into a block"
            }
          ]
        },
        {
          "name": "Type",
          "longName": "SubmitTransactionRequest.Type",
          "fullName": "vega.api.v1.SubmitTransactionRequest.Type",
          "description": "Blockchain transaction type",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "TYPE_ASYNC",
              "number": "1",
              "description": "The transaction will be submitted without waiting for response"
            },
            {
              "name": "TYPE_SYNC",
              "number": "2",
              "description": "The transaction will be submitted, and blocking until the\ntendermint mempool return a response"
            },
            {
              "name": "TYPE_COMMIT",
              "number": "3",
              "description": "The transaction will submitted, and blocking until the tendermint\nnetwork will have committed it into a block"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "CheckRawTransactionRequest",
          "longName": "CheckRawTransactionRequest",
          "fullName": "vega.api.v1.CheckRawTransactionRequest",
          "description": "Request for checking a version agnostic transaction on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tx",
              "description": "A bundle of signed payload and signature marshalled into a byte array, to form a transaction that would be submitted to the Vega blockchain",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckRawTransactionResponse",
          "longName": "CheckRawTransactionResponse",
          "fullName": "vega.api.v1.CheckRawTransactionResponse",
          "description": "Response for checking a version agnostic transaction on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "success",
              "description": "Success will be true if the transaction was checked by the node",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "code",
              "description": "Check code result",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "gas_wanted",
              "description": "Gas wanted for transaction",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "gas_used",
              "description": "Gas used for transaction",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckTransactionRequest",
          "longName": "CheckTransactionRequest",
          "fullName": "vega.api.v1.CheckTransactionRequest",
          "description": "Request for checking a transaction v2 on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tx",
              "description": "A bundle of signed payload and signature, to form a transaction that would be submitted to the Vega blockchain",
              "label": "",
              "type": "Transaction",
              "longType": "vega.commands.v1.Transaction",
              "fullType": "vega.commands.v1.Transaction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckTransactionResponse",
          "longName": "CheckTransactionResponse",
          "fullName": "vega.api.v1.CheckTransactionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "success",
              "description": "Success will be true if the transaction was checked by the node",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "code",
              "description": "Check code result",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "gas_wanted",
              "description": "Gas wanted for transaction",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "gas_used",
              "description": "Gas used for transaction",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetVegaTimeRequest",
          "longName": "GetVegaTimeRequest",
          "fullName": "vega.api.v1.GetVegaTimeRequest",
          "description": "Request for the current time of the vega network",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetVegaTimeResponse",
          "longName": "GetVegaTimeResponse",
          "fullName": "vega.api.v1.GetVegaTimeResponse",
          "description": "Response for the current consensus coordinated time on the Vega network, referred to as \"VegaTime\"",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "timestamp",
              "description": "Timestamp representation of current VegaTime as represented in\nNanoseconds since the epoch, for example `1580473859111222333` corresponds to `2020-01-31T12:30:59.111222333Z`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LastBlockHeightRequest",
          "longName": "LastBlockHeightRequest",
          "fullName": "vega.api.v1.LastBlockHeightRequest",
          "description": "A request to get the height of the very last block processed\nby tendermint",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "LastBlockHeightResponse",
          "longName": "LastBlockHeightResponse",
          "fullName": "vega.api.v1.LastBlockHeightResponse",
          "description": "A response with the height of the last block processed by\ntendermint",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "height",
              "description": "last block height",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash",
              "description": "last block hash",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_hash_function",
              "description": "supported proof of work hash function",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_difficulty",
              "description": "the difficulty of the proof of work (target number of zeros)",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_number_of_past_blocks",
              "description": "supported proof of work number of blocks behind current height allowed",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_number_of_tx_per_block",
              "description": "allowed number of transactions per block",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_increasing_difficulty",
              "description": "is increasing difficulty allowed for using the same height for more than `spam_pow_number_of_past_blocks` transactions",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveEventBusRequest",
          "longName": "ObserveEventBusRequest",
          "fullName": "vega.api.v1.ObserveEventBusRequest",
          "description": "Request to subscribe to a stream of one or more event types from the Vega event bus",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "type",
              "description": "One or more types of event, required field",
              "label": "repeated",
              "type": "BusEventType",
              "longType": "vega.events.v1.BusEventType",
              "fullType": "vega.events.v1.BusEventType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier, optional field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier, optional field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "batch_size",
              "description": "Batch size, optional field -\nIf not specified, any events received will be sent immediately. If the client is not ready\nfor the next data-set, data may be dropped a number of times, and eventually the stream is closed.\nif specified, the first batch will be sent when ready. To receive the next set of events, the client\nmust write an `ObserveEventBatch` message on the stream to flush the buffer.\nIf no message is received in 5 seconds, the stream is closed.\nDefault: 0, send any and all events when they are available.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveEventBusResponse",
          "longName": "ObserveEventBusResponse",
          "fullName": "vega.api.v1.ObserveEventBusResponse",
          "description": "Response to a subscribed stream of events from the Vega event bus",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "events",
              "description": "One or more events",
              "label": "repeated",
              "type": "BusEvent",
              "longType": "vega.events.v1.BusEvent",
              "fullType": "vega.events.v1.BusEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PropagateChainEventRequest",
          "longName": "PropagateChainEventRequest",
          "fullName": "vega.api.v1.PropagateChainEventRequest",
          "description": "Request for a new event sent by the blockchain queue to be propagated on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "event",
              "description": "Chain event",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pub_key",
              "description": "Public key",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "Signature",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PropagateChainEventResponse",
          "longName": "PropagateChainEventResponse",
          "fullName": "vega.api.v1.PropagateChainEventResponse",
          "description": "Response for a new event sent by the blockchain queue to be propagated on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "success",
              "description": "Success will be true if the event was accepted by the node,\n**Important** - success does not mean that the event is confirmed by consensus",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Statistics",
          "longName": "Statistics",
          "fullName": "vega.api.v1.Statistics",
          "description": "Vega domain specific statistics as reported by the node the caller is connected to",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "block_height",
              "description": "Current block height as reported by the Vega blockchain",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "backlog_length",
              "description": "Current backlog length (number of transactions) that are waiting to be included in a block",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_peers",
              "description": "Total number of connected peers to this node",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "genesis_time",
              "description": "Genesis block date and time formatted in ISO-8601 datetime format with nanosecond precision",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_time",
              "description": "Current system date and time formatted in ISO-8601 datetime format with nanosecond precision",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_time",
              "description": "Current Vega date and time formatted in ISO-8601 datetime format with nanosecond precision",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the connection to the Vega blockchain\n- See [`ChainStatus`](#vega.ChainStatus)",
              "label": "",
              "type": "ChainStatus",
              "longType": "vega.ChainStatus",
              "fullType": "vega.ChainStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_per_block",
              "description": "Transactions per block",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "average_tx_bytes",
              "description": "Average transaction size in bytes",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "average_orders_per_block",
              "description": "Average orders per block",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trades_per_second",
              "description": "Trades emitted per second",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "orders_per_second",
              "description": "Orders processed per second",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_markets",
              "description": "Total markets on this Vega network",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_amend_order",
              "description": "Total number of order amendments since genesis (on all markets)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_cancel_order",
              "description": "Total number of order cancellations since genesis (on all markets)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_create_order",
              "description": "Total number of order submissions since genesis (on all markets)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_orders",
              "description": "Total number of orders processed since genesis (on all markets)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_trades",
              "description": "Total number of trades emitted since genesis (on all markets)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_subscriptions",
              "description": "Current number of stream subscribers to order data",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trade_subscriptions",
              "description": "Current number of stream subscribers to trade data",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "candle_subscriptions",
              "description": "Current number of stream subscribers to candle-stick data",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_depth_subscriptions",
              "description": "Current number of stream subscribers to market depth data",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "positions_subscriptions",
              "description": "Current number of stream subscribers to positions data",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "account_subscriptions",
              "description": "Current number of stream subscribers to account data",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_data_subscriptions",
              "description": "Current number of stream subscribers to market data",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "app_version_hash",
              "description": "The version hash of the Vega node software",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "app_version",
              "description": "The version of the Vega node software",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_version",
              "description": "The version of the underlying Vega blockchain",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_duration",
              "description": "Current block duration, in nanoseconds",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "uptime",
              "description": "Total uptime for this node formatted in ISO-8601 datetime format with nanosecond precision",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_id",
              "description": "Unique identifier for the underlying Vega blockchain",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_depth_updates_subscriptions",
              "description": "Current number of stream subscribers to market depth update data",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_hash",
              "description": "Current block hash",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StatisticsRequest",
          "longName": "StatisticsRequest",
          "fullName": "vega.api.v1.StatisticsRequest",
          "description": "A a request for statistics about the Vega network",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "StatisticsResponse",
          "longName": "StatisticsResponse",
          "fullName": "vega.api.v1.StatisticsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "statistics",
              "description": "",
              "label": "",
              "type": "Statistics",
              "longType": "Statistics",
              "fullType": "vega.api.v1.Statistics",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubmitRawTransactionRequest",
          "longName": "SubmitRawTransactionRequest",
          "fullName": "vega.api.v1.SubmitRawTransactionRequest",
          "description": "Request for submitting a version agnostic transaction on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tx",
              "description": "A bundle of signed payload and signature marshalled into a byte array, to form a transaction that will be submitted to the Vega blockchain",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type of transaction request, for example ASYNC, meaning the transaction will be submitted and not block on a response",
              "label": "",
              "type": "Type",
              "longType": "SubmitRawTransactionRequest.Type",
              "fullType": "vega.api.v1.SubmitRawTransactionRequest.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubmitRawTransactionResponse",
          "longName": "SubmitRawTransactionResponse",
          "fullName": "vega.api.v1.SubmitRawTransactionResponse",
          "description": "Response for submitting a version agnostic transaction on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "success",
              "description": "Success will be true if the transaction was accepted by the node,\n**Important** - success does not mean that the event is confirmed by consensus",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "Hash of the transaction, if accepted",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "code",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "height",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubmitTransactionRequest",
          "longName": "SubmitTransactionRequest",
          "fullName": "vega.api.v1.SubmitTransactionRequest",
          "description": "Request for submitting a transaction v2 on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tx",
              "description": "A bundle of signed payload and signature, to form a transaction that will be submitted to the Vega blockchain",
              "label": "",
              "type": "Transaction",
              "longType": "vega.commands.v1.Transaction",
              "fullType": "vega.commands.v1.Transaction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type of transaction request, for example ASYNC, meaning the transaction will be submitted and not block on a response",
              "label": "",
              "type": "Type",
              "longType": "SubmitTransactionRequest.Type",
              "fullType": "vega.api.v1.SubmitTransactionRequest.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubmitTransactionResponse",
          "longName": "SubmitTransactionResponse",
          "fullName": "vega.api.v1.SubmitTransactionResponse",
          "description": "Response for submitting a transaction v2 on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "success",
              "description": "Success will be true if the transaction was accepted by the node,\n**Important** - success does not mean that the event is confirmed by consensus",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "Hash of the transaction, if accepted",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "code",
              "description": "Result code success if unsucessful",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "Data for details",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "height",
              "description": "Height for commit",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "CoreService",
          "longName": "CoreService",
          "fullName": "vega.api.v1.CoreService",
          "description": "",
          "methods": [
            {
              "name": "SubmitTransaction",
              "description": "Submit a signed transaction",
              "requestType": "SubmitTransactionRequest",
              "requestLongType": "SubmitTransactionRequest",
              "requestFullType": "vega.api.v1.SubmitTransactionRequest",
              "requestStreaming": false,
              "responseType": "SubmitTransactionResponse",
              "responseLongType": "SubmitTransactionResponse",
              "responseFullType": "vega.api.v1.SubmitTransactionResponse",
              "responseStreaming": false
            },
            {
              "name": "PropagateChainEvent",
              "description": "Propagate a chain event",
              "requestType": "PropagateChainEventRequest",
              "requestLongType": "PropagateChainEventRequest",
              "requestFullType": "vega.api.v1.PropagateChainEventRequest",
              "requestStreaming": false,
              "responseType": "PropagateChainEventResponse",
              "responseLongType": "PropagateChainEventResponse",
              "responseFullType": "vega.api.v1.PropagateChainEventResponse",
              "responseStreaming": false
            },
            {
              "name": "Statistics",
              "description": "Get Statistics on Vega",
              "requestType": "StatisticsRequest",
              "requestLongType": "StatisticsRequest",
              "requestFullType": "vega.api.v1.StatisticsRequest",
              "requestStreaming": false,
              "responseType": "StatisticsResponse",
              "responseLongType": "StatisticsResponse",
              "responseFullType": "vega.api.v1.StatisticsResponse",
              "responseStreaming": false
            },
            {
              "name": "LastBlockHeight",
              "description": "Get the height of the last tendermint block",
              "requestType": "LastBlockHeightRequest",
              "requestLongType": "LastBlockHeightRequest",
              "requestFullType": "vega.api.v1.LastBlockHeightRequest",
              "requestStreaming": false,
              "responseType": "LastBlockHeightResponse",
              "responseLongType": "LastBlockHeightResponse",
              "responseFullType": "vega.api.v1.LastBlockHeightResponse",
              "responseStreaming": false
            },
            {
              "name": "GetVegaTime",
              "description": "Get Time",
              "requestType": "GetVegaTimeRequest",
              "requestLongType": "GetVegaTimeRequest",
              "requestFullType": "vega.api.v1.GetVegaTimeRequest",
              "requestStreaming": false,
              "responseType": "GetVegaTimeResponse",
              "responseLongType": "GetVegaTimeResponse",
              "responseFullType": "vega.api.v1.GetVegaTimeResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveEventBus",
              "description": "Subscribe to a stream of events from the core",
              "requestType": "ObserveEventBusRequest",
              "requestLongType": "ObserveEventBusRequest",
              "requestFullType": "vega.api.v1.ObserveEventBusRequest",
              "requestStreaming": true,
              "responseType": "ObserveEventBusResponse",
              "responseLongType": "ObserveEventBusResponse",
              "responseFullType": "vega.api.v1.ObserveEventBusResponse",
              "responseStreaming": true
            },
            {
              "name": "SubmitRawTransaction",
              "description": "Submit a version agnostic signed transaction",
              "requestType": "SubmitRawTransactionRequest",
              "requestLongType": "SubmitRawTransactionRequest",
              "requestFullType": "vega.api.v1.SubmitRawTransactionRequest",
              "requestStreaming": false,
              "responseType": "SubmitRawTransactionResponse",
              "responseLongType": "SubmitRawTransactionResponse",
              "responseFullType": "vega.api.v1.SubmitRawTransactionResponse",
              "responseStreaming": false
            },
            {
              "name": "CheckTransaction",
              "description": "Check a signed transaction",
              "requestType": "CheckTransactionRequest",
              "requestLongType": "CheckTransactionRequest",
              "requestFullType": "vega.api.v1.CheckTransactionRequest",
              "requestStreaming": false,
              "responseType": "CheckTransactionResponse",
              "responseLongType": "CheckTransactionResponse",
              "responseFullType": "vega.api.v1.CheckTransactionResponse",
              "responseStreaming": false
            },
            {
              "name": "CheckRawTransaction",
              "description": "Check a raw signed transaction",
              "requestType": "CheckRawTransactionRequest",
              "requestLongType": "CheckRawTransactionRequest",
              "requestFullType": "vega.api.v1.CheckRawTransactionRequest",
              "requestStreaming": false,
              "responseType": "CheckRawTransactionResponse",
              "responseLongType": "CheckRawTransactionResponse",
              "responseFullType": "vega.api.v1.CheckRawTransactionResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "vega/api/v1/corestate.proto",
      "description": "",
      "package": "vega.api.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Account",
          "longName": "Account",
          "fullName": "vega.api.v1.Account",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAccountsRequest",
          "longName": "ListAccountsRequest",
          "fullName": "vega.api.v1.ListAccountsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAccountsResponse",
          "longName": "ListAccountsResponse",
          "fullName": "vega.api.v1.ListAccountsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accounts",
              "description": "",
              "label": "repeated",
              "type": "Account",
              "longType": "Account",
              "fullType": "vega.api.v1.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAssetsRequest",
          "longName": "ListAssetsRequest",
          "fullName": "vega.api.v1.ListAssetsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset",
              "description": "optional ID",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAssetsResponse",
          "longName": "ListAssetsResponse",
          "fullName": "vega.api.v1.ListAssetsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "assets",
              "description": "",
              "label": "repeated",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDelegationsRequest",
          "longName": "ListDelegationsRequest",
          "fullName": "vega.api.v1.ListDelegationsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDelegationsResponse",
          "longName": "ListDelegationsResponse",
          "fullName": "vega.api.v1.ListDelegationsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegations",
              "description": "",
              "label": "repeated",
              "type": "Delegation",
              "longType": "vega.Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListMarketsDataRequest",
          "longName": "ListMarketsDataRequest",
          "fullName": "vega.api.v1.ListMarketsDataRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListMarketsDataResponse",
          "longName": "ListMarketsDataResponse",
          "fullName": "vega.api.v1.ListMarketsDataResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "markets_data",
              "description": "",
              "label": "repeated",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListMarketsRequest",
          "longName": "ListMarketsRequest",
          "fullName": "vega.api.v1.ListMarketsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListMarketsResponse",
          "longName": "ListMarketsResponse",
          "fullName": "vega.api.v1.ListMarketsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "markets",
              "description": "",
              "label": "repeated",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNetworkLimitsRequest",
          "longName": "ListNetworkLimitsRequest",
          "fullName": "vega.api.v1.ListNetworkLimitsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListNetworkLimitsResponse",
          "longName": "ListNetworkLimitsResponse",
          "fullName": "vega.api.v1.ListNetworkLimitsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "network_limits",
              "description": "",
              "label": "",
              "type": "NetworkLimits",
              "longType": "vega.NetworkLimits",
              "fullType": "vega.NetworkLimits",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNetworkParametersRequest",
          "longName": "ListNetworkParametersRequest",
          "fullName": "vega.api.v1.ListNetworkParametersRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "network_parameter_key",
              "description": "optional parameter key",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNetworkParametersResponse",
          "longName": "ListNetworkParametersResponse",
          "fullName": "vega.api.v1.ListNetworkParametersResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "network_parameters",
              "description": "",
              "label": "repeated",
              "type": "NetworkParameter",
              "longType": "vega.NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPartiesRequest",
          "longName": "ListPartiesRequest",
          "fullName": "vega.api.v1.ListPartiesRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListPartiesResponse",
          "longName": "ListPartiesResponse",
          "fullName": "vega.api.v1.ListPartiesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parties",
              "description": "",
              "label": "repeated",
              "type": "Party",
              "longType": "vega.Party",
              "fullType": "vega.Party",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPartiesStakeRequest",
          "longName": "ListPartiesStakeRequest",
          "fullName": "vega.api.v1.ListPartiesStakeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPartiesStakeResponse",
          "longName": "ListPartiesStakeResponse",
          "fullName": "vega.api.v1.ListPartiesStakeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parties_stake",
              "description": "",
              "label": "repeated",
              "type": "PartyStake",
              "longType": "PartyStake",
              "fullType": "vega.api.v1.PartyStake",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListProposalsRequest",
          "longName": "ListProposalsRequest",
          "fullName": "vega.api.v1.ListProposalsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal",
              "description": "optional ID",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proposer",
              "description": "optional party",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListProposalsResponse",
          "longName": "ListProposalsResponse",
          "fullName": "vega.api.v1.ListProposalsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposals",
              "description": "",
              "label": "repeated",
              "type": "Proposal",
              "longType": "vega.Proposal",
              "fullType": "vega.Proposal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListValidatorsRequest",
          "longName": "ListValidatorsRequest",
          "fullName": "vega.api.v1.ListValidatorsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListValidatorsResponse",
          "longName": "ListValidatorsResponse",
          "fullName": "vega.api.v1.ListValidatorsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "validators",
              "description": "",
              "label": "repeated",
              "type": "ValidatorUpdate",
              "longType": "vega.events.v1.ValidatorUpdate",
              "fullType": "vega.events.v1.ValidatorUpdate",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListVotesRequest",
          "longName": "ListVotesRequest",
          "fullName": "vega.api.v1.ListVotesRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListVotesResponse",
          "longName": "ListVotesResponse",
          "fullName": "vega.api.v1.ListVotesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "votes",
              "description": "",
              "label": "repeated",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyStake",
          "longName": "PartyStake",
          "fullName": "vega.api.v1.PartyStake",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_stake_available",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake_linkings",
              "description": "",
              "label": "repeated",
              "type": "StakeLinking",
              "longType": "vega.events.v1.StakeLinking",
              "fullType": "vega.events.v1.StakeLinking",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "CoreStateService",
          "longName": "CoreStateService",
          "fullName": "vega.api.v1.CoreStateService",
          "description": "",
          "methods": [
            {
              "name": "ListAccounts",
              "description": "",
              "requestType": "ListAccountsRequest",
              "requestLongType": "ListAccountsRequest",
              "requestFullType": "vega.api.v1.ListAccountsRequest",
              "requestStreaming": false,
              "responseType": "ListAccountsResponse",
              "responseLongType": "ListAccountsResponse",
              "responseFullType": "vega.api.v1.ListAccountsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListAssets",
              "description": "",
              "requestType": "ListAssetsRequest",
              "requestLongType": "ListAssetsRequest",
              "requestFullType": "vega.api.v1.ListAssetsRequest",
              "requestStreaming": false,
              "responseType": "ListAssetsResponse",
              "responseLongType": "ListAssetsResponse",
              "responseFullType": "vega.api.v1.ListAssetsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListNetworkParameters",
              "description": "",
              "requestType": "ListNetworkParametersRequest",
              "requestLongType": "ListNetworkParametersRequest",
              "requestFullType": "vega.api.v1.ListNetworkParametersRequest",
              "requestStreaming": false,
              "responseType": "ListNetworkParametersResponse",
              "responseLongType": "ListNetworkParametersResponse",
              "responseFullType": "vega.api.v1.ListNetworkParametersResponse",
              "responseStreaming": false
            },
            {
              "name": "ListNetworkLimits",
              "description": "",
              "requestType": "ListNetworkLimitsRequest",
              "requestLongType": "ListNetworkLimitsRequest",
              "requestFullType": "vega.api.v1.ListNetworkLimitsRequest",
              "requestStreaming": false,
              "responseType": "ListNetworkLimitsResponse",
              "responseLongType": "ListNetworkLimitsResponse",
              "responseFullType": "vega.api.v1.ListNetworkLimitsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListParties",
              "description": "",
              "requestType": "ListPartiesRequest",
              "requestLongType": "ListPartiesRequest",
              "requestFullType": "vega.api.v1.ListPartiesRequest",
              "requestStreaming": false,
              "responseType": "ListPartiesResponse",
              "responseLongType": "ListPartiesResponse",
              "responseFullType": "vega.api.v1.ListPartiesResponse",
              "responseStreaming": false
            },
            {
              "name": "ListValidators",
              "description": "",
              "requestType": "ListValidatorsRequest",
              "requestLongType": "ListValidatorsRequest",
              "requestFullType": "vega.api.v1.ListValidatorsRequest",
              "requestStreaming": false,
              "responseType": "ListValidatorsResponse",
              "responseLongType": "ListValidatorsResponse",
              "responseFullType": "vega.api.v1.ListValidatorsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListMarkets",
              "description": "",
              "requestType": "ListMarketsRequest",
              "requestLongType": "ListMarketsRequest",
              "requestFullType": "vega.api.v1.ListMarketsRequest",
              "requestStreaming": false,
              "responseType": "ListMarketsResponse",
              "responseLongType": "ListMarketsResponse",
              "responseFullType": "vega.api.v1.ListMarketsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListProposals",
              "description": "",
              "requestType": "ListProposalsRequest",
              "requestLongType": "ListProposalsRequest",
              "requestFullType": "vega.api.v1.ListProposalsRequest",
              "requestStreaming": false,
              "responseType": "ListProposalsResponse",
              "responseLongType": "ListProposalsResponse",
              "responseFullType": "vega.api.v1.ListProposalsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListMarketsData",
              "description": "",
              "requestType": "ListMarketsDataRequest",
              "requestLongType": "ListMarketsDataRequest",
              "requestFullType": "vega.api.v1.ListMarketsDataRequest",
              "requestStreaming": false,
              "responseType": "ListMarketsDataResponse",
              "responseLongType": "ListMarketsDataResponse",
              "responseFullType": "vega.api.v1.ListMarketsDataResponse",
              "responseStreaming": false
            },
            {
              "name": "ListVotes",
              "description": "",
              "requestType": "ListVotesRequest",
              "requestLongType": "ListVotesRequest",
              "requestFullType": "vega.api.v1.ListVotesRequest",
              "requestStreaming": false,
              "responseType": "ListVotesResponse",
              "responseLongType": "ListVotesResponse",
              "responseFullType": "vega.api.v1.ListVotesResponse",
              "responseStreaming": false
            },
            {
              "name": "ListPartiesStake",
              "description": "",
              "requestType": "ListPartiesStakeRequest",
              "requestLongType": "ListPartiesStakeRequest",
              "requestFullType": "vega.api.v1.ListPartiesStakeRequest",
              "requestStreaming": false,
              "responseType": "ListPartiesStakeResponse",
              "responseLongType": "ListPartiesStakeResponse",
              "responseFullType": "vega.api.v1.ListPartiesStakeResponse",
              "responseStreaming": false
            },
            {
              "name": "ListDelegations",
              "description": "",
              "requestType": "ListDelegationsRequest",
              "requestLongType": "ListDelegationsRequest",
              "requestFullType": "vega.api.v1.ListDelegationsRequest",
              "requestStreaming": false,
              "responseType": "ListDelegationsResponse",
              "responseLongType": "ListDelegationsResponse",
              "responseFullType": "vega.api.v1.ListDelegationsResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "vega/checkpoint/v1/checkpoint.proto",
      "description": "",
      "package": "vega.checkpoint.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "AssetBalance",
          "longName": "AssetBalance",
          "fullName": "vega.checkpoint.v1.AssetBalance",
          "description": "AssetBalance represents the total balance of a given asset for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetEntry",
          "longName": "AssetEntry",
          "fullName": "vega.checkpoint.v1.AssetEntry",
          "description": "AssetEntrty is a single (enabled) asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_details",
              "description": "",
              "label": "",
              "type": "AssetDetails",
              "longType": "vega.AssetDetails",
              "fullType": "vega.AssetDetails",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Assets",
          "longName": "Assets",
          "fullName": "vega.checkpoint.v1.Assets",
          "description": "Assets contains all the enabled assets as AssetEntries",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "assets",
              "description": "",
              "label": "repeated",
              "type": "AssetEntry",
              "longType": "AssetEntry",
              "fullType": "vega.checkpoint.v1.AssetEntry",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Banking",
          "longName": "Banking",
          "fullName": "vega.checkpoint.v1.Banking",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfers_at_time",
              "description": "",
              "label": "repeated",
              "type": "ScheduledTransferAtTime",
              "longType": "ScheduledTransferAtTime",
              "fullType": "vega.checkpoint.v1.ScheduledTransferAtTime",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "recurring_transfers",
              "description": "",
              "label": "",
              "type": "RecurringTransfers",
              "longType": "RecurringTransfers",
              "fullType": "vega.checkpoint.v1.RecurringTransfers",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Block",
          "longName": "Block",
          "fullName": "vega.checkpoint.v1.Block",
          "description": "Block message contains data related to block at which the checkpoint\nwas created (ie block height)",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "height",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Checkpoint",
          "longName": "Checkpoint",
          "fullName": "vega.checkpoint.v1.Checkpoint",
          "description": "Checkpoint aggregates the various engine snapshots",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "governance",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "assets",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collateral",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "network_parameters",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "delegation",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "will just be an epoch event",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rewards",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "banking",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validators",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staking",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "multisig_control",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_tracker",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckpointState",
          "longName": "CheckpointState",
          "fullName": "vega.checkpoint.v1.CheckpointState",
          "description": "CheckpointState is the entire checkpoint serialised (basically serialised the Checkpoint message + hash)",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "hash",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Collateral",
          "longName": "Collateral",
          "fullName": "vega.checkpoint.v1.Collateral",
          "description": "Collateral contains the balances per party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "balances",
              "description": "",
              "label": "repeated",
              "type": "AssetBalance",
              "longType": "AssetBalance",
              "fullType": "vega.checkpoint.v1.AssetBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Delegate",
          "longName": "Delegate",
          "fullName": "vega.checkpoint.v1.Delegate",
          "description": "Delegate contains all entries for a checkpoint",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "active",
              "description": "",
              "label": "repeated",
              "type": "DelegateEntry",
              "longType": "DelegateEntry",
              "fullType": "vega.checkpoint.v1.DelegateEntry",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending",
              "description": "",
              "label": "repeated",
              "type": "DelegateEntry",
              "longType": "DelegateEntry",
              "fullType": "vega.checkpoint.v1.DelegateEntry",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auto_delegation",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegateEntry",
          "longName": "DelegateEntry",
          "fullName": "vega.checkpoint.v1.DelegateEntry",
          "description": "Delegated amounts for party/node\nundelegate and epoch seq are only relevant for pending entries",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "undelegate",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketActivityTracker",
          "longName": "MarketActivityTracker",
          "fullName": "vega.checkpoint.v1.MarketActivityTracker",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "maker_fees",
              "description": "",
              "label": "repeated",
              "type": "PartyFees",
              "longType": "PartyFees",
              "fullType": "vega.checkpoint.v1.PartyFees",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "taker_fees",
              "description": "",
              "label": "repeated",
              "type": "PartyFees",
              "longType": "PartyFees",
              "fullType": "vega.checkpoint.v1.PartyFees",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lp_fees",
              "description": "",
              "label": "repeated",
              "type": "PartyFees",
              "longType": "PartyFees",
              "fullType": "vega.checkpoint.v1.PartyFees",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proposer",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bonus_paid",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value_traded",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ready_to_delete",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketTracker",
          "longName": "MarketTracker",
          "fullName": "vega.checkpoint.v1.MarketTracker",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_activity",
              "description": "",
              "label": "repeated",
              "type": "MarketActivityTracker",
              "longType": "MarketActivityTracker",
              "fullType": "vega.checkpoint.v1.MarketActivityTracker",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MultisigControl",
          "longName": "MultisigControl",
          "fullName": "vega.checkpoint.v1.MultisigControl",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signers",
              "description": "",
              "label": "repeated",
              "type": "ERC20MultiSigSignerEvent",
              "longType": "vega.events.v1.ERC20MultiSigSignerEvent",
              "fullType": "vega.events.v1.ERC20MultiSigSignerEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "threshold_set",
              "description": "",
              "label": "",
              "type": "ERC20MultiSigThresholdSetEvent",
              "longType": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
              "fullType": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_block_seen",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NetParams",
          "longName": "NetParams",
          "fullName": "vega.checkpoint.v1.NetParams",
          "description": "NetParams contains all network parameters",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "",
              "label": "repeated",
              "type": "NetworkParameter",
              "longType": "vega.NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyAmount",
          "longName": "PartyAmount",
          "fullName": "vega.checkpoint.v1.PartyAmount",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyFees",
          "longName": "PartyFees",
          "fullName": "vega.checkpoint.v1.PartyFees",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingEthereumKeyRotation",
          "longName": "PendingEthereumKeyRotation",
          "fullName": "vega.checkpoint.v1.PendingEthereumKeyRotation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "relative_target_block_height",
              "description": "Relative target block height is: target block height - current block height.\nUseful for cross blockchain compatibility.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingKeyRotation",
          "longName": "PendingKeyRotation",
          "fullName": "vega.checkpoint.v1.PendingKeyRotation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "relative_target_block_height",
              "description": "Relative target block height is: target block height - current block height.\nUseful for cross blockchain compatibility.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_pub_key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_pub_key_index",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingRewardPayout",
          "longName": "PendingRewardPayout",
          "fullName": "vega.checkpoint.v1.PendingRewardPayout",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from_account",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_amount",
              "description": "",
              "label": "repeated",
              "type": "PartyAmount",
              "longType": "PartyAmount",
              "fullType": "vega.checkpoint.v1.PartyAmount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_reward",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Proposals",
          "longName": "Proposals",
          "fullName": "vega.checkpoint.v1.Proposals",
          "description": "Proposals will contain all accepted proposals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposals",
              "description": "",
              "label": "repeated",
              "type": "Proposal",
              "longType": "vega.Proposal",
              "fullType": "vega.Proposal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RecurringTransfers",
          "longName": "RecurringTransfers",
          "fullName": "vega.checkpoint.v1.RecurringTransfers",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "recurring_transfers",
              "description": "",
              "label": "repeated",
              "type": "Transfer",
              "longType": "vega.events.v1.Transfer",
              "fullType": "vega.events.v1.Transfer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardPayout",
          "longName": "RewardPayout",
          "fullName": "vega.checkpoint.v1.RewardPayout",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "payout_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rewards_payout",
              "description": "",
              "label": "repeated",
              "type": "PendingRewardPayout",
              "longType": "PendingRewardPayout",
              "fullType": "vega.checkpoint.v1.PendingRewardPayout",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Rewards",
          "longName": "Rewards",
          "fullName": "vega.checkpoint.v1.Rewards",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "rewards",
              "description": "",
              "label": "repeated",
              "type": "RewardPayout",
              "longType": "RewardPayout",
              "fullType": "vega.checkpoint.v1.RewardPayout",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ScheduledTransfer",
          "longName": "ScheduledTransfer",
          "fullName": "vega.checkpoint.v1.ScheduledTransfer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfer",
              "description": "",
              "label": "",
              "type": "Transfer",
              "longType": "vega.Transfer",
              "fullType": "vega.Transfer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "account_type",
              "description": "",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oneoff_transfer",
              "description": "",
              "label": "",
              "type": "Transfer",
              "longType": "vega.events.v1.Transfer",
              "fullType": "vega.events.v1.Transfer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ScheduledTransferAtTime",
          "longName": "ScheduledTransferAtTime",
          "fullName": "vega.checkpoint.v1.ScheduledTransferAtTime",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deliver_on",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "transfers",
              "description": "",
              "label": "repeated",
              "type": "ScheduledTransfer",
              "longType": "ScheduledTransfer",
              "fullType": "vega.checkpoint.v1.ScheduledTransfer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Staking",
          "longName": "Staking",
          "fullName": "vega.checkpoint.v1.Staking",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accepted",
              "description": "",
              "label": "repeated",
              "type": "StakeLinking",
              "longType": "vega.events.v1.StakeLinking",
              "fullType": "vega.events.v1.StakeLinking",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_block_seen",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorState",
          "longName": "ValidatorState",
          "fullName": "vega.checkpoint.v1.ValidatorState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "validator_update",
              "description": "",
              "label": "",
              "type": "ValidatorUpdate",
              "longType": "vega.events.v1.ValidatorUpdate",
              "fullType": "vega.events.v1.ValidatorUpdate",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "eth_events_forwarded",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_power",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ranking_score",
              "description": "",
              "label": "",
              "type": "RankingScore",
              "longType": "vega.RankingScore",
              "fullType": "vega.RankingScore",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Validators",
          "longName": "Validators",
          "fullName": "vega.checkpoint.v1.Validators",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "validator_state",
              "description": "",
              "label": "repeated",
              "type": "ValidatorState",
              "longType": "ValidatorState",
              "fullType": "vega.checkpoint.v1.ValidatorState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_key_rotations",
              "description": "",
              "label": "repeated",
              "type": "PendingKeyRotation",
              "longType": "PendingKeyRotation",
              "fullType": "vega.checkpoint.v1.PendingKeyRotation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_ethereum_key_rotations",
              "description": "",
              "label": "repeated",
              "type": "PendingEthereumKeyRotation",
              "longType": "PendingEthereumKeyRotation",
              "fullType": "vega.checkpoint.v1.PendingEthereumKeyRotation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/snapshot/v1/snapshot.proto",
      "description": "",
      "package": "vega.snapshot.v1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "Format",
          "longName": "Format",
          "fullName": "vega.snapshot.v1.Format",
          "description": "",
          "values": [
            {
              "name": "FORMAT_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "FORMAT_PROTO",
              "number": "1",
              "description": "Standard proto encoding"
            },
            {
              "name": "FORMAT_PROTO_COMPRESSED",
              "number": "2",
              "description": "Compressed proto, might come in handy"
            },
            {
              "name": "FORMAT_JSON",
              "number": "3",
              "description": "Simple JSON serialisation, probably not going to be used"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AcceptedProtocolUpgradeProposal",
          "longName": "AcceptedProtocolUpgradeProposal",
          "fullName": "vega.snapshot.v1.AcceptedProtocolUpgradeProposal",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "upgrade_block_height",
              "description": "The block height at which to perform the upgrade",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_release_tag",
              "description": "the release tag for the vega binary",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_node_release_tag",
              "description": "the release tag for the data-node binary",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ActiveAssets",
          "longName": "ActiveAssets",
          "fullName": "vega.snapshot.v1.ActiveAssets",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "assets",
              "description": "",
              "label": "repeated",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AppState",
          "longName": "AppState",
          "fullName": "vega.snapshot.v1.AppState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetAction",
          "longName": "AssetAction",
          "fullName": "vega.snapshot.v1.AssetAction",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_number",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_index",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "builtin_deposit",
              "description": "",
              "label": "",
              "type": "BuiltinAssetDeposit",
              "longType": "vega.BuiltinAssetDeposit",
              "fullType": "vega.BuiltinAssetDeposit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "erc20_deposit",
              "description": "",
              "label": "",
              "type": "ERC20Deposit",
              "longType": "vega.ERC20Deposit",
              "fullType": "vega.ERC20Deposit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_list",
              "description": "",
              "label": "",
              "type": "ERC20AssetList",
              "longType": "vega.ERC20AssetList",
              "fullType": "vega.ERC20AssetList",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "erc20_asset_limits_updated",
              "description": "",
              "label": "",
              "type": "ERC20AssetLimitsUpdated",
              "longType": "vega.ERC20AssetLimitsUpdated",
              "fullType": "vega.ERC20AssetLimitsUpdated",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AuctionState",
          "longName": "AuctionState",
          "fullName": "vega.snapshot.v1.AuctionState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "mode",
              "description": "",
              "label": "",
              "type": "TradingMode",
              "longType": "vega.Market.TradingMode",
              "fullType": "vega.Market.TradingMode",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "default_mode",
              "description": "",
              "label": "",
              "type": "TradingMode",
              "longType": "vega.Market.TradingMode",
              "fullType": "vega.Market.TradingMode",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trigger",
              "description": "",
              "label": "",
              "type": "AuctionTrigger",
              "longType": "vega.AuctionTrigger",
              "fullType": "vega.AuctionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "begin",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end",
              "description": "",
              "label": "",
              "type": "AuctionDuration",
              "longType": "vega.AuctionDuration",
              "fullType": "vega.AuctionDuration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stop",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "extension",
              "description": "",
              "label": "",
              "type": "AuctionTrigger",
              "longType": "vega.AuctionTrigger",
              "fullType": "vega.AuctionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "extension_event_sent",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BankingAssetActions",
          "longName": "BankingAssetActions",
          "fullName": "vega.snapshot.v1.BankingAssetActions",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_action",
              "description": "",
              "label": "repeated",
              "type": "AssetAction",
              "longType": "AssetAction",
              "fullType": "vega.snapshot.v1.AssetAction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BankingDeposits",
          "longName": "BankingDeposits",
          "fullName": "vega.snapshot.v1.BankingDeposits",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deposit",
              "description": "",
              "label": "repeated",
              "type": "Deposit",
              "longType": "Deposit",
              "fullType": "vega.snapshot.v1.Deposit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BankingRecurringTransfers",
          "longName": "BankingRecurringTransfers",
          "fullName": "vega.snapshot.v1.BankingRecurringTransfers",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "recurring_tranfers",
              "description": "",
              "label": "",
              "type": "RecurringTransfers",
              "longType": "vega.checkpoint.v1.RecurringTransfers",
              "fullType": "vega.checkpoint.v1.RecurringTransfers",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BankingScheduledTransfers",
          "longName": "BankingScheduledTransfers",
          "fullName": "vega.snapshot.v1.BankingScheduledTransfers",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfers_at_time",
              "description": "",
              "label": "repeated",
              "type": "ScheduledTransferAtTime",
              "longType": "vega.checkpoint.v1.ScheduledTransferAtTime",
              "fullType": "vega.checkpoint.v1.ScheduledTransferAtTime",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BankingSeen",
          "longName": "BankingSeen",
          "fullName": "vega.snapshot.v1.BankingSeen",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "refs",
              "description": "",
              "label": "repeated",
              "type": "TxRef",
              "longType": "TxRef",
              "fullType": "vega.snapshot.v1.TxRef",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BankingWithdrawals",
          "longName": "BankingWithdrawals",
          "fullName": "vega.snapshot.v1.BankingWithdrawals",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "withdrawals",
              "description": "",
              "label": "repeated",
              "type": "Withdrawal",
              "longType": "Withdrawal",
              "fullType": "vega.snapshot.v1.Withdrawal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BannedParty",
          "longName": "BannedParty",
          "fullName": "vega.snapshot.v1.BannedParty",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "until_epoch",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BlockRejectStats",
          "longName": "BlockRejectStats",
          "fullName": "vega.snapshot.v1.BlockRejectStats",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "rejected",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Checkpoint",
          "longName": "Checkpoint",
          "fullName": "vega.snapshot.v1.Checkpoint",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "next_cp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Chunk",
          "longName": "Chunk",
          "fullName": "vega.snapshot.v1.Chunk",
          "description": "Chunk is simply an as-is chunk belonging to a snapshot\nnot sure how usable this type would be",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "",
              "label": "repeated",
              "type": "Payload",
              "longType": "Payload",
              "fullType": "vega.snapshot.v1.Payload",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nr",
              "description": "in case of multi-part data, this is chunk nr...",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "of",
              "description": "...of a total of N chunks",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CollateralAccounts",
          "longName": "CollateralAccounts",
          "fullName": "vega.snapshot.v1.CollateralAccounts",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accounts",
              "description": "",
              "label": "repeated",
              "type": "Account",
              "longType": "vega.Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CollateralAssets",
          "longName": "CollateralAssets",
          "fullName": "vega.snapshot.v1.CollateralAssets",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "assets",
              "description": "",
              "label": "repeated",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CurrentPrice",
          "longName": "CurrentPrice",
          "fullName": "vega.snapshot.v1.CurrentPrice",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DecimalMap",
          "longName": "DecimalMap",
          "fullName": "vega.snapshot.v1.DecimalMap",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "val",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationActive",
          "longName": "DelegationActive",
          "fullName": "vega.snapshot.v1.DelegationActive",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegations",
              "description": "",
              "label": "repeated",
              "type": "Delegation",
              "longType": "vega.Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationAuto",
          "longName": "DelegationAuto",
          "fullName": "vega.snapshot.v1.DelegationAuto",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parties",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationLastReconciliationTime",
          "longName": "DelegationLastReconciliationTime",
          "fullName": "vega.snapshot.v1.DelegationLastReconciliationTime",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "last_reconciliation_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationPending",
          "longName": "DelegationPending",
          "fullName": "vega.snapshot.v1.DelegationPending",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegations",
              "description": "",
              "label": "repeated",
              "type": "Delegation",
              "longType": "vega.Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "undelegation",
              "description": "",
              "label": "repeated",
              "type": "Delegation",
              "longType": "vega.Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Deposit",
          "longName": "Deposit",
          "fullName": "vega.snapshot.v1.Deposit",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "deposit",
              "description": "",
              "label": "",
              "type": "Deposit",
              "longType": "vega.Deposit",
              "fullType": "vega.Deposit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigTopologyPending",
          "longName": "ERC20MultiSigTopologyPending",
          "fullName": "vega.snapshot.v1.ERC20MultiSigTopologyPending",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pending_signers",
              "description": "",
              "label": "repeated",
              "type": "ERC20MultiSigSignerEvent",
              "longType": "vega.events.v1.ERC20MultiSigSignerEvent",
              "fullType": "vega.events.v1.ERC20MultiSigSignerEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_threshold_set",
              "description": "",
              "label": "repeated",
              "type": "ERC20MultiSigThresholdSetEvent",
              "longType": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
              "fullType": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "witnessed_signers",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "witnessed_threshold_sets",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigTopologyVerified",
          "longName": "ERC20MultiSigTopologyVerified",
          "fullName": "vega.snapshot.v1.ERC20MultiSigTopologyVerified",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signers",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "events_per_address",
              "description": "",
              "label": "repeated",
              "type": "SignerEventsPerAddress",
              "longType": "SignerEventsPerAddress",
              "fullType": "vega.snapshot.v1.SignerEventsPerAddress",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "threshold",
              "description": "",
              "label": "",
              "type": "ERC20MultiSigThresholdSetEvent",
              "longType": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
              "fullType": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seen_events",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochState",
          "longName": "EpochState",
          "fullName": "vega.snapshot.v1.EpochState",
          "description": "EpochState details",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "seq",
              "description": "Sequence number that increases by one each epoch",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_time",
              "description": "What time did this epoch start",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expire_time",
              "description": "What time should this epoch end",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ready_to_start_new_epoch",
              "description": "Ready to start a new epoch",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ready_to_end_epoch",
              "description": "Ready to end epoch",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EquityShare",
          "longName": "EquityShare",
          "fullName": "vega.snapshot.v1.EquityShare",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "mvp",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "opening_auction_ended",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lps",
              "description": "",
              "label": "repeated",
              "type": "EquityShareLP",
              "longType": "EquityShareLP",
              "fullType": "vega.snapshot.v1.EquityShareLP",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "r",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "p_mvp",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EquityShareLP",
          "longName": "EquityShareLP",
          "fullName": "vega.snapshot.v1.EquityShareLP",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "share",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "avg",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vshare",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EventForwarder",
          "longName": "EventForwarder",
          "fullName": "vega.snapshot.v1.EventForwarder",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "acked_events",
              "description": "",
              "label": "repeated",
              "type": "ChainEvent",
              "longType": "vega.commands.v1.ChainEvent",
              "fullType": "vega.commands.v1.ChainEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExecutionMarkets",
          "longName": "ExecutionMarkets",
          "fullName": "vega.snapshot.v1.ExecutionMarkets",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "markets",
              "description": "",
              "label": "repeated",
              "type": "Market",
              "longType": "Market",
              "fullType": "vega.snapshot.v1.Market",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FeeSplitter",
          "longName": "FeeSplitter",
          "fullName": "vega.snapshot.v1.FeeSplitter",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "time_window_start",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trade_value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FloatingPointConsensus",
          "longName": "FloatingPointConsensus",
          "fullName": "vega.snapshot.v1.FloatingPointConsensus",
          "description": "snapshot payload for floating point consensus",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "next_time_trigger",
              "description": "",
              "label": "repeated",
              "type": "NextTimeTrigger",
              "longType": "NextTimeTrigger",
              "fullType": "vega.snapshot.v1.NextTimeTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state_variables",
              "description": "",
              "label": "repeated",
              "type": "StateVarInternalState",
              "longType": "StateVarInternalState",
              "fullType": "vega.snapshot.v1.StateVarInternalState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FloatingPointValidatorResult",
          "longName": "FloatingPointValidatorResult",
          "fullName": "vega.snapshot.v1.FloatingPointValidatorResult",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bundle",
              "description": "",
              "label": "repeated",
              "type": "KeyValueBundle",
              "longType": "vega.KeyValueBundle",
              "fullType": "vega.KeyValueBundle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FutureState",
          "longName": "FutureState",
          "fullName": "vega.snapshot.v1.FutureState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "settlement_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trading_terminated",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GovernanceActive",
          "longName": "GovernanceActive",
          "fullName": "vega.snapshot.v1.GovernanceActive",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposals",
              "description": "",
              "label": "repeated",
              "type": "ProposalData",
              "longType": "ProposalData",
              "fullType": "vega.snapshot.v1.ProposalData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GovernanceEnacted",
          "longName": "GovernanceEnacted",
          "fullName": "vega.snapshot.v1.GovernanceEnacted",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposals",
              "description": "",
              "label": "repeated",
              "type": "ProposalData",
              "longType": "ProposalData",
              "fullType": "vega.snapshot.v1.ProposalData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GovernanceNode",
          "longName": "GovernanceNode",
          "fullName": "vega.snapshot.v1.GovernanceNode",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposals",
              "description": "",
              "label": "repeated",
              "type": "Proposal",
              "longType": "vega.Proposal",
              "fullType": "vega.Proposal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "HeartbeatTracker",
          "longName": "HeartbeatTracker",
          "fullName": "vega.snapshot.v1.HeartbeatTracker",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "expected_next_hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expected_next_hash_since",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_index",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_sigs",
              "description": "",
              "label": "repeated",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LimitState",
          "longName": "LimitState",
          "fullName": "vega.snapshot.v1.LimitState",
          "description": "LimitState details",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "block_count",
              "description": "Number of blocks into the boostrapping phase",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "can_propose_market",
              "description": "whether the limit on market proposals has been lifted",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "can_propose_asset",
              "description": "whether the limit on asset proposals has been lifted",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "genesis_loaded",
              "description": "whether the genesis state is loaded",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_market_enabled",
              "description": "fields derived from the genesis state",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_asset_enabled",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_market_enabled_from",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propose_asset_enabled_from",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityParameters",
          "longName": "LiquidityParameters",
          "fullName": "vega.snapshot.v1.LiquidityParameters",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "max_fee",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_shape_size",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake_to_obligation_factor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "required for key generation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityPartiesLiquidityOrders",
          "longName": "LiquidityPartiesLiquidityOrders",
          "fullName": "vega.snapshot.v1.LiquidityPartiesLiquidityOrders",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_orders",
              "description": "",
              "label": "repeated",
              "type": "PartyOrders",
              "longType": "PartyOrders",
              "fullType": "vega.snapshot.v1.PartyOrders",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "required for key generation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityPartiesOrders",
          "longName": "LiquidityPartiesOrders",
          "fullName": "vega.snapshot.v1.LiquidityPartiesOrders",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_orders",
              "description": "",
              "label": "repeated",
              "type": "PartyOrders",
              "longType": "PartyOrders",
              "fullType": "vega.snapshot.v1.PartyOrders",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "required for key generation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityPendingProvisions",
          "longName": "LiquidityPendingProvisions",
          "fullName": "vega.snapshot.v1.LiquidityPendingProvisions",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pending_provisions",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "required for key generation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityPriceProbabilityPair",
          "longName": "LiquidityPriceProbabilityPair",
          "fullName": "vega.snapshot.v1.LiquidityPriceProbabilityPair",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "probability",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvisions",
          "longName": "LiquidityProvisions",
          "fullName": "vega.snapshot.v1.LiquidityProvisions",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "liquidity_provisions",
              "description": "",
              "label": "repeated",
              "type": "LiquidityProvision",
              "longType": "vega.LiquidityProvision",
              "fullType": "vega.LiquidityProvision",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "required for key generation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquiditySupplied",
          "longName": "LiquiditySupplied",
          "fullName": "vega.snapshot.v1.LiquiditySupplied",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "consensus_reached",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bid_cache",
              "description": "",
              "label": "repeated",
              "type": "LiquidityPriceProbabilityPair",
              "longType": "LiquidityPriceProbabilityPair",
              "fullType": "vega.snapshot.v1.LiquidityPriceProbabilityPair",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ask_cache",
              "description": "",
              "label": "repeated",
              "type": "LiquidityPriceProbabilityPair",
              "longType": "LiquidityPriceProbabilityPair",
              "fullType": "vega.snapshot.v1.LiquidityPriceProbabilityPair",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityTarget",
          "longName": "LiquidityTarget",
          "fullName": "vega.snapshot.v1.LiquidityTarget",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "scheduled_truncate",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_open_interests",
              "description": "",
              "label": "repeated",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "previous_open_interests",
              "description": "",
              "label": "repeated",
              "type": "TimestampedOpenInterest",
              "longType": "TimestampedOpenInterest",
              "fullType": "vega.snapshot.v1.TimestampedOpenInterest",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_open_interests",
              "description": "",
              "label": "",
              "type": "TimestampedOpenInterest",
              "longType": "TimestampedOpenInterest",
              "fullType": "vega.snapshot.v1.TimestampedOpenInterest",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Market",
          "longName": "Market",
          "fullName": "vega.snapshot.v1.Market",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_monitor",
              "description": "",
              "label": "",
              "type": "PriceMonitor",
              "longType": "PriceMonitor",
              "fullType": "vega.snapshot.v1.PriceMonitor",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction_state",
              "description": "",
              "label": "",
              "type": "AuctionState",
              "longType": "AuctionState",
              "fullType": "vega.snapshot.v1.AuctionState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pegged_orders",
              "description": "",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expiring_orders",
              "description": "",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_best_bid",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_best_ask",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_mid_bid",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_mid_ask",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_market_value_proxy",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_equity_share_distributed",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "equity_share",
              "description": "",
              "label": "",
              "type": "EquityShare",
              "longType": "EquityShare",
              "fullType": "vega.snapshot.v1.EquityShare",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_mark_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "risk_factor_short",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "risk_factor_long",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "risk_factor_consensus_reached",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee_splitter",
              "description": "",
              "label": "",
              "type": "FeeSplitter",
              "longType": "FeeSplitter",
              "fullType": "vega.snapshot.v1.FeeSplitter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "settlement_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketPositions",
          "longName": "MarketPositions",
          "fullName": "vega.snapshot.v1.MarketPositions",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "positions",
              "description": "",
              "label": "repeated",
              "type": "Position",
              "longType": "Position",
              "fullType": "vega.snapshot.v1.Position",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketTracker",
          "longName": "MarketTracker",
          "fullName": "vega.snapshot.v1.MarketTracker",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_activity",
              "description": "",
              "label": "repeated",
              "type": "MarketActivityTracker",
              "longType": "vega.checkpoint.v1.MarketActivityTracker",
              "fullType": "vega.checkpoint.v1.MarketActivityTracker",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MatchingBook",
          "longName": "MatchingBook",
          "fullName": "vega.snapshot.v1.MatchingBook",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy",
              "description": "",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell",
              "description": "",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_traded_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auction",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "batch_id",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Metadata",
          "longName": "Metadata",
          "fullName": "vega.snapshot.v1.Metadata",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chunk_hashes",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_hashes",
              "description": "hashes used by snapshot engine, different to chunk hash if data was split up, or combined into a single chunk",
              "label": "repeated",
              "type": "NodeHash",
              "longType": "NodeHash",
              "fullType": "vega.snapshot.v1.NodeHash",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NetParams",
          "longName": "NetParams",
          "fullName": "vega.snapshot.v1.NetParams",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "",
              "label": "repeated",
              "type": "NetworkParameter",
              "longType": "vega.NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NextTimeTrigger",
          "longName": "NextTimeTrigger",
          "fullName": "vega.snapshot.v1.NextTimeTrigger",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_trigger",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeHash",
          "longName": "NodeHash",
          "fullName": "vega.snapshot.v1.NodeHash",
          "description": "NodeHash represents an exported node from the AVL tree and contains all the data necessary to recontruct and identical copy of the\nAVL tree after we've serialised it",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "The node's full key, for example epoch.all",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash",
              "description": "The hash of the node's value",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "height",
              "description": "The height of the node in the tree",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "The version of that node i.e how many times its value has changed during tree updates",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "is_leaf",
              "description": "Whether or not the node contains a snapshot payload, only leaf nodes in the AVL contain payloads",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Notary",
          "longName": "Notary",
          "fullName": "vega.snapshot.v1.Notary",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "notary_sigs",
              "description": "",
              "label": "repeated",
              "type": "NotarySigs",
              "longType": "NotarySigs",
              "fullType": "vega.snapshot.v1.NotarySigs",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NotarySigs",
          "longName": "NotarySigs",
          "fullName": "vega.snapshot.v1.NotarySigs",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "kind",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sig",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleData",
          "longName": "OracleData",
          "fullName": "vega.snapshot.v1.OracleData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pub_keys",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "",
              "label": "repeated",
              "type": "OracleDataPair",
              "longType": "OracleDataPair",
              "fullType": "vega.snapshot.v1.OracleDataPair",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleDataBatch",
          "longName": "OracleDataBatch",
          "fullName": "vega.snapshot.v1.OracleDataBatch",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "oracle_data",
              "description": "",
              "label": "repeated",
              "type": "OracleData",
              "longType": "OracleData",
              "fullType": "vega.snapshot.v1.OracleData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleDataPair",
          "longName": "OracleDataPair",
          "fullName": "vega.snapshot.v1.OracleDataPair",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyOrders",
          "longName": "PartyOrders",
          "fullName": "vega.snapshot.v1.PartyOrders",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "orders",
              "description": "",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyProposalVoteCount",
          "longName": "PartyProposalVoteCount",
          "fullName": "vega.snapshot.v1.PartyProposalVoteCount",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proposal",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "count",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyTokenBalance",
          "longName": "PartyTokenBalance",
          "fullName": "vega.snapshot.v1.PartyTokenBalance",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PastPrice",
          "longName": "PastPrice",
          "fullName": "vega.snapshot.v1.PastPrice",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume_weighted_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Payload",
          "longName": "Payload",
          "fullName": "vega.snapshot.v1.Payload",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "active_assets",
              "description": "",
              "label": "",
              "type": "ActiveAssets",
              "longType": "ActiveAssets",
              "fullType": "vega.snapshot.v1.ActiveAssets",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "pending_assets",
              "description": "",
              "label": "",
              "type": "PendingAssets",
              "longType": "PendingAssets",
              "fullType": "vega.snapshot.v1.PendingAssets",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "banking_withdrawals",
              "description": "",
              "label": "",
              "type": "BankingWithdrawals",
              "longType": "BankingWithdrawals",
              "fullType": "vega.snapshot.v1.BankingWithdrawals",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "banking_deposits",
              "description": "",
              "label": "",
              "type": "BankingDeposits",
              "longType": "BankingDeposits",
              "fullType": "vega.snapshot.v1.BankingDeposits",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "banking_seen",
              "description": "",
              "label": "",
              "type": "BankingSeen",
              "longType": "BankingSeen",
              "fullType": "vega.snapshot.v1.BankingSeen",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "banking_asset_actions",
              "description": "",
              "label": "",
              "type": "BankingAssetActions",
              "longType": "BankingAssetActions",
              "fullType": "vega.snapshot.v1.BankingAssetActions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "checkpoint",
              "description": "",
              "label": "",
              "type": "Checkpoint",
              "longType": "Checkpoint",
              "fullType": "vega.snapshot.v1.Checkpoint",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "collateral_accounts",
              "description": "",
              "label": "",
              "type": "CollateralAccounts",
              "longType": "CollateralAccounts",
              "fullType": "vega.snapshot.v1.CollateralAccounts",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "collateral_assets",
              "description": "",
              "label": "",
              "type": "CollateralAssets",
              "longType": "CollateralAssets",
              "fullType": "vega.snapshot.v1.CollateralAssets",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "delegation_active",
              "description": "",
              "label": "",
              "type": "DelegationActive",
              "longType": "DelegationActive",
              "fullType": "vega.snapshot.v1.DelegationActive",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "delegation_pending",
              "description": "",
              "label": "",
              "type": "DelegationPending",
              "longType": "DelegationPending",
              "fullType": "vega.snapshot.v1.DelegationPending",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "delegation_auto",
              "description": "",
              "label": "",
              "type": "DelegationAuto",
              "longType": "DelegationAuto",
              "fullType": "vega.snapshot.v1.DelegationAuto",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "governance_active",
              "description": "",
              "label": "",
              "type": "GovernanceActive",
              "longType": "GovernanceActive",
              "fullType": "vega.snapshot.v1.GovernanceActive",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "governance_enacted",
              "description": "",
              "label": "",
              "type": "GovernanceEnacted",
              "longType": "GovernanceEnacted",
              "fullType": "vega.snapshot.v1.GovernanceEnacted",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "staking_accounts",
              "description": "",
              "label": "",
              "type": "StakingAccounts",
              "longType": "StakingAccounts",
              "fullType": "vega.snapshot.v1.StakingAccounts",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "matching_book",
              "description": "",
              "label": "",
              "type": "MatchingBook",
              "longType": "MatchingBook",
              "fullType": "vega.snapshot.v1.MatchingBook",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "network_parameters",
              "description": "",
              "label": "",
              "type": "NetParams",
              "longType": "NetParams",
              "fullType": "vega.snapshot.v1.NetParams",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "execution_markets",
              "description": "",
              "label": "",
              "type": "ExecutionMarkets",
              "longType": "ExecutionMarkets",
              "fullType": "vega.snapshot.v1.ExecutionMarkets",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "market_positions",
              "description": "",
              "label": "",
              "type": "MarketPositions",
              "longType": "MarketPositions",
              "fullType": "vega.snapshot.v1.MarketPositions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "app_state",
              "description": "",
              "label": "",
              "type": "AppState",
              "longType": "AppState",
              "fullType": "vega.snapshot.v1.AppState",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "",
              "label": "",
              "type": "EpochState",
              "longType": "EpochState",
              "fullType": "vega.snapshot.v1.EpochState",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "rewards_pending_payouts",
              "description": "",
              "label": "",
              "type": "RewardsPendingPayouts",
              "longType": "RewardsPendingPayouts",
              "fullType": "vega.snapshot.v1.RewardsPendingPayouts",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "governance_node",
              "description": "",
              "label": "",
              "type": "GovernanceNode",
              "longType": "GovernanceNode",
              "fullType": "vega.snapshot.v1.GovernanceNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "limit_state",
              "description": "",
              "label": "",
              "type": "LimitState",
              "longType": "LimitState",
              "fullType": "vega.snapshot.v1.LimitState",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "vote_spam_policy",
              "description": "",
              "label": "",
              "type": "VoteSpamPolicy",
              "longType": "VoteSpamPolicy",
              "fullType": "vega.snapshot.v1.VoteSpamPolicy",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "simple_spam_policy",
              "description": "",
              "label": "",
              "type": "SimpleSpamPolicy",
              "longType": "SimpleSpamPolicy",
              "fullType": "vega.snapshot.v1.SimpleSpamPolicy",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "notary",
              "description": "",
              "label": "",
              "type": "Notary",
              "longType": "Notary",
              "fullType": "vega.snapshot.v1.Notary",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "replay_protection",
              "description": "",
              "label": "",
              "type": "ReplayProtection",
              "longType": "ReplayProtection",
              "fullType": "vega.snapshot.v1.ReplayProtection",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "future_state",
              "description": "",
              "label": "",
              "type": "FutureState",
              "longType": "FutureState",
              "fullType": "vega.snapshot.v1.FutureState",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "event_forwarder",
              "description": "",
              "label": "",
              "type": "EventForwarder",
              "longType": "EventForwarder",
              "fullType": "vega.snapshot.v1.EventForwarder",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "stake_verifier_deposited",
              "description": "",
              "label": "",
              "type": "StakeVerifierDeposited",
              "longType": "StakeVerifierDeposited",
              "fullType": "vega.snapshot.v1.StakeVerifierDeposited",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "stake_verifier_removed",
              "description": "",
              "label": "",
              "type": "StakeVerifierRemoved",
              "longType": "StakeVerifierRemoved",
              "fullType": "vega.snapshot.v1.StakeVerifierRemoved",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "witness",
              "description": "",
              "label": "",
              "type": "Witness",
              "longType": "Witness",
              "fullType": "vega.snapshot.v1.Witness",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "delegation_last_reconciliation_time",
              "description": "",
              "label": "",
              "type": "DelegationLastReconciliationTime",
              "longType": "DelegationLastReconciliationTime",
              "fullType": "vega.snapshot.v1.DelegationLastReconciliationTime",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "topology",
              "description": "",
              "label": "",
              "type": "Topology",
              "longType": "Topology",
              "fullType": "vega.snapshot.v1.Topology",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "oracle_data",
              "description": "",
              "label": "",
              "type": "OracleDataBatch",
              "longType": "OracleDataBatch",
              "fullType": "vega.snapshot.v1.OracleDataBatch",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_parameters",
              "description": "",
              "label": "",
              "type": "LiquidityParameters",
              "longType": "LiquidityParameters",
              "fullType": "vega.snapshot.v1.LiquidityParameters",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_pending_provisions",
              "description": "",
              "label": "",
              "type": "LiquidityPendingProvisions",
              "longType": "LiquidityPendingProvisions",
              "fullType": "vega.snapshot.v1.LiquidityPendingProvisions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_parties_liquidity_orders",
              "description": "",
              "label": "",
              "type": "LiquidityPartiesLiquidityOrders",
              "longType": "LiquidityPartiesLiquidityOrders",
              "fullType": "vega.snapshot.v1.LiquidityPartiesLiquidityOrders",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_parties_orders",
              "description": "",
              "label": "",
              "type": "LiquidityPartiesOrders",
              "longType": "LiquidityPartiesOrders",
              "fullType": "vega.snapshot.v1.LiquidityPartiesOrders",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provisions",
              "description": "",
              "label": "",
              "type": "LiquidityProvisions",
              "longType": "LiquidityProvisions",
              "fullType": "vega.snapshot.v1.LiquidityProvisions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_supplied",
              "description": "",
              "label": "",
              "type": "LiquiditySupplied",
              "longType": "LiquiditySupplied",
              "fullType": "vega.snapshot.v1.LiquiditySupplied",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "liquidity_target",
              "description": "",
              "label": "",
              "type": "LiquidityTarget",
              "longType": "LiquidityTarget",
              "fullType": "vega.snapshot.v1.LiquidityTarget",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "floating_point_consensus",
              "description": "",
              "label": "",
              "type": "FloatingPointConsensus",
              "longType": "FloatingPointConsensus",
              "fullType": "vega.snapshot.v1.FloatingPointConsensus",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "market_tracker",
              "description": "",
              "label": "",
              "type": "MarketTracker",
              "longType": "MarketTracker",
              "fullType": "vega.snapshot.v1.MarketTracker",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "banking_recurring_transfers",
              "description": "",
              "label": "",
              "type": "BankingRecurringTransfers",
              "longType": "BankingRecurringTransfers",
              "fullType": "vega.snapshot.v1.BankingRecurringTransfers",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "banking_scheduled_transfers",
              "description": "",
              "label": "",
              "type": "BankingScheduledTransfers",
              "longType": "BankingScheduledTransfers",
              "fullType": "vega.snapshot.v1.BankingScheduledTransfers",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig_topology_verified",
              "description": "",
              "label": "",
              "type": "ERC20MultiSigTopologyVerified",
              "longType": "ERC20MultiSigTopologyVerified",
              "fullType": "vega.snapshot.v1.ERC20MultiSigTopologyVerified",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig_topology_pending",
              "description": "",
              "label": "",
              "type": "ERC20MultiSigTopologyPending",
              "longType": "ERC20MultiSigTopologyPending",
              "fullType": "vega.snapshot.v1.ERC20MultiSigTopologyPending",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "proof_of_work",
              "description": "",
              "label": "",
              "type": "ProofOfWork",
              "longType": "ProofOfWork",
              "fullType": "vega.snapshot.v1.ProofOfWork",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "pending_asset_updates",
              "description": "",
              "label": "",
              "type": "PendingAssetUpdates",
              "longType": "PendingAssetUpdates",
              "fullType": "vega.snapshot.v1.PendingAssetUpdates",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_proposals",
              "description": "",
              "label": "",
              "type": "ProtocolUpgradeProposals",
              "longType": "ProtocolUpgradeProposals",
              "fullType": "vega.snapshot.v1.ProtocolUpgradeProposals",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "data",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingAssetUpdates",
          "longName": "PendingAssetUpdates",
          "fullName": "vega.snapshot.v1.PendingAssetUpdates",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "assets",
              "description": "",
              "label": "repeated",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingAssets",
          "longName": "PendingAssets",
          "fullName": "vega.snapshot.v1.PendingAssets",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "assets",
              "description": "",
              "label": "repeated",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingEthereumKeyRotation",
          "longName": "PendingEthereumKeyRotation",
          "fullName": "vega.snapshot.v1.PendingEthereumKeyRotation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "block_height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingKeyRotation",
          "longName": "PendingKeyRotation",
          "fullName": "vega.snapshot.v1.PendingKeyRotation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "block_height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_pub_key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_pub_key_index",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PerformanceStats",
          "longName": "PerformanceStats",
          "fullName": "vega.snapshot.v1.PerformanceStats",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "validator_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proposed",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "elected",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "voted",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_height_voted",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_height_proposed",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_height_elected",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Position",
          "longName": "Position",
          "fullName": "vega.snapshot.v1.Position",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vw_buy_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vw_sell_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceBound",
          "longName": "PriceBound",
          "fullName": "vega.snapshot.v1.PriceBound",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "active",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "up_factor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "down_factor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trigger",
              "description": "",
              "label": "",
              "type": "PriceMonitoringTrigger",
              "longType": "vega.PriceMonitoringTrigger",
              "fullType": "vega.PriceMonitoringTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceMonitor",
          "longName": "PriceMonitor",
          "fullName": "vega.snapshot.v1.PriceMonitor",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "initialised",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fp_horizons",
              "description": "",
              "label": "repeated",
              "type": "DecimalMap",
              "longType": "DecimalMap",
              "fullType": "vega.snapshot.v1.DecimalMap",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "now",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "update",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bounds",
              "description": "",
              "label": "repeated",
              "type": "PriceBound",
              "longType": "PriceBound",
              "fullType": "vega.snapshot.v1.PriceBound",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_range_cache_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price_range_cache",
              "description": "",
              "label": "repeated",
              "type": "PriceRangeCache",
              "longType": "PriceRangeCache",
              "fullType": "vega.snapshot.v1.PriceRangeCache",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ref_price_cache_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ref_price_cache",
              "description": "",
              "label": "repeated",
              "type": "DecimalMap",
              "longType": "DecimalMap",
              "fullType": "vega.snapshot.v1.DecimalMap",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "prices_now",
              "description": "",
              "label": "repeated",
              "type": "CurrentPrice",
              "longType": "CurrentPrice",
              "fullType": "vega.snapshot.v1.CurrentPrice",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "prices_past",
              "description": "",
              "label": "repeated",
              "type": "PastPrice",
              "longType": "PastPrice",
              "fullType": "vega.snapshot.v1.PastPrice",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "consensus_reached",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceRange",
          "longName": "PriceRange",
          "fullName": "vega.snapshot.v1.PriceRange",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "min",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ref",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceRangeCache",
          "longName": "PriceRangeCache",
          "fullName": "vega.snapshot.v1.PriceRangeCache",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bound",
              "description": "",
              "label": "",
              "type": "PriceBound",
              "longType": "PriceBound",
              "fullType": "vega.snapshot.v1.PriceBound",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "range",
              "description": "",
              "label": "",
              "type": "PriceRange",
              "longType": "PriceRange",
              "fullType": "vega.snapshot.v1.PriceRange",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PriceVolume",
          "longName": "PriceVolume",
          "fullName": "vega.snapshot.v1.PriceVolume",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProofOfWork",
          "longName": "ProofOfWork",
          "fullName": "vega.snapshot.v1.ProofOfWork",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "block_height",
              "description": "",
              "label": "repeated",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_hash",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_at_height",
              "description": "",
              "label": "repeated",
              "type": "TransactionsAtHeight",
              "longType": "TransactionsAtHeight",
              "fullType": "vega.snapshot.v1.TransactionsAtHeight",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tid_at_height",
              "description": "",
              "label": "repeated",
              "type": "TransactionsAtHeight",
              "longType": "TransactionsAtHeight",
              "fullType": "vega.snapshot.v1.TransactionsAtHeight",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "banned",
              "description": "",
              "label": "repeated",
              "type": "BannedParty",
              "longType": "BannedParty",
              "fullType": "vega.snapshot.v1.BannedParty",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pow_params",
              "description": "",
              "label": "repeated",
              "type": "ProofOfWorkParams",
              "longType": "ProofOfWorkParams",
              "fullType": "vega.snapshot.v1.ProofOfWorkParams",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProofOfWorkParams",
          "longName": "ProofOfWorkParams",
          "fullName": "vega.snapshot.v1.ProofOfWorkParams",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "spam_pow_number_of_past_blocks",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_difficulty",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_hash_function",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_number_of_tx_per_block",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spam_pow_increasing_difficulty",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_block",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "until_block",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProposalData",
          "longName": "ProposalData",
          "fullName": "vega.snapshot.v1.ProposalData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal",
              "description": "",
              "label": "",
              "type": "Proposal",
              "longType": "vega.Proposal",
              "fullType": "vega.Proposal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "yes",
              "description": "",
              "label": "repeated",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "no",
              "description": "",
              "label": "repeated",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "invalid",
              "description": "",
              "label": "repeated",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProtocolUpgradeProposals",
          "longName": "ProtocolUpgradeProposals",
          "fullName": "vega.snapshot.v1.ProtocolUpgradeProposals",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "active_proposals",
              "description": "",
              "label": "repeated",
              "type": "ProtocolUpgradeEvent",
              "longType": "vega.events.v1.ProtocolUpgradeEvent",
              "fullType": "vega.events.v1.ProtocolUpgradeEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "accepted_proposal",
              "description": "",
              "label": "",
              "type": "AcceptedProtocolUpgradeProposal",
              "longType": "AcceptedProtocolUpgradeProposal",
              "fullType": "vega.snapshot.v1.AcceptedProtocolUpgradeProposal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReplayProtection",
          "longName": "ReplayProtection",
          "fullName": "vega.snapshot.v1.ReplayProtection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transactions",
              "description": "",
              "label": "repeated",
              "type": "TransactionAtHeight",
              "longType": "TransactionAtHeight",
              "fullType": "vega.snapshot.v1.TransactionAtHeight",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "back_tol",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "forward_tol",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Resource",
          "longName": "Resource",
          "fullName": "vega.snapshot.v1.Resource",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "check_until",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "votes",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardsPartyAmount",
          "longName": "RewardsPartyAmount",
          "fullName": "vega.snapshot.v1.RewardsPartyAmount",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardsPayout",
          "longName": "RewardsPayout",
          "fullName": "vega.snapshot.v1.RewardsPayout",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "from_account",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_party_amount",
              "description": "",
              "label": "repeated",
              "type": "RewardsPartyAmount",
              "longType": "RewardsPartyAmount",
              "fullType": "vega.snapshot.v1.RewardsPartyAmount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_reward",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardsPendingPayouts",
          "longName": "RewardsPendingPayouts",
          "fullName": "vega.snapshot.v1.RewardsPendingPayouts",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "scheduled_rewards_payout",
              "description": "",
              "label": "repeated",
              "type": "ScheduledRewardsPayout",
              "longType": "ScheduledRewardsPayout",
              "fullType": "vega.snapshot.v1.ScheduledRewardsPayout",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ScheduledRewardsPayout",
          "longName": "ScheduledRewardsPayout",
          "fullName": "vega.snapshot.v1.ScheduledRewardsPayout",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "payout_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rewards_payout",
              "description": "",
              "label": "repeated",
              "type": "RewardsPayout",
              "longType": "RewardsPayout",
              "fullType": "vega.snapshot.v1.RewardsPayout",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SignerEventsPerAddress",
          "longName": "SignerEventsPerAddress",
          "fullName": "vega.snapshot.v1.SignerEventsPerAddress",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "events",
              "description": "",
              "label": "repeated",
              "type": "ERC20MultiSigSignerEvent",
              "longType": "vega.events.v1.ERC20MultiSigSignerEvent",
              "fullType": "vega.events.v1.ERC20MultiSigSignerEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SimpleSpamPolicy",
          "longName": "SimpleSpamPolicy",
          "fullName": "vega.snapshot.v1.SimpleSpamPolicy",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "policy_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_to_count",
              "description": "",
              "label": "repeated",
              "type": "SpamPartyTransactionCount",
              "longType": "SpamPartyTransactionCount",
              "fullType": "vega.snapshot.v1.SpamPartyTransactionCount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "banned_parties",
              "description": "",
              "label": "repeated",
              "type": "BannedParty",
              "longType": "BannedParty",
              "fullType": "vega.snapshot.v1.BannedParty",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "token_balance",
              "description": "",
              "label": "repeated",
              "type": "PartyTokenBalance",
              "longType": "PartyTokenBalance",
              "fullType": "vega.snapshot.v1.PartyTokenBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_epoch_seq",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Snapshot",
          "longName": "Snapshot",
          "fullName": "vega.snapshot.v1.Snapshot",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "format",
              "description": "",
              "label": "",
              "type": "Format",
              "longType": "Format",
              "fullType": "vega.snapshot.v1.Format",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chunks",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SpamPartyTransactionCount",
          "longName": "SpamPartyTransactionCount",
          "fullName": "vega.snapshot.v1.SpamPartyTransactionCount",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "count",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeVerifierDeposited",
          "longName": "StakeVerifierDeposited",
          "fullName": "vega.snapshot.v1.StakeVerifierDeposited",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pending_deposited",
              "description": "",
              "label": "repeated",
              "type": "StakeVerifierPending",
              "longType": "StakeVerifierPending",
              "fullType": "vega.snapshot.v1.StakeVerifierPending",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeVerifierPending",
          "longName": "StakeVerifierPending",
          "fullName": "vega.snapshot.v1.StakeVerifierPending",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ethereum_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_public_key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_number",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_index",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeVerifierRemoved",
          "longName": "StakeVerifierRemoved",
          "fullName": "vega.snapshot.v1.StakeVerifierRemoved",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pending_removed",
              "description": "",
              "label": "repeated",
              "type": "StakeVerifierPending",
              "longType": "StakeVerifierPending",
              "fullType": "vega.snapshot.v1.StakeVerifierPending",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakingAccount",
          "longName": "StakingAccount",
          "fullName": "vega.snapshot.v1.StakingAccount",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "events",
              "description": "",
              "label": "repeated",
              "type": "StakeLinking",
              "longType": "vega.events.v1.StakeLinking",
              "fullType": "vega.events.v1.StakeLinking",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakingAccounts",
          "longName": "StakingAccounts",
          "fullName": "vega.snapshot.v1.StakingAccounts",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accounts",
              "description": "",
              "label": "repeated",
              "type": "StakingAccount",
              "longType": "StakingAccount",
              "fullType": "vega.snapshot.v1.StakingAccount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staking_asset_total_supply",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StateVarInternalState",
          "longName": "StateVarInternalState",
          "fullName": "vega.snapshot.v1.StateVarInternalState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "event_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validators_results",
              "description": "",
              "label": "repeated",
              "type": "FloatingPointValidatorResult",
              "longType": "FloatingPointValidatorResult",
              "fullType": "vega.snapshot.v1.FloatingPointValidatorResult",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rounds_since_meaningful_update",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TimePrice",
          "longName": "TimePrice",
          "fullName": "vega.snapshot.v1.TimePrice",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TimestampedOpenInterest",
          "longName": "TimestampedOpenInterest",
          "fullName": "vega.snapshot.v1.TimestampedOpenInterest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "open_interest",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Topology",
          "longName": "Topology",
          "fullName": "vega.snapshot.v1.Topology",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "validator_data",
              "description": "",
              "label": "repeated",
              "type": "ValidatorState",
              "longType": "ValidatorState",
              "fullType": "vega.snapshot.v1.ValidatorState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_keys",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_pub_key_rotations",
              "description": "",
              "label": "repeated",
              "type": "PendingKeyRotation",
              "longType": "PendingKeyRotation",
              "fullType": "vega.snapshot.v1.PendingKeyRotation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_performance",
              "description": "",
              "label": "",
              "type": "ValidatorPerformance",
              "longType": "ValidatorPerformance",
              "fullType": "vega.snapshot.v1.ValidatorPerformance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_ethereum_key_rotations",
              "description": "",
              "label": "repeated",
              "type": "PendingEthereumKeyRotation",
              "longType": "PendingEthereumKeyRotation",
              "fullType": "vega.snapshot.v1.PendingEthereumKeyRotation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionAtHeight",
          "longName": "TransactionAtHeight",
          "fullName": "vega.snapshot.v1.TransactionAtHeight",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tx",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionsAtHeight",
          "longName": "TransactionsAtHeight",
          "fullName": "vega.snapshot.v1.TransactionsAtHeight",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "transactions",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TxRef",
          "longName": "TxRef",
          "fullName": "vega.snapshot.v1.TxRef",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_nr",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_index",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorPerformance",
          "longName": "ValidatorPerformance",
          "fullName": "vega.snapshot.v1.ValidatorPerformance",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "validator_perf_stats",
              "description": "",
              "label": "repeated",
              "type": "PerformanceStats",
              "longType": "PerformanceStats",
              "fullType": "vega.snapshot.v1.PerformanceStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorState",
          "longName": "ValidatorState",
          "fullName": "vega.snapshot.v1.ValidatorState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "validator_update",
              "description": "",
              "label": "",
              "type": "ValidatorUpdate",
              "longType": "vega.events.v1.ValidatorUpdate",
              "fullType": "vega.events.v1.ValidatorUpdate",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_added",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status_change_block",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_block_with_positive_ranking",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "eth_events_forwarded",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "heartbeat_tracker",
              "description": "",
              "label": "",
              "type": "HeartbeatTracker",
              "longType": "HeartbeatTracker",
              "fullType": "vega.snapshot.v1.HeartbeatTracker",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_power",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ranking_score",
              "description": "",
              "label": "",
              "type": "RankingScore",
              "longType": "vega.RankingScore",
              "fullType": "vega.RankingScore",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VoteSpamPolicy",
          "longName": "VoteSpamPolicy",
          "fullName": "vega.snapshot.v1.VoteSpamPolicy",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_to_vote",
              "description": "",
              "label": "repeated",
              "type": "PartyProposalVoteCount",
              "longType": "PartyProposalVoteCount",
              "fullType": "vega.snapshot.v1.PartyProposalVoteCount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "banned_parties",
              "description": "",
              "label": "repeated",
              "type": "BannedParty",
              "longType": "BannedParty",
              "fullType": "vega.snapshot.v1.BannedParty",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "token_balance",
              "description": "",
              "label": "repeated",
              "type": "PartyTokenBalance",
              "longType": "PartyTokenBalance",
              "fullType": "vega.snapshot.v1.PartyTokenBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "recent_blocks_reject_stats",
              "description": "",
              "label": "repeated",
              "type": "BlockRejectStats",
              "longType": "BlockRejectStats",
              "fullType": "vega.snapshot.v1.BlockRejectStats",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_block_index",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_increase_block",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_epoch_seq",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "min_voting_tokens_factor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Withdrawal",
          "longName": "Withdrawal",
          "fullName": "vega.snapshot.v1.Withdrawal",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ref",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdrawal",
              "description": "",
              "label": "",
              "type": "Withdrawal",
              "longType": "vega.Withdrawal",
              "fullType": "vega.Withdrawal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Witness",
          "longName": "Witness",
          "fullName": "vega.snapshot.v1.Witness",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "resources",
              "description": "",
              "label": "repeated",
              "type": "Resource",
              "longType": "Resource",
              "fullType": "vega.snapshot.v1.Resource",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "need_resend_resources",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/events/v1/events.proto",
      "description": "",
      "package": "vega.events.v1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "BusEventType",
          "longName": "BusEventType",
          "fullName": "vega.events.v1.BusEventType",
          "description": "An (event) bus event type is used to specify a type of event\nIt has 2 styles of event:\nSingle values (e.g. BUS_EVENT_TYPE_ORDER) where they represent one data item\nGroup values (e.g. BUS_EVENT_TYPE_AUCTION) where they represent a group of data items",
          "values": [
            {
              "name": "BUS_EVENT_TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value, always invalid"
            },
            {
              "name": "BUS_EVENT_TYPE_ALL",
              "number": "1",
              "description": "Events of ALL event types, used when filtering stream from event bus"
            },
            {
              "name": "BUS_EVENT_TYPE_TIME_UPDATE",
              "number": "2",
              "description": "Event for blockchain time updates"
            },
            {
              "name": "BUS_EVENT_TYPE_TRANSFER_RESPONSES",
              "number": "3",
              "description": "Event for when a transfer happens internally, contains the transfer information"
            },
            {
              "name": "BUS_EVENT_TYPE_POSITION_RESOLUTION",
              "number": "4",
              "description": "Event indicating position resolution has occurred"
            },
            {
              "name": "BUS_EVENT_TYPE_ORDER",
              "number": "5",
              "description": "Event for order updates, both new and existing orders"
            },
            {
              "name": "BUS_EVENT_TYPE_ACCOUNT",
              "number": "6",
              "description": "Event for account updates"
            },
            {
              "name": "BUS_EVENT_TYPE_PARTY",
              "number": "7",
              "description": "Event for party updates"
            },
            {
              "name": "BUS_EVENT_TYPE_TRADE",
              "number": "8",
              "description": "Event indicating a new trade has occurred"
            },
            {
              "name": "BUS_EVENT_TYPE_MARGIN_LEVELS",
              "number": "9",
              "description": "Event indicating margin levels have changed for a party"
            },
            {
              "name": "BUS_EVENT_TYPE_PROPOSAL",
              "number": "10",
              "description": "Event for proposal updates (for governance)"
            },
            {
              "name": "BUS_EVENT_TYPE_VOTE",
              "number": "11",
              "description": "Event indicating a new vote has occurred (for governance)"
            },
            {
              "name": "BUS_EVENT_TYPE_MARKET_DATA",
              "number": "12",
              "description": "Event for market data updates"
            },
            {
              "name": "BUS_EVENT_TYPE_NODE_SIGNATURE",
              "number": "13",
              "description": "Event for a new signature for a Vega node"
            },
            {
              "name": "BUS_EVENT_TYPE_LOSS_SOCIALIZATION",
              "number": "14",
              "description": "Event indicating loss socialisation occurred for a party"
            },
            {
              "name": "BUS_EVENT_TYPE_SETTLE_POSITION",
              "number": "15",
              "description": "Event for when a position is being settled"
            },
            {
              "name": "BUS_EVENT_TYPE_SETTLE_DISTRESSED",
              "number": "16",
              "description": "Event for when a position is distressed"
            },
            {
              "name": "BUS_EVENT_TYPE_MARKET_CREATED",
              "number": "17",
              "description": "Event indicating a new market was created"
            },
            {
              "name": "BUS_EVENT_TYPE_ASSET",
              "number": "18",
              "description": "Event for when an asset is added to Vega"
            },
            {
              "name": "BUS_EVENT_TYPE_MARKET_TICK",
              "number": "19",
              "description": "Event indicating a market tick event"
            },
            {
              "name": "BUS_EVENT_TYPE_WITHDRAWAL",
              "number": "20",
              "description": "Event for when a withdrawal occurs"
            },
            {
              "name": "BUS_EVENT_TYPE_DEPOSIT",
              "number": "21",
              "description": "Event for when a deposit occurs"
            },
            {
              "name": "BUS_EVENT_TYPE_AUCTION",
              "number": "22",
              "description": "Event indicating a change in auction state, for example starting or ending an auction"
            },
            {
              "name": "BUS_EVENT_TYPE_RISK_FACTOR",
              "number": "23",
              "description": "Event indicating a risk factor has been updated"
            },
            {
              "name": "BUS_EVENT_TYPE_NETWORK_PARAMETER",
              "number": "24",
              "description": "Event indicating a network parameter has been added or updated"
            },
            {
              "name": "BUS_EVENT_TYPE_LIQUIDITY_PROVISION",
              "number": "25",
              "description": "Event indicating a liquidity provision has been created or updated"
            },
            {
              "name": "BUS_EVENT_TYPE_MARKET_UPDATED",
              "number": "26",
              "description": "Event indicating a new market was created"
            },
            {
              "name": "BUS_EVENT_TYPE_ORACLE_SPEC",
              "number": "27",
              "description": "Event indicating an oracle spec has been created or updated"
            },
            {
              "name": "BUS_EVENT_TYPE_ORACLE_DATA",
              "number": "28",
              "description": "Event indicating that an oracle data has been broadcast"
            },
            {
              "name": "BUS_EVENT_TYPE_DELEGATION_BALANCE",
              "number": "29",
              "description": "Event indicating that an delegation balance of a party to a node for current epoch has changed"
            },
            {
              "name": "BUS_EVENT_TYPE_VALIDATOR_SCORE",
              "number": "30",
              "description": "Event indicating the validator score for the given epoch"
            },
            {
              "name": "BUS_EVENT_TYPE_EPOCH_UPDATE",
              "number": "31",
              "description": "Event indicating the start or end of an epoch"
            },
            {
              "name": "BUS_EVENT_TYPE_VALIDATOR_UPDATE",
              "number": "32",
              "description": "Event indicating that validator node has been updated"
            },
            {
              "name": "BUS_EVENT_TYPE_STAKE_LINKING",
              "number": "33",
              "description": "Event indicating a new staking event have been processed by the network"
            },
            {
              "name": "BUS_EVENT_TYPE_REWARD_PAYOUT_EVENT",
              "number": "34",
              "description": "Event indicating the payout of a reward has been initiated"
            },
            {
              "name": "BUS_EVENT_TYPE_CHECKPOINT",
              "number": "35",
              "description": "Event indicating a new checkpoint was created"
            },
            {
              "name": "BUS_EVENT_TYPE_STREAM_START",
              "number": "36",
              "description": "Event indicating stream is starting"
            },
            {
              "name": "BUS_EVENT_TYPE_KEY_ROTATION",
              "number": "37",
              "description": "Event indicating key rotation took place"
            },
            {
              "name": "BUS_EVENT_TYPE_STATE_VAR",
              "number": "38",
              "description": "Event indicating state transitions in state variable consensus"
            },
            {
              "name": "BUS_EVENT_TYPE_NETWORK_LIMITS",
              "number": "39",
              "description": "Event indicating network limits set or updated"
            },
            {
              "name": "BUS_EVENT_TYPE_TRANSFER",
              "number": "40",
              "description": "Event indicating a update for a transfert"
            },
            {
              "name": "BUS_EVENT_TYPE_VALIDATOR_RANKING",
              "number": "41",
              "description": "Event indicating the ranking of validator and their status in vega"
            },
            {
              "name": "BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_EVENT",
              "number": "42",
              "description": "Event indicating a new multi sig signer event have been processed"
            },
            {
              "name": "BUS_EVENT_TYPE_ERC20_MULTI_SIG_SET_THRESHOLD",
              "number": "43",
              "description": "Event indicating the erc20 multi sig threshold have been updated"
            },
            {
              "name": "BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_ADDED",
              "number": "44",
              "description": "Event indicating a new signer has been added to the erc20 multisig"
            },
            {
              "name": "BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_REMOVED",
              "number": "45",
              "description": "Event indicating a signer has been removed from the erc20 multisig"
            },
            {
              "name": "BUS_EVENT_TYPE_POSITION_STATE",
              "number": "46",
              "description": "Event indicting that a party's position has changed"
            },
            {
              "name": "BUS_EVENT_TYPE_ETHEREUM_KEY_ROTATION",
              "number": "47",
              "description": "Event indicating Ethereum key rotation took place"
            },
            {
              "name": "BUS_EVENT_TYPE_PROTOCOL_UPGRADE_PROPOSAL",
              "number": "48",
              "description": "Event indicating protocol upgrade proposal updates"
            },
            {
              "name": "BUS_EVENT_TYPE_MARKET",
              "number": "101",
              "description": "Event indicating a market related event, for example when a market opens"
            },
            {
              "name": "BUS_EVENT_TYPE_TX_ERROR",
              "number": "201",
              "description": "Event used to report failed transactions back to a user, this is excluded from the ALL type"
            }
          ]
        },
        {
          "name": "Type",
          "longName": "ERC20MultiSigSignerEvent.Type",
          "fullName": "vega.events.v1.ERC20MultiSigSignerEvent.Type",
          "description": "",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "TYPE_ADDED",
              "number": "1",
              "description": ""
            },
            {
              "name": "TYPE_REMOVED",
              "number": "2",
              "description": ""
            }
          ]
        },
        {
          "name": "ProtocolUpgradeProposalStatus",
          "longName": "ProtocolUpgradeProposalStatus",
          "fullName": "vega.events.v1.ProtocolUpgradeProposalStatus",
          "description": "",
          "values": [
            {
              "name": "PROTOCOL_UPGRADE_PROPOSAL_STATUS_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "PROTOCOL_UPGRADE_PROPOSAL_STATUS_PENDING",
              "number": "1",
              "description": "The proposal is pending"
            },
            {
              "name": "PROTOCOL_UPGRADE_PROPOSAL_STATUS_APPROVED",
              "number": "2",
              "description": "The proposal is approved"
            },
            {
              "name": "PROTOCOL_UPGRADE_PROPOSAL_STATUS_REJECTED",
              "number": "3",
              "description": "The proposal is rejected"
            }
          ]
        },
        {
          "name": "Status",
          "longName": "StakeLinking.Status",
          "fullName": "vega.events.v1.StakeLinking.Status",
          "description": "",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "STATUS_PENDING",
              "number": "1",
              "description": "Indicate an event waiting for confirmation from the vega network"
            },
            {
              "name": "STATUS_ACCEPTED",
              "number": "2",
              "description": "Indicate of an event accepted by the vega network"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "3",
              "description": "Indaicate of an event rejected by the vega network"
            }
          ]
        },
        {
          "name": "Type",
          "longName": "StakeLinking.Type",
          "fullName": "vega.events.v1.StakeLinking.Type",
          "description": "",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "TYPE_LINK",
              "number": "1",
              "description": "Indicate of a stake deposit instruction"
            },
            {
              "name": "TYPE_UNLINK",
              "number": "2",
              "description": "Indicate of a stake remove instruction"
            }
          ]
        },
        {
          "name": "Status",
          "longName": "Transfer.Status",
          "fullName": "vega.events.v1.Transfer.Status",
          "description": "",
          "values": [
            {
              "name": "STATUS_UNSPECIFIED",
              "number": "0",
              "description": "Default value"
            },
            {
              "name": "STATUS_PENDING",
              "number": "1",
              "description": "Indicate a transfer still being processed"
            },
            {
              "name": "STATUS_DONE",
              "number": "2",
              "description": "Indicate of an transfer accepted by the vega network"
            },
            {
              "name": "STATUS_REJECTED",
              "number": "3",
              "description": "Indicate of an transfer rejected by the vega network"
            },
            {
              "name": "STATUS_STOPPED",
              "number": "4",
              "description": "Indicate of a transfer stopped by the vega network\ne.g: no funds left to cover the transfer"
            },
            {
              "name": "STATUS_CANCELLED",
              "number": "5",
              "description": "Indicate of a transfer cancel by the user"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AuctionEvent",
          "longName": "AuctionEvent",
          "fullName": "vega.events.v1.AuctionEvent",
          "description": "An auction event indicating a change in auction state, for example starting or ending an auction",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "opening_auction",
              "description": "True if the event indicates an auction opening and False otherwise",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "leave",
              "description": "True if the event indicates leaving auction mode and False otherwise",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start",
              "description": "Timestamp containing the start time for an auction",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end",
              "description": "Timestamp containing the end time for an auction",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trigger",
              "description": "the reason this market is/was in auction",
              "label": "",
              "type": "AuctionTrigger",
              "longType": "vega.AuctionTrigger",
              "fullType": "vega.AuctionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "extension_trigger",
              "description": "If an auction was ongoing, but was extended for whatever reason, this field will\nbe set to the trigger type indicating which component extended the auction",
              "label": "",
              "type": "AuctionTrigger",
              "longType": "vega.AuctionTrigger",
              "fullType": "vega.AuctionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BusEvent",
          "longName": "BusEvent",
          "fullName": "vega.events.v1.BusEvent",
          "description": "A bus event is a container for event bus events emitted by Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "A unique event identifier for the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block",
              "description": "The batch (or block) of transactions that the events relate to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "The type of bus event (one of the list below)",
              "label": "",
              "type": "BusEventType",
              "longType": "BusEventType",
              "fullType": "vega.events.v1.BusEventType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time_update",
              "description": "Time update events - See [TimeUpdate](#vega.TimeUpdate)",
              "label": "",
              "type": "TimeUpdate",
              "longType": "TimeUpdate",
              "fullType": "vega.events.v1.TimeUpdate",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "transfer_responses",
              "description": "Transfer responses update events - See [TransferResponses](#vega.TransferResponses)",
              "label": "",
              "type": "TransferResponses",
              "longType": "TransferResponses",
              "fullType": "vega.events.v1.TransferResponses",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "position_resolution",
              "description": "Position resolution events - See [PositionResolution](#vega.PositionResolution)",
              "label": "",
              "type": "PositionResolution",
              "longType": "PositionResolution",
              "fullType": "vega.events.v1.PositionResolution",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "order",
              "description": "Order events",
              "label": "",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "account",
              "description": "Account events",
              "label": "",
              "type": "Account",
              "longType": "vega.Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "party",
              "description": "Party events",
              "label": "",
              "type": "Party",
              "longType": "vega.Party",
              "fullType": "vega.Party",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "trade",
              "description": "Trade events",
              "label": "",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "margin_levels",
              "description": "Margin level update events",
              "label": "",
              "type": "MarginLevels",
              "longType": "vega.MarginLevels",
              "fullType": "vega.MarginLevels",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "proposal",
              "description": "Proposal events (for governance)",
              "label": "",
              "type": "Proposal",
              "longType": "vega.Proposal",
              "fullType": "vega.Proposal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "vote",
              "description": "Vote events (for governance)",
              "label": "",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "market_data",
              "description": "Market data events",
              "label": "",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "node_signature",
              "description": "Node signature events",
              "label": "",
              "type": "NodeSignature",
              "longType": "vega.commands.v1.NodeSignature",
              "fullType": "vega.commands.v1.NodeSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "loss_socialization",
              "description": "Loss socialization events - See [LossSocialization](#vega.LossSocialization)",
              "label": "",
              "type": "LossSocialization",
              "longType": "LossSocialization",
              "fullType": "vega.events.v1.LossSocialization",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "settle_position",
              "description": "Position settlement events - See [SettlePosition](#vega.SettlePosition)",
              "label": "",
              "type": "SettlePosition",
              "longType": "SettlePosition",
              "fullType": "vega.events.v1.SettlePosition",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "settle_distressed",
              "description": "Position distressed events - See [SettleDistressed](#vega.SettleDistressed)",
              "label": "",
              "type": "SettleDistressed",
              "longType": "SettleDistressed",
              "fullType": "vega.events.v1.SettleDistressed",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "market_created",
              "description": "Market created events",
              "label": "",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset events",
              "label": "",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "market_tick",
              "description": "Market tick events - See [MarketTick](#vega.MarketTick)",
              "label": "",
              "type": "MarketTick",
              "longType": "MarketTick",
              "fullType": "vega.events.v1.MarketTick",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "withdrawal",
              "description": "Withdrawal events",
              "label": "",
              "type": "Withdrawal",
              "longType": "vega.Withdrawal",
              "fullType": "vega.Withdrawal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "deposit",
              "description": "Deposit events",
              "label": "",
              "type": "Deposit",
              "longType": "vega.Deposit",
              "fullType": "vega.Deposit",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "auction",
              "description": "Auction events - See [AuctionEvent](#vega.AuctionEvent)",
              "label": "",
              "type": "AuctionEvent",
              "longType": "AuctionEvent",
              "fullType": "vega.events.v1.AuctionEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "risk_factor",
              "description": "Risk factor events",
              "label": "",
              "type": "RiskFactor",
              "longType": "vega.RiskFactor",
              "fullType": "vega.RiskFactor",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "network_parameter",
              "description": "Network parameter events",
              "label": "",
              "type": "NetworkParameter",
              "longType": "vega.NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision",
              "description": "LiquidityProvision  events",
              "label": "",
              "type": "LiquidityProvision",
              "longType": "vega.LiquidityProvision",
              "fullType": "vega.LiquidityProvision",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "market_updated",
              "description": "Market created events",
              "label": "",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "oracle_spec",
              "description": "OracleSpec events",
              "label": "",
              "type": "OracleSpec",
              "longType": "oracles.v1.OracleSpec",
              "fullType": "oracles.v1.OracleSpec",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "oracle_data",
              "description": "OracleData events",
              "label": "",
              "type": "OracleData",
              "longType": "oracles.v1.OracleData",
              "fullType": "oracles.v1.OracleData",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "delegation_balance",
              "description": "Delegation balance events",
              "label": "",
              "type": "DelegationBalanceEvent",
              "longType": "DelegationBalanceEvent",
              "fullType": "vega.events.v1.DelegationBalanceEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "validator_score",
              "description": "Validator score calculated",
              "label": "",
              "type": "ValidatorScoreEvent",
              "longType": "ValidatorScoreEvent",
              "fullType": "vega.events.v1.ValidatorScoreEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "epoch_event",
              "description": "Epoch update events - See [Epoch](#vega.Epoch)",
              "label": "",
              "type": "EpochEvent",
              "longType": "EpochEvent",
              "fullType": "vega.events.v1.EpochEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "validator_update",
              "description": "Validator update events",
              "label": "",
              "type": "ValidatorUpdate",
              "longType": "ValidatorUpdate",
              "fullType": "vega.events.v1.ValidatorUpdate",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "stake_linking",
              "description": "Staking event",
              "label": "",
              "type": "StakeLinking",
              "longType": "StakeLinking",
              "fullType": "vega.events.v1.StakeLinking",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "reward_payout",
              "description": "Reward payout event",
              "label": "",
              "type": "RewardPayoutEvent",
              "longType": "RewardPayoutEvent",
              "fullType": "vega.events.v1.RewardPayoutEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "checkpoint",
              "description": "Checkpoint was created",
              "label": "",
              "type": "CheckpointEvent",
              "longType": "CheckpointEvent",
              "fullType": "vega.events.v1.CheckpointEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "key_rotation",
              "description": "Key rotation took place",
              "label": "",
              "type": "KeyRotation",
              "longType": "KeyRotation",
              "fullType": "vega.events.v1.KeyRotation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "state_var",
              "description": "State variable consensus state transition update",
              "label": "",
              "type": "StateVar",
              "longType": "StateVar",
              "fullType": "vega.events.v1.StateVar",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "network_limits",
              "description": "Network limits events",
              "label": "",
              "type": "NetworkLimits",
              "longType": "vega.NetworkLimits",
              "fullType": "vega.NetworkLimits",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "transfer",
              "description": "Transfer event",
              "label": "",
              "type": "Transfer",
              "longType": "Transfer",
              "fullType": "vega.events.v1.Transfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "ranking_event",
              "description": "Ranking event",
              "label": "",
              "type": "ValidatorRankingEvent",
              "longType": "ValidatorRankingEvent",
              "fullType": "vega.events.v1.ValidatorRankingEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig_signer_event",
              "description": "ERC20 multi sig signer event",
              "label": "",
              "type": "ERC20MultiSigSignerEvent",
              "longType": "ERC20MultiSigSignerEvent",
              "fullType": "vega.events.v1.ERC20MultiSigSignerEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig_set_threshold_event",
              "description": "ERC20 multi sig set threshold event",
              "label": "",
              "type": "ERC20MultiSigThresholdSetEvent",
              "longType": "ERC20MultiSigThresholdSetEvent",
              "fullType": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig_signer_added",
              "description": "ERC20 multi sig signer added",
              "label": "",
              "type": "ERC20MultiSigSignerAdded",
              "longType": "ERC20MultiSigSignerAdded",
              "fullType": "vega.events.v1.ERC20MultiSigSignerAdded",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "erc20_multisig_signer_removed",
              "description": "ERC20 multi sig signer removed",
              "label": "",
              "type": "ERC20MultiSigSignerRemoved",
              "longType": "ERC20MultiSigSignerRemoved",
              "fullType": "vega.events.v1.ERC20MultiSigSignerRemoved",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "position_state_event",
              "description": "Position status for a party in a market",
              "label": "",
              "type": "PositionStateEvent",
              "longType": "PositionStateEvent",
              "fullType": "vega.events.v1.PositionStateEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "ethereum_key_rotation",
              "description": "Ethereum key rotation took place",
              "label": "",
              "type": "EthereumKeyRotation",
              "longType": "EthereumKeyRotation",
              "fullType": "vega.events.v1.EthereumKeyRotation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_event",
              "description": "Protocol upgrade proposal updates",
              "label": "",
              "type": "ProtocolUpgradeEvent",
              "longType": "ProtocolUpgradeEvent",
              "fullType": "vega.events.v1.ProtocolUpgradeEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "market",
              "description": "Market tick events - See [MarketEvent](#vega.MarketEvent)",
              "label": "",
              "type": "MarketEvent",
              "longType": "MarketEvent",
              "fullType": "vega.events.v1.MarketEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "tx_err_event",
              "description": "Transaction error events, not included in the ALL event type",
              "label": "",
              "type": "TxErrorEvent",
              "longType": "TxErrorEvent",
              "fullType": "vega.events.v1.TxErrorEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of bus event",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "chain_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckpointEvent",
          "longName": "CheckpointEvent",
          "fullName": "vega.events.v1.CheckpointEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationBalanceEvent",
          "longName": "DelegationBalanceEvent",
          "fullName": "vega.events.v1.DelegationBalanceEvent",
          "description": "DelegationBalanceEvent - updates on the delegation balance of a party to a node in the current epoch in effect",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MulistSigSignerRemovedSubmitter",
          "longName": "ERC20MulistSigSignerRemovedSubmitter",
          "fullName": "vega.events.v1.ERC20MulistSigSignerRemovedSubmitter",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signature_id",
              "description": "The ID of this signature bundle",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter",
              "description": "The address of the submitter of the transaction",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerAdded",
          "longName": "ERC20MultiSigSignerAdded",
          "fullName": "vega.events.v1.ERC20MultiSigSignerAdded",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signature_id",
              "description": "The identifier of the signature bundle",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_id",
              "description": "The vega node ID of the node to be added",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "the time at which this happened",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_signer",
              "description": "The ethereum address of the new signer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter",
              "description": "The address of the submitter of the transaction",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "The nonce used.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "The epoch that the node was added for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerEvent",
          "longName": "ERC20MultiSigSignerEvent",
          "fullName": "vega.events.v1.ERC20MultiSigSignerEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "",
              "label": "",
              "type": "Type",
              "longType": "ERC20MultiSigSignerEvent.Type",
              "fullType": "vega.events.v1.ERC20MultiSigSignerEvent.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_index",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_number",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerRemoved",
          "longName": "ERC20MultiSigSignerRemoved",
          "fullName": "vega.events.v1.ERC20MultiSigSignerRemoved",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signature_submitters",
              "description": "A list containing all the IDs of bundle generated\nThere should be one bundle generated for every validators\nin the validator set",
              "label": "repeated",
              "type": "ERC20MulistSigSignerRemovedSubmitter",
              "longType": "ERC20MulistSigSignerRemovedSubmitter",
              "fullType": "vega.events.v1.ERC20MulistSigSignerRemovedSubmitter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_id",
              "description": "The vega node ID of the node which is to be removed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "the time at which this happened",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "old_signer",
              "description": "The ethereum address of the signer to be removed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "The nonce used.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "The epoch that the node was removed for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigThresholdSetEvent",
          "longName": "ERC20MultiSigThresholdSetEvent",
          "fullName": "vega.events.v1.ERC20MultiSigThresholdSetEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_threshold",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_index",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_number",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochEvent",
          "longName": "EpochEvent",
          "fullName": "vega.events.v1.EpochEvent",
          "description": "Epoch details",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "seq",
              "description": "Sequence number that increases by one each epoch",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "action",
              "description": "Action tells us what action is taking place",
              "label": "",
              "type": "EpochAction",
              "longType": "vega.EpochAction",
              "fullType": "vega.EpochAction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_time",
              "description": "What time did this epoch start",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expire_time",
              "description": "What time should this epoch end",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_time",
              "description": "What time did it actually end",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EthereumKeyRotation",
          "longName": "EthereumKeyRotation",
          "fullName": "vega.events.v1.EthereumKeyRotation",
          "description": "An Ethereum key rotation events contains information about Ethereum key rotation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Node id of the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "old_address",
              "description": "Old Ethereum address of validator node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_address",
              "description": "New Ethereum address of validator node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "Height of the block where key rotation took effect",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "KeyRotation",
          "longName": "KeyRotation",
          "fullName": "vega.events.v1.KeyRotation",
          "description": "A key rotation events contains information about Vega key rotation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Node id of the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "old_pub_key",
              "description": "Old Vega public key of validator node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_pub_key",
              "description": "New Vega public key of validator node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "Height of the block where key rotation took effect",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LossSocialization",
          "longName": "LossSocialization",
          "fullName": "vega.events.v1.LossSocialization",
          "description": "A loss socialization event contains details on the amount of wins unable to be distributed",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier (public key) for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "Amount distributed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketEvent",
          "longName": "MarketEvent",
          "fullName": "vega.events.v1.MarketEvent",
          "description": "MarketEvent - the common denominator for all market events\ninterface has a method to return a string for logging",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "payload",
              "description": "Payload is a unique information string",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketTick",
          "longName": "MarketTick",
          "fullName": "vega.events.v1.MarketTick",
          "description": "A market ticket event contains the time value for when a particular market was last processed on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Market identifier for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time",
              "description": "Timestamp containing latest update from Vega blockchain aka Vega-time",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OneOffTransfer",
          "longName": "OneOffTransfer",
          "fullName": "vega.events.v1.OneOffTransfer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deliver_on",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionResolution",
          "longName": "PositionResolution",
          "fullName": "vega.events.v1.PositionResolution",
          "description": "A position resolution event contains information on distressed trades",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "distressed",
              "description": "Number of distressed traders",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "closed",
              "description": "Number of close outs",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "mark_price",
              "description": "Mark price as a string representing a scaled price",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionStateEvent",
          "longName": "PositionStateEvent",
          "fullName": "vega.events.v1.PositionStateEvent",
          "description": "A position state event contains the current position state for a single party in a single market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party identifier for this position update",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier for this position update",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "Current position",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "potential_buys",
              "description": "Potential orders",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "potential_sells",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vw_buy_price",
              "description": "Volume weighted prices",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vw_sell_price",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProtocolUpgradeEvent",
          "longName": "ProtocolUpgradeEvent",
          "fullName": "vega.events.v1.ProtocolUpgradeEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "upgrade_block_height",
              "description": "The block height at which to perform the upgrade",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_release_tag",
              "description": "the release tag for the vega binary",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data_node_release_tag",
              "description": "the release tag for the data-node binary",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "approvers",
              "description": "tendermint validators that have agreed to the upgrade",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "the status of the proposal",
              "label": "",
              "type": "ProtocolUpgradeProposalStatus",
              "longType": "ProtocolUpgradeProposalStatus",
              "fullType": "vega.events.v1.ProtocolUpgradeProposalStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RecurringTransfer",
          "longName": "RecurringTransfer",
          "fullName": "vega.events.v1.RecurringTransfer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "start_epoch",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_epoch",
              "description": "",
              "label": "",
              "type": "Uint64Value",
              "longType": "vega.Uint64Value",
              "fullType": "vega.Uint64Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "factor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "dispatch_strategy",
              "description": "",
              "label": "",
              "type": "DispatchStrategy",
              "longType": "vega.DispatchStrategy",
              "fullType": "vega.DispatchStrategy",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardPayoutEvent",
          "longName": "RewardPayoutEvent",
          "fullName": "vega.events.v1.RewardPayoutEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "percent_of_total_reward",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reward_type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SettleDistressed",
          "longName": "SettleDistressed",
          "fullName": "vega.events.v1.SettleDistressed",
          "description": "A settle distressed event contains information on distressed trading parties who are closed out\n\nNote: Any PositionResolution event (market level) will most likely be followed by a number of these events",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier (public key) for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "margin",
              "description": "Margin value as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price as an integer, for example `123456` is a correctly\nformatted price of `1.23456` assuming market configured to 5 decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SettlePosition",
          "longName": "SettlePosition",
          "fullName": "vega.events.v1.SettlePosition",
          "description": "A settle position event contains position settlement information for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier (public key) for the event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price of settlement as a string",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "trade_settlements",
              "description": "A collection of 1 or more trade settlements",
              "label": "repeated",
              "type": "TradeSettlement",
              "longType": "TradeSettlement",
              "fullType": "vega.events.v1.TradeSettlement",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "position_factor",
              "description": "Position factor - 10 ^ number of position decimal places",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeLinking",
          "longName": "StakeLinking",
          "fullName": "vega.events.v1.StakeLinking",
          "description": "StakeLinking - an event notifying of stake being deposited or removed for a given party\nThese events are emitted for every Staking deposit or removed accepted by the network",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The internal ID for this staking event",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "The type of event",
              "label": "",
              "type": "Type",
              "longType": "StakeLinking.Type",
              "fullType": "vega.events.v1.StakeLinking.Type",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ts",
              "description": "The timestamps at which the event was emitted by ethereum",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party",
              "description": "The party to whom the event is directed at.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount of stake deposited or removed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "The status of the event",
              "label": "",
              "type": "Status",
              "longType": "StakeLinking.Status",
              "fullType": "vega.events.v1.StakeLinking.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "finalized_at",
              "description": "The time at which the vega network finalized the state of the event",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_hash",
              "description": "The hash of the transaction from which the events happen",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "The block when the event happened",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_time",
              "description": "The block time",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_index",
              "description": "The log index",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_address",
              "description": "the ethereum address from which the stake link was iniated",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StateVar",
          "longName": "StateVar",
          "fullName": "vega.events.v1.StateVar",
          "description": "StateVarEvent - updates on state changes in state variable consensus",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "event_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StreamStartEvent",
          "longName": "StreamStartEvent",
          "fullName": "vega.events.v1.StreamStartEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "chain_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TimeUpdate",
          "longName": "TimeUpdate",
          "fullName": "vega.events.v1.TimeUpdate",
          "description": "A time update event contains the latest time update from Vega blockchain and indicates the start of a new block",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "timestamp",
              "description": "Timestamp containing latest update from Vega blockchain aka Vega-time",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradeSettlement",
          "longName": "TradeSettlement",
          "fullName": "vega.events.v1.TradeSettlement",
          "description": "A trade settlement is part of the settle position event",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "size",
              "description": "Size of trade settlement",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Price of settlement as string",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Transfer",
          "longName": "Transfer",
          "fullName": "vega.events.v1.Transfer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_account_type",
              "description": "",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_account_type",
              "description": "",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "",
              "label": "",
              "type": "Status",
              "longType": "Transfer.Status",
              "fullType": "vega.events.v1.Transfer.Status",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "one_off",
              "description": "",
              "label": "",
              "type": "OneOffTransfer",
              "longType": "OneOffTransfer",
              "fullType": "vega.events.v1.OneOffTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "recurring",
              "description": "",
              "label": "",
              "type": "RecurringTransfer",
              "longType": "RecurringTransfer",
              "fullType": "vega.events.v1.RecurringTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferResponses",
          "longName": "TransferResponses",
          "fullName": "vega.events.v1.TransferResponses",
          "description": "A transfer responses event contains a collection of transfer information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "responses",
              "description": "One or more entries containing internal transfer information",
              "label": "repeated",
              "type": "TransferResponse",
              "longType": "vega.TransferResponse",
              "fullType": "vega.TransferResponse",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TxErrorEvent",
          "longName": "TxErrorEvent",
          "fullName": "vega.events.v1.TxErrorEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Unique party identifier for the related party",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "err_msg",
              "description": "An error message describing what went wrong",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_submission",
              "description": "",
              "label": "",
              "type": "OrderSubmission",
              "longType": "vega.commands.v1.OrderSubmission",
              "fullType": "vega.commands.v1.OrderSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "order_amendment",
              "description": "",
              "label": "",
              "type": "OrderAmendment",
              "longType": "vega.commands.v1.OrderAmendment",
              "fullType": "vega.commands.v1.OrderAmendment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "order_cancellation",
              "description": "",
              "label": "",
              "type": "OrderCancellation",
              "longType": "vega.commands.v1.OrderCancellation",
              "fullType": "vega.commands.v1.OrderCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "proposal",
              "description": "",
              "label": "",
              "type": "ProposalSubmission",
              "longType": "vega.commands.v1.ProposalSubmission",
              "fullType": "vega.commands.v1.ProposalSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "vote_submission",
              "description": "",
              "label": "",
              "type": "VoteSubmission",
              "longType": "vega.commands.v1.VoteSubmission",
              "fullType": "vega.commands.v1.VoteSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_submission",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionSubmission",
              "longType": "vega.commands.v1.LiquidityProvisionSubmission",
              "fullType": "vega.commands.v1.LiquidityProvisionSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "withdraw_submission",
              "description": "",
              "label": "",
              "type": "WithdrawSubmission",
              "longType": "vega.commands.v1.WithdrawSubmission",
              "fullType": "vega.commands.v1.WithdrawSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "delegate_submission",
              "description": "",
              "label": "",
              "type": "DelegateSubmission",
              "longType": "vega.commands.v1.DelegateSubmission",
              "fullType": "vega.commands.v1.DelegateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "undelegate_submission",
              "description": "",
              "label": "",
              "type": "UndelegateSubmission",
              "longType": "vega.commands.v1.UndelegateSubmission",
              "fullType": "vega.commands.v1.UndelegateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_cancellation",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionCancellation",
              "longType": "vega.commands.v1.LiquidityProvisionCancellation",
              "fullType": "vega.commands.v1.LiquidityProvisionCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_amendment",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionAmendment",
              "longType": "vega.commands.v1.LiquidityProvisionAmendment",
              "fullType": "vega.commands.v1.LiquidityProvisionAmendment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "transfer",
              "description": "",
              "label": "",
              "type": "Transfer",
              "longType": "vega.commands.v1.Transfer",
              "fullType": "vega.commands.v1.Transfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "cancel_transfer",
              "description": "",
              "label": "",
              "type": "CancelTransfer",
              "longType": "vega.commands.v1.CancelTransfer",
              "fullType": "vega.commands.v1.CancelTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "announce_node",
              "description": "",
              "label": "",
              "type": "AnnounceNode",
              "longType": "vega.commands.v1.AnnounceNode",
              "fullType": "vega.commands.v1.AnnounceNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "oracle_data_submission",
              "description": "",
              "label": "",
              "type": "OracleDataSubmission",
              "longType": "vega.commands.v1.OracleDataSubmission",
              "fullType": "vega.commands.v1.OracleDataSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_proposal",
              "description": "",
              "label": "",
              "type": "ProtocolUpgradeProposal",
              "longType": "vega.commands.v1.ProtocolUpgradeProposal",
              "fullType": "vega.commands.v1.ProtocolUpgradeProposal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "transaction",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorRankingEvent",
          "longName": "ValidatorRankingEvent",
          "fullName": "vega.events.v1.ValidatorRankingEvent",
          "description": "An event that explains the status of the validator for the coming epoch",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake_score",
              "description": "stake based score - no anti-whaling",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "performance_score",
              "description": "performance base score",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ranking_score",
              "description": "final score",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "previous_status",
              "description": "the status of the validator in the previous epoch",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_status",
              "description": "the status of the validator in the next epoch",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "the epoch seq for which the status is valid",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tm_voting_power",
              "description": "tendermint voting power of the validator",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorScoreEvent",
          "longName": "ValidatorScoreEvent",
          "fullName": "vega.events.v1.ValidatorScoreEvent",
          "description": "ValidatorScoreEvent is the score a validator gets for a given epoch",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_score",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "normalised_score",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_performance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "raw_validator_score",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "validator_status",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "multisig_score",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorUpdate",
          "longName": "ValidatorUpdate",
          "fullName": "vega.events.v1.ValidatorUpdate",
          "description": "A validator update event contains information about validator node",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Node id of the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_pub_key",
              "description": "Vega public key of validator node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ethereum_address",
              "description": "Ethereum public key of validator node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tm_pub_key",
              "description": "Public key of Tendermint",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "info_url",
              "description": "URL with more info on the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "country",
              "description": "Country code (ISO 3166-1 alpha-2) for the location of the node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Name of the validator",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "avatar_url",
              "description": "AvatarURL of the validator",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_pub_key_index",
              "description": "Vega public key derivation index",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "added",
              "description": "Flag indicating if the validator has been added to or removed from vega",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_epoch",
              "description": "The epoch from which the validator was added or removed",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "vega/wallet/v1/wallet.proto",
      "description": "",
      "package": "vega.wallet.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "SubmitTransactionRequest",
          "longName": "SubmitTransactionRequest",
          "fullName": "vega.wallet.v1.SubmitTransactionRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "pub_key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "propagate",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_submission",
              "description": "User commands",
              "label": "",
              "type": "OrderSubmission",
              "longType": "vega.commands.v1.OrderSubmission",
              "fullType": "vega.commands.v1.OrderSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "order_cancellation",
              "description": "",
              "label": "",
              "type": "OrderCancellation",
              "longType": "vega.commands.v1.OrderCancellation",
              "fullType": "vega.commands.v1.OrderCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "order_amendment",
              "description": "",
              "label": "",
              "type": "OrderAmendment",
              "longType": "vega.commands.v1.OrderAmendment",
              "fullType": "vega.commands.v1.OrderAmendment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "withdraw_submission",
              "description": "",
              "label": "",
              "type": "WithdrawSubmission",
              "longType": "vega.commands.v1.WithdrawSubmission",
              "fullType": "vega.commands.v1.WithdrawSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "proposal_submission",
              "description": "",
              "label": "",
              "type": "ProposalSubmission",
              "longType": "vega.commands.v1.ProposalSubmission",
              "fullType": "vega.commands.v1.ProposalSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "vote_submission",
              "description": "",
              "label": "",
              "type": "VoteSubmission",
              "longType": "vega.commands.v1.VoteSubmission",
              "fullType": "vega.commands.v1.VoteSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_submission",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionSubmission",
              "longType": "vega.commands.v1.LiquidityProvisionSubmission",
              "fullType": "vega.commands.v1.LiquidityProvisionSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "delegate_submission",
              "description": "",
              "label": "",
              "type": "DelegateSubmission",
              "longType": "vega.commands.v1.DelegateSubmission",
              "fullType": "vega.commands.v1.DelegateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "undelegate_submission",
              "description": "",
              "label": "",
              "type": "UndelegateSubmission",
              "longType": "vega.commands.v1.UndelegateSubmission",
              "fullType": "vega.commands.v1.UndelegateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_cancellation",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionCancellation",
              "longType": "vega.commands.v1.LiquidityProvisionCancellation",
              "fullType": "vega.commands.v1.LiquidityProvisionCancellation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "liquidity_provision_amendment",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionAmendment",
              "longType": "vega.commands.v1.LiquidityProvisionAmendment",
              "fullType": "vega.commands.v1.LiquidityProvisionAmendment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "transfer",
              "description": "",
              "label": "",
              "type": "Transfer",
              "longType": "vega.commands.v1.Transfer",
              "fullType": "vega.commands.v1.Transfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "cancel_transfer",
              "description": "",
              "label": "",
              "type": "CancelTransfer",
              "longType": "vega.commands.v1.CancelTransfer",
              "fullType": "vega.commands.v1.CancelTransfer",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "announce_node",
              "description": "",
              "label": "",
              "type": "AnnounceNode",
              "longType": "vega.commands.v1.AnnounceNode",
              "fullType": "vega.commands.v1.AnnounceNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "node_vote",
              "description": "Validator commands",
              "label": "",
              "type": "NodeVote",
              "longType": "vega.commands.v1.NodeVote",
              "fullType": "vega.commands.v1.NodeVote",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "node_signature",
              "description": "",
              "label": "",
              "type": "NodeSignature",
              "longType": "vega.commands.v1.NodeSignature",
              "fullType": "vega.commands.v1.NodeSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "chain_event",
              "description": "",
              "label": "",
              "type": "ChainEvent",
              "longType": "vega.commands.v1.ChainEvent",
              "fullType": "vega.commands.v1.ChainEvent",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "key_rotate_submission",
              "description": "",
              "label": "",
              "type": "KeyRotateSubmission",
              "longType": "vega.commands.v1.KeyRotateSubmission",
              "fullType": "vega.commands.v1.KeyRotateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "state_variable_proposal",
              "description": "",
              "label": "",
              "type": "StateVariableProposal",
              "longType": "vega.commands.v1.StateVariableProposal",
              "fullType": "vega.commands.v1.StateVariableProposal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "validator_heartbeat",
              "description": "",
              "label": "",
              "type": "ValidatorHeartbeat",
              "longType": "vega.commands.v1.ValidatorHeartbeat",
              "fullType": "vega.commands.v1.ValidatorHeartbeat",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "ethereum_key_rotate_submission",
              "description": "",
              "label": "",
              "type": "EthereumKeyRotateSubmission",
              "longType": "vega.commands.v1.EthereumKeyRotateSubmission",
              "fullType": "vega.commands.v1.EthereumKeyRotateSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "protocol_upgrade_proposal",
              "description": "",
              "label": "",
              "type": "ProtocolUpgradeProposal",
              "longType": "vega.commands.v1.ProtocolUpgradeProposal",
              "fullType": "vega.commands.v1.ProtocolUpgradeProposal",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "oracle_data_submission",
              "description": "Oracle commands",
              "label": "",
              "type": "OracleDataSubmission",
              "longType": "vega.commands.v1.OracleDataSubmission",
              "fullType": "vega.commands.v1.OracleDataSubmission",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "data-node/api/v1/trading_data.proto",
      "description": "",
      "package": "datanode.api.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "AccountsSubscribeRequest",
          "longName": "AccountsSubscribeRequest",
          "fullName": "datanode.api.v1.AccountsSubscribeRequest",
          "description": "Request to subscribe to a stream of (Accounts)[#vega.Account]",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Account type to subscribe to, required field",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AccountsSubscribeResponse",
          "longName": "AccountsSubscribeResponse",
          "fullName": "datanode.api.v1.AccountsSubscribeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "account",
              "description": "",
              "label": "",
              "type": "Account",
              "longType": "vega.Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetByIDRequest",
          "longName": "AssetByIDRequest",
          "fullName": "datanode.api.v1.AssetByIDRequest",
          "description": "Request for an asset given an asset identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Asset identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetByIDResponse",
          "longName": "AssetByIDResponse",
          "fullName": "datanode.api.v1.AssetByIDResponse",
          "description": "Response for an asset given an asset identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset",
              "description": "An asset record, if found",
              "label": "",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetsRequest",
          "longName": "AssetsRequest",
          "fullName": "datanode.api.v1.AssetsRequest",
          "description": "Request for a list of all assets enabled on Vega",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "AssetsResponse",
          "longName": "AssetsResponse",
          "fullName": "datanode.api.v1.AssetsResponse",
          "description": "Response for a list of all assets enabled on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "assets",
              "description": "A list of 0 or more assets",
              "label": "repeated",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CandlesRequest",
          "longName": "CandlesRequest",
          "fullName": "datanode.api.v1.CandlesRequest",
          "description": "Request for a list of candles for a market at an interval",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier, required field.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "since_timestamp",
              "description": "Timestamp to retrieve candles since, in nanoseconds since the epoch,\nrequired field - See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "interval",
              "description": "Time interval for the candles, required field",
              "label": "",
              "type": "Interval",
              "longType": "vega.Interval",
              "fullType": "vega.Interval",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CandlesResponse",
          "longName": "CandlesResponse",
          "fullName": "datanode.api.v1.CandlesResponse",
          "description": "Response for a list of candles for a market at an interval",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "candles",
              "description": "A list of 0 or more candles",
              "label": "repeated",
              "type": "Candle",
              "longType": "vega.Candle",
              "fullType": "vega.Candle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CandlesSubscribeRequest",
          "longName": "CandlesSubscribeRequest",
          "fullName": "datanode.api.v1.CandlesSubscribeRequest",
          "description": "Request to subscribe to a stream of (Candles)[#vega.Candle]",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "interval",
              "description": "Time interval for the candles, required field.",
              "label": "",
              "type": "Interval",
              "longType": "vega.Interval",
              "fullType": "vega.Interval",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CandlesSubscribeResponse",
          "longName": "CandlesSubscribeResponse",
          "fullName": "datanode.api.v1.CandlesSubscribeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "candle",
              "description": "",
              "label": "",
              "type": "Candle",
              "longType": "vega.Candle",
              "fullType": "vega.Candle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Checkpoint",
          "longName": "Checkpoint",
          "fullName": "datanode.api.v1.Checkpoint",
          "description": "The actual data regarding a checkpoint",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "at_block",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckpointsRequest",
          "longName": "CheckpointsRequest",
          "fullName": "datanode.api.v1.CheckpointsRequest",
          "description": "Request to get all checkpoints. Currently no fields, probably will be expanded to allow filtering data",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "CheckpointsResponse",
          "longName": "CheckpointsResponse",
          "fullName": "datanode.api.v1.CheckpointsResponse",
          "description": "Response message containing all checkpoints requested",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "checkpoints",
              "description": "",
              "label": "repeated",
              "type": "Checkpoint",
              "longType": "Checkpoint",
              "fullType": "datanode.api.v1.Checkpoint",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationsRequest",
          "longName": "DelegationsRequest",
          "fullName": "datanode.api.v1.DelegationsRequest",
          "description": "both fields optional but 1 of them required at least\nparty = all delegation for a party\nnode_id = all delegation for a node\nparty_id + node_id = all delegation for a node for a given party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v1.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationsResponse",
          "longName": "DelegationsResponse",
          "fullName": "datanode.api.v1.DelegationsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegations",
              "description": "",
              "label": "repeated",
              "type": "Delegation",
              "longType": "vega.Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DepositRequest",
          "longName": "DepositRequest",
          "fullName": "datanode.api.v1.DepositRequest",
          "description": "A request to get a specific deposit by identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The identifier of the deposit",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DepositResponse",
          "longName": "DepositResponse",
          "fullName": "datanode.api.v1.DepositResponse",
          "description": "A response for a deposit",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deposit",
              "description": "The deposit matching the identifier from the request",
              "label": "",
              "type": "Deposit",
              "longType": "vega.Deposit",
              "fullType": "vega.Deposit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DepositsRequest",
          "longName": "DepositsRequest",
          "fullName": "datanode.api.v1.DepositsRequest",
          "description": "A request to get a list of deposit from a given party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "The party to get the deposits for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DepositsResponse",
          "longName": "DepositsResponse",
          "fullName": "datanode.api.v1.DepositsResponse",
          "description": "The response for a list of deposits",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deposits",
              "description": "The list of deposits for the specified party",
              "label": "repeated",
              "type": "Deposit",
              "longType": "vega.Deposit",
              "fullType": "vega.Deposit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20WithdrawalApprovalRequest",
          "longName": "ERC20WithdrawalApprovalRequest",
          "fullName": "datanode.api.v1.ERC20WithdrawalApprovalRequest",
          "description": "The request to get all information required to bundle the call to finalise the withdrawal on the erc20 bridge",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "withdrawal_id",
              "description": "The identifier of the withdrawal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20WithdrawalApprovalResponse",
          "longName": "ERC20WithdrawalApprovalResponse",
          "fullName": "datanode.api.v1.ERC20WithdrawalApprovalResponse",
          "description": "The response with all information required to bundle the call to finalise the withdrawal on the erc20 bridge\nfunction withdraw_asset(address asset_source, uint256 asset_id, uint256 amount, uint256 expiry, uint256 nonce, bytes memory signatures)",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_source",
              "description": "The address of asset on ethereum",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount to be withdrawn",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expiry",
              "description": "The expiry / until what time the request is valid",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "The nonce, which is actually the internal reference for the withdrawal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "The signatures bundle as hex encoded data, forward by 0x\ne.g: 0x + sig1 + sig2 + ... + sixN",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_address",
              "description": "The ethereum address to withdraw the funds to, 0x prefixed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "creation",
              "description": "The creation timestamps",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EstimateFeeRequest",
          "longName": "EstimateFeeRequest",
          "fullName": "datanode.api.v1.EstimateFeeRequest",
          "description": "Request to fetch the estimated fee if an order were to trade immediately",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "Order to estimate fees for\nthe following fields in the order are required:\nMarketID (used to specify the fee factors)\nPrice (the price at which the order could trade)\nSize (the size at which the order could eventually trade)",
              "label": "",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EstimateFeeResponse",
          "longName": "EstimateFeeResponse",
          "fullName": "datanode.api.v1.EstimateFeeResponse",
          "description": "Response to a EstimateFeeRequest, containing the estimated fees for a given order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "fee",
              "description": "Summary of the estimated fees for this order if it were to trade now",
              "label": "",
              "type": "Fee",
              "longType": "vega.Fee",
              "fullType": "vega.Fee",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EstimateMarginRequest",
          "longName": "EstimateMarginRequest",
          "fullName": "datanode.api.v1.EstimateMarginRequest",
          "description": "Request to fetch the estimated MarginLevels if an order were to trade immediately",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "Order to estimate fees for",
              "label": "",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EstimateMarginResponse",
          "longName": "EstimateMarginResponse",
          "fullName": "datanode.api.v1.EstimateMarginResponse",
          "description": "Response to a EstimateMarginRequest, containing the estimated marginLevels for a given order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "margin_levels",
              "description": "Summary of the estimated margins for this order if it were to trade now",
              "label": "",
              "type": "MarginLevels",
              "longType": "vega.MarginLevels",
              "fullType": "vega.MarginLevels",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FeeInfrastructureAccountsRequest",
          "longName": "FeeInfrastructureAccountsRequest",
          "fullName": "datanode.api.v1.FeeInfrastructureAccountsRequest",
          "description": "Request for a list of infrastructure fee accounts",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset",
              "description": "Asset identifier, required field\n- Set to an empty string to return all accounts\n- Set to an asset ID to return a single infrastructure fee account for a given asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FeeInfrastructureAccountsResponse",
          "longName": "FeeInfrastructureAccountsResponse",
          "fullName": "datanode.api.v1.FeeInfrastructureAccountsResponse",
          "description": "Response for a list of infrastructure fee accounts",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accounts",
              "description": "A list of 0 or more infrastructure fee accounts",
              "label": "repeated",
              "type": "Account",
              "longType": "vega.Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetEpochRequest",
          "longName": "GetEpochRequest",
          "fullName": "datanode.api.v1.GetEpochRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Optional - if id omitted it gets the current epoch",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetEpochResponse",
          "longName": "GetEpochResponse",
          "fullName": "datanode.api.v1.GetEpochResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "",
              "label": "",
              "type": "Epoch",
              "longType": "vega.Epoch",
              "fullType": "vega.Epoch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetKeyRotationsByNodeRequest",
          "longName": "GetKeyRotationsByNodeRequest",
          "fullName": "datanode.api.v1.GetKeyRotationsByNodeRequest",
          "description": "Request to list all key rotations per node",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "Required id of node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetKeyRotationsByNodeResponse",
          "longName": "GetKeyRotationsByNodeResponse",
          "fullName": "datanode.api.v1.GetKeyRotationsByNodeResponse",
          "description": "Response with all key rotations per node",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "rotations",
              "description": "",
              "label": "repeated",
              "type": "KeyRotation",
              "longType": "KeyRotation",
              "fullType": "datanode.api.v1.KeyRotation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetKeyRotationsRequest",
          "longName": "GetKeyRotationsRequest",
          "fullName": "datanode.api.v1.GetKeyRotationsRequest",
          "description": "Request to list all key rotations",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetKeyRotationsResponse",
          "longName": "GetKeyRotationsResponse",
          "fullName": "datanode.api.v1.GetKeyRotationsResponse",
          "description": "Response with all key rotations",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "rotations",
              "description": "",
              "label": "repeated",
              "type": "KeyRotation",
              "longType": "KeyRotation",
              "fullType": "datanode.api.v1.KeyRotation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNetworkParametersProposalsRequest",
          "longName": "GetNetworkParametersProposalsRequest",
          "fullName": "datanode.api.v1.GetNetworkParametersProposalsRequest",
          "description": "Request for a list of network parameter proposals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "select_in_state",
              "description": "Optional proposal state",
              "label": "",
              "type": "OptionalProposalState",
              "longType": "OptionalProposalState",
              "fullType": "datanode.api.v1.OptionalProposalState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNetworkParametersProposalsResponse",
          "longName": "GetNetworkParametersProposalsResponse",
          "fullName": "datanode.api.v1.GetNetworkParametersProposalsResponse",
          "description": "Response for a list of network parameter proposals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "A list of 0 or more governance data",
              "label": "repeated",
              "type": "GovernanceData",
              "longType": "vega.GovernanceData",
              "fullType": "vega.GovernanceData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNewAssetProposalsRequest",
          "longName": "GetNewAssetProposalsRequest",
          "fullName": "datanode.api.v1.GetNewAssetProposalsRequest",
          "description": "Request for a list of new asset proposals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "select_in_state",
              "description": "Optional proposal state",
              "label": "",
              "type": "OptionalProposalState",
              "longType": "OptionalProposalState",
              "fullType": "datanode.api.v1.OptionalProposalState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNewAssetProposalsResponse",
          "longName": "GetNewAssetProposalsResponse",
          "fullName": "datanode.api.v1.GetNewAssetProposalsResponse",
          "description": "Response for a list of new asset proposals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "A list of 0 or more governance data",
              "label": "repeated",
              "type": "GovernanceData",
              "longType": "vega.GovernanceData",
              "fullType": "vega.GovernanceData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNewFreeformProposalsRequest",
          "longName": "GetNewFreeformProposalsRequest",
          "fullName": "datanode.api.v1.GetNewFreeformProposalsRequest",
          "description": "Request for a list of new freeform proposals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "select_in_state",
              "description": "Optional proposal state",
              "label": "",
              "type": "OptionalProposalState",
              "longType": "OptionalProposalState",
              "fullType": "datanode.api.v1.OptionalProposalState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNewFreeformProposalsResponse",
          "longName": "GetNewFreeformProposalsResponse",
          "fullName": "datanode.api.v1.GetNewFreeformProposalsResponse",
          "description": "Response for a list of new freeform proposals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "A list of 0 or more governance data",
              "label": "repeated",
              "type": "GovernanceData",
              "longType": "vega.GovernanceData",
              "fullType": "vega.GovernanceData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNewMarketProposalsRequest",
          "longName": "GetNewMarketProposalsRequest",
          "fullName": "datanode.api.v1.GetNewMarketProposalsRequest",
          "description": "Request for a list of new market proposals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "select_in_state",
              "description": "Optional proposal state",
              "label": "",
              "type": "OptionalProposalState",
              "longType": "OptionalProposalState",
              "fullType": "datanode.api.v1.OptionalProposalState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNewMarketProposalsResponse",
          "longName": "GetNewMarketProposalsResponse",
          "fullName": "datanode.api.v1.GetNewMarketProposalsResponse",
          "description": "Response for a list of new market proposals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "A list of 0 or more governance data",
              "label": "repeated",
              "type": "GovernanceData",
              "longType": "vega.GovernanceData",
              "fullType": "vega.GovernanceData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNodeByIDRequest",
          "longName": "GetNodeByIDRequest",
          "fullName": "datanode.api.v1.GetNodeByIDRequest",
          "description": "Request to list all nodes",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Required id of node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNodeByIDResponse",
          "longName": "GetNodeByIDResponse",
          "fullName": "datanode.api.v1.GetNodeByIDResponse",
          "description": "Response with all nodes",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Node",
              "longType": "vega.Node",
              "fullType": "vega.Node",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNodeDataRequest",
          "longName": "GetNodeDataRequest",
          "fullName": "datanode.api.v1.GetNodeDataRequest",
          "description": "Request for current Node data",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetNodeDataResponse",
          "longName": "GetNodeDataResponse",
          "fullName": "datanode.api.v1.GetNodeDataResponse",
          "description": "Response with node data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_data",
              "description": "",
              "label": "",
              "type": "NodeData",
              "longType": "vega.NodeData",
              "fullType": "vega.NodeData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNodeSignaturesAggregateRequest",
          "longName": "GetNodeSignaturesAggregateRequest",
          "fullName": "datanode.api.v1.GetNodeSignaturesAggregateRequest",
          "description": "Request to specify the identifier of the resource we want to retrieve aggregated signatures for",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Resource identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNodeSignaturesAggregateResponse",
          "longName": "GetNodeSignaturesAggregateResponse",
          "fullName": "datanode.api.v1.GetNodeSignaturesAggregateResponse",
          "description": "Response to specify the identifier of the resource we want to retrieve aggregated signatures for",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signatures",
              "description": "A list of 0 or more signatures",
              "label": "repeated",
              "type": "NodeSignature",
              "longType": "vega.commands.v1.NodeSignature",
              "fullType": "vega.commands.v1.NodeSignature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNodesRequest",
          "longName": "GetNodesRequest",
          "fullName": "datanode.api.v1.GetNodesRequest",
          "description": "Request to list all nodes",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetNodesResponse",
          "longName": "GetNodesResponse",
          "fullName": "datanode.api.v1.GetNodesResponse",
          "description": "Response with all nodes",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "nodes",
              "description": "",
              "label": "repeated",
              "type": "Node",
              "longType": "vega.Node",
              "fullType": "vega.Node",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetProposalByIDRequest",
          "longName": "GetProposalByIDRequest",
          "fullName": "datanode.api.v1.GetProposalByIDRequest",
          "description": "Request for a governance proposal given a proposal identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal_id",
              "description": "Proposal identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetProposalByIDResponse",
          "longName": "GetProposalByIDResponse",
          "fullName": "datanode.api.v1.GetProposalByIDResponse",
          "description": "Response for a governance proposal given a proposal identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "Governance data, if found",
              "label": "",
              "type": "GovernanceData",
              "longType": "vega.GovernanceData",
              "fullType": "vega.GovernanceData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetProposalByReferenceRequest",
          "longName": "GetProposalByReferenceRequest",
          "fullName": "datanode.api.v1.GetProposalByReferenceRequest",
          "description": "Request for a governance proposal given a proposal reference",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "reference",
              "description": "Proposal reference. Required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetProposalByReferenceResponse",
          "longName": "GetProposalByReferenceResponse",
          "fullName": "datanode.api.v1.GetProposalByReferenceResponse",
          "description": "Response for a governance proposal given a proposal reference",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "Governance data, if found",
              "label": "",
              "type": "GovernanceData",
              "longType": "vega.GovernanceData",
              "fullType": "vega.GovernanceData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetProposalsByPartyRequest",
          "longName": "GetProposalsByPartyRequest",
          "fullName": "datanode.api.v1.GetProposalsByPartyRequest",
          "description": "Request for a list of proposals for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "select_in_state",
              "description": "Optional proposal state",
              "label": "",
              "type": "OptionalProposalState",
              "longType": "OptionalProposalState",
              "fullType": "datanode.api.v1.OptionalProposalState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetProposalsByPartyResponse",
          "longName": "GetProposalsByPartyResponse",
          "fullName": "datanode.api.v1.GetProposalsByPartyResponse",
          "description": "Response for a list of proposals for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "A list of 0 or more governance data",
              "label": "repeated",
              "type": "GovernanceData",
              "longType": "vega.GovernanceData",
              "fullType": "vega.GovernanceData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetProposalsRequest",
          "longName": "GetProposalsRequest",
          "fullName": "datanode.api.v1.GetProposalsRequest",
          "description": "Request for a list of proposals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "select_in_state",
              "description": "Optional proposal state",
              "label": "",
              "type": "OptionalProposalState",
              "longType": "OptionalProposalState",
              "fullType": "datanode.api.v1.OptionalProposalState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetProposalsResponse",
          "longName": "GetProposalsResponse",
          "fullName": "datanode.api.v1.GetProposalsResponse",
          "description": "Response for a list of proposals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "A list of 0 or more governance data",
              "label": "repeated",
              "type": "GovernanceData",
              "longType": "vega.GovernanceData",
              "fullType": "vega.GovernanceData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetRewardSummariesRequest",
          "longName": "GetRewardSummariesRequest",
          "fullName": "datanode.api.v1.GetRewardSummariesRequest",
          "description": "A request to get reward details for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetRewardSummariesResponse",
          "longName": "GetRewardSummariesResponse",
          "fullName": "datanode.api.v1.GetRewardSummariesResponse",
          "description": "The return message with reward details in for a single party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "summaries",
              "description": "",
              "label": "repeated",
              "type": "RewardSummary",
              "longType": "vega.RewardSummary",
              "fullType": "vega.RewardSummary",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetRewardsRequest",
          "longName": "GetRewardsRequest",
          "fullName": "datanode.api.v1.GetRewardsRequest",
          "description": "A request to get reward details for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v1.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetRewardsResponse",
          "longName": "GetRewardsResponse",
          "fullName": "datanode.api.v1.GetRewardsResponse",
          "description": "The return message with reward details in for a single party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "rewards",
              "description": "",
              "label": "repeated",
              "type": "Reward",
              "longType": "vega.Reward",
              "fullType": "vega.Reward",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetRiskFactorsRequest",
          "longName": "GetRiskFactorsRequest",
          "fullName": "datanode.api.v1.GetRiskFactorsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetRiskFactorsResponse",
          "longName": "GetRiskFactorsResponse",
          "fullName": "datanode.api.v1.GetRiskFactorsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "risk_factor",
              "description": "",
              "label": "",
              "type": "RiskFactor",
              "longType": "vega.RiskFactor",
              "fullType": "vega.RiskFactor",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetUpdateMarketProposalsRequest",
          "longName": "GetUpdateMarketProposalsRequest",
          "fullName": "datanode.api.v1.GetUpdateMarketProposalsRequest",
          "description": "Request for a list of update market proposals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "select_in_state",
              "description": "Proposal state",
              "label": "",
              "type": "OptionalProposalState",
              "longType": "OptionalProposalState",
              "fullType": "datanode.api.v1.OptionalProposalState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetUpdateMarketProposalsResponse",
          "longName": "GetUpdateMarketProposalsResponse",
          "fullName": "datanode.api.v1.GetUpdateMarketProposalsResponse",
          "description": "Response for a list of update market proposals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "A list of 0 or more governance data",
              "label": "repeated",
              "type": "GovernanceData",
              "longType": "vega.GovernanceData",
              "fullType": "vega.GovernanceData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetVegaTimeRequest",
          "longName": "GetVegaTimeRequest",
          "fullName": "datanode.api.v1.GetVegaTimeRequest",
          "description": "Request for the current time of the vega network",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetVegaTimeResponse",
          "longName": "GetVegaTimeResponse",
          "fullName": "datanode.api.v1.GetVegaTimeResponse",
          "description": "Response for the current consensus coordinated time on the Vega network, referred to as \"VegaTime\"",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "timestamp",
              "description": "Timestamp representation of current VegaTime as represented in\nNanoseconds since the epoch, for example `1580473859111222333` corresponds to `2020-01-31T12:30:59.111222333Z`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetVotesByPartyRequest",
          "longName": "GetVotesByPartyRequest",
          "fullName": "datanode.api.v1.GetVotesByPartyRequest",
          "description": "Request for a list of votes for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetVotesByPartyResponse",
          "longName": "GetVotesByPartyResponse",
          "fullName": "datanode.api.v1.GetVotesByPartyResponse",
          "description": "Response for a list of votes for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "votes",
              "description": "A list of 0 or more votes",
              "label": "repeated",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GlobalRewardPoolAccountsRequest",
          "longName": "GlobalRewardPoolAccountsRequest",
          "fullName": "datanode.api.v1.GlobalRewardPoolAccountsRequest",
          "description": "Request for a list of global reward pool accounts",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset",
              "description": "Asset identifier, required field\n- Set to an empty string to return all accounts\n- Set to an asset ID to return a single global reward pool account for a given asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GlobalRewardPoolAccountsResponse",
          "longName": "GlobalRewardPoolAccountsResponse",
          "fullName": "datanode.api.v1.GlobalRewardPoolAccountsResponse",
          "description": "Response for a list of global reward pool accounts",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accounts",
              "description": "A list of 0 or more global reward pool accounts",
              "label": "repeated",
              "type": "Account",
              "longType": "vega.Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "KeyRotation",
          "longName": "KeyRotation",
          "fullName": "datanode.api.v1.KeyRotation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "old_pub_key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_pub_key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_height",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LastTradeRequest",
          "longName": "LastTradeRequest",
          "fullName": "datanode.api.v1.LastTradeRequest",
          "description": "Request for the latest trade that occurred on Vega for a given market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LastTradeResponse",
          "longName": "LastTradeResponse",
          "fullName": "datanode.api.v1.LastTradeResponse",
          "description": "Response for the latest trade that occurred on Vega for a given market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "trade",
              "description": "A trade, if found",
              "label": "",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvisionsRequest",
          "longName": "LiquidityProvisionsRequest",
          "fullName": "datanode.api.v1.LiquidityProvisionsRequest",
          "description": "A message requesting for the list of liquidity provision orders for markets\nOne of the two filters is required (or both)",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "The target market for the liquidity provision orders",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party",
              "description": "The party which submitted the liquidity provision orders",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvisionsResponse",
          "longName": "LiquidityProvisionsResponse",
          "fullName": "datanode.api.v1.LiquidityProvisionsResponse",
          "description": "A response containing all of the Vega liquidity provision orders",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "liquidity_provisions",
              "description": "",
              "label": "repeated",
              "type": "LiquidityProvision",
              "longType": "vega.LiquidityProvision",
              "fullType": "vega.LiquidityProvision",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOracleDataRequest",
          "longName": "ListOracleDataRequest",
          "fullName": "datanode.api.v1.ListOracleDataRequest",
          "description": "The request to get all seen oracle data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v1.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOracleDataResponse",
          "longName": "ListOracleDataResponse",
          "fullName": "datanode.api.v1.ListOracleDataResponse",
          "description": "The response to get all seen oracle data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "oracle_data",
              "description": "The list of seen oracle data",
              "label": "repeated",
              "type": "OracleData",
              "longType": "oracles.v1.OracleData",
              "fullType": "oracles.v1.OracleData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarginLevelsRequest",
          "longName": "MarginLevelsRequest",
          "fullName": "datanode.api.v1.MarginLevelsRequest",
          "description": "Request for margin levels for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarginLevelsResponse",
          "longName": "MarginLevelsResponse",
          "fullName": "datanode.api.v1.MarginLevelsResponse",
          "description": "Response for margin levels for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "margin_levels",
              "description": "A list of 0 or more margin levels",
              "label": "repeated",
              "type": "MarginLevels",
              "longType": "vega.MarginLevels",
              "fullType": "vega.MarginLevels",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarginLevelsSubscribeRequest",
          "longName": "MarginLevelsSubscribeRequest",
          "fullName": "datanode.api.v1.MarginLevelsSubscribeRequest",
          "description": "Request to subscribe to a stream of MarginLevels data matching the given party identifier\nOptionally, the list can be additionally filtered by market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarginLevelsSubscribeResponse",
          "longName": "MarginLevelsSubscribeResponse",
          "fullName": "datanode.api.v1.MarginLevelsSubscribeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "margin_levels",
              "description": "",
              "label": "",
              "type": "MarginLevels",
              "longType": "vega.MarginLevels",
              "fullType": "vega.MarginLevels",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketAccountsRequest",
          "longName": "MarketAccountsRequest",
          "fullName": "datanode.api.v1.MarketAccountsRequest",
          "description": "Request for a list of accounts for a market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketAccountsResponse",
          "longName": "MarketAccountsResponse",
          "fullName": "datanode.api.v1.MarketAccountsResponse",
          "description": "Response for a list of accounts for a market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accounts",
              "description": "A list of 0 or more accounts",
              "label": "repeated",
              "type": "Account",
              "longType": "vega.Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketByIDRequest",
          "longName": "MarketByIDRequest",
          "fullName": "datanode.api.v1.MarketByIDRequest",
          "description": "Request for a market given a market identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketByIDResponse",
          "longName": "MarketByIDResponse",
          "fullName": "datanode.api.v1.MarketByIDResponse",
          "description": "Response for a market given a market identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market",
              "description": "A market, if found",
              "label": "",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDataByIDRequest",
          "longName": "MarketDataByIDRequest",
          "fullName": "datanode.api.v1.MarketDataByIDRequest",
          "description": "Request for market data for a market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDataByIDResponse",
          "longName": "MarketDataByIDResponse",
          "fullName": "datanode.api.v1.MarketDataByIDResponse",
          "description": "Response for market data for a market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_data",
              "description": "Market data, if found",
              "label": "",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDepthRequest",
          "longName": "MarketDepthRequest",
          "fullName": "datanode.api.v1.MarketDepthRequest",
          "description": "Request for the market depth/order book price levels on a market\nOptionally, a maximum depth can be set to limit the number of levels returned",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_depth",
              "description": "Max depth limits the number of levels returned. Default is 0, which returns all levels",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDepthResponse",
          "longName": "MarketDepthResponse",
          "fullName": "datanode.api.v1.MarketDepthResponse",
          "description": "Response for the market depth/order book price levels on a market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy",
              "description": "Zero or more price levels for the buy side of the market depth data",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "vega.PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell",
              "description": "Zero or more price levels for the sell side of the market depth data",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "vega.PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_trade",
              "description": "Last trade recorded on Vega at the time of retrieving the `MarketDepthResponse`",
              "label": "",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sequence_number",
              "description": "Sequence number incremented after each update",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDepthSubscribeRequest",
          "longName": "MarketDepthSubscribeRequest",
          "fullName": "datanode.api.v1.MarketDepthSubscribeRequest",
          "description": "Request to subscribe to a stream of (MarketDepth)[#vega.MarketDepth] data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier, required field.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDepthSubscribeResponse",
          "longName": "MarketDepthSubscribeResponse",
          "fullName": "datanode.api.v1.MarketDepthSubscribeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_depth",
              "description": "",
              "label": "",
              "type": "MarketDepth",
              "longType": "vega.MarketDepth",
              "fullType": "vega.MarketDepth",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDepthUpdatesSubscribeRequest",
          "longName": "MarketDepthUpdatesSubscribeRequest",
          "fullName": "datanode.api.v1.MarketDepthUpdatesSubscribeRequest",
          "description": "Request to subscribe to a stream of (MarketDepth Update)[#vega.MarketDepthUpdate] data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDepthUpdatesSubscribeResponse",
          "longName": "MarketDepthUpdatesSubscribeResponse",
          "fullName": "datanode.api.v1.MarketDepthUpdatesSubscribeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "update",
              "description": "",
              "label": "",
              "type": "MarketDepthUpdate",
              "longType": "vega.MarketDepthUpdate",
              "fullType": "vega.MarketDepthUpdate",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketsDataRequest",
          "longName": "MarketsDataRequest",
          "fullName": "datanode.api.v1.MarketsDataRequest",
          "description": "Request for market data",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MarketsDataResponse",
          "longName": "MarketsDataResponse",
          "fullName": "datanode.api.v1.MarketsDataResponse",
          "description": "Response for market data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "markets_data",
              "description": "A list of 0 or more market data",
              "label": "repeated",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketsDataSubscribeRequest",
          "longName": "MarketsDataSubscribeRequest",
          "fullName": "datanode.api.v1.MarketsDataSubscribeRequest",
          "description": "Request to subscribe to a stream of MarketsData\nOptionally, the list can be additionally filtered by market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketsDataSubscribeResponse",
          "longName": "MarketsDataSubscribeResponse",
          "fullName": "datanode.api.v1.MarketsDataSubscribeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_data",
              "description": "",
              "label": "",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketsRequest",
          "longName": "MarketsRequest",
          "fullName": "datanode.api.v1.MarketsRequest",
          "description": "Request for a list of markets on Vega",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MarketsResponse",
          "longName": "MarketsResponse",
          "fullName": "datanode.api.v1.MarketsResponse",
          "description": "Response for a list of markets on Vega",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "markets",
              "description": "A list of 0 or more markets",
              "label": "repeated",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NetworkParametersRequest",
          "longName": "NetworkParametersRequest",
          "fullName": "datanode.api.v1.NetworkParametersRequest",
          "description": "A message requesting for the list of all network parameters",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "NetworkParametersResponse",
          "longName": "NetworkParametersResponse",
          "fullName": "datanode.api.v1.NetworkParametersResponse",
          "description": "A response containing all of the vega network parameters",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "network_parameters",
              "description": "",
              "label": "repeated",
              "type": "NetworkParameter",
              "longType": "vega.NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveDelegationsRequest",
          "longName": "ObserveDelegationsRequest",
          "fullName": "datanode.api.v1.ObserveDelegationsRequest",
          "description": "Request to obsever all event related to delegation with the given filters",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveDelegationsResponse",
          "longName": "ObserveDelegationsResponse",
          "fullName": "datanode.api.v1.ObserveDelegationsResponse",
          "description": "All events related to delegation with the given filters",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegation",
              "description": "",
              "label": "",
              "type": "Delegation",
              "longType": "vega.Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveEventBusRequest",
          "longName": "ObserveEventBusRequest",
          "fullName": "datanode.api.v1.ObserveEventBusRequest",
          "description": "Request to subscribe to a stream of one or more event types from the Vega event bus",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "type",
              "description": "One or more types of event, required field",
              "label": "repeated",
              "type": "BusEventType",
              "longType": "vega.events.v1.BusEventType",
              "fullType": "vega.events.v1.BusEventType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier, optional field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier, optional field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "batch_size",
              "description": "Batch size, optional field -\nIf not specified, any events received will be sent immediately. If the client is not ready\nfor the next data-set, data may be dropped a number of times, and eventually the stream is closed.\nif specified, the first batch will be sent when ready. To receive the next set of events, the client\nmust write an `ObserveEventBatch` message on the stream to flush the buffer.\nIf no message is received in 5 seconds, the stream is closed.\nDefault: 0, send any and all events when they are available.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveEventBusResponse",
          "longName": "ObserveEventBusResponse",
          "fullName": "datanode.api.v1.ObserveEventBusResponse",
          "description": "Response to a subscribed stream of events from the Vega event bus",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "events",
              "description": "One or more events",
              "label": "repeated",
              "type": "BusEvent",
              "longType": "vega.events.v1.BusEvent",
              "fullType": "vega.events.v1.BusEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveGovernanceRequest",
          "longName": "ObserveGovernanceRequest",
          "fullName": "datanode.api.v1.ObserveGovernanceRequest",
          "description": "Request to obsever all event related to governance",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ObserveGovernanceResponse",
          "longName": "ObserveGovernanceResponse",
          "fullName": "datanode.api.v1.ObserveGovernanceResponse",
          "description": "All events related to governance",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "",
              "label": "",
              "type": "GovernanceData",
              "longType": "vega.GovernanceData",
              "fullType": "vega.GovernanceData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObservePartyProposalsRequest",
          "longName": "ObservePartyProposalsRequest",
          "fullName": "datanode.api.v1.ObservePartyProposalsRequest",
          "description": "Request to subscribe to a stream of governance proposals for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObservePartyProposalsResponse",
          "longName": "ObservePartyProposalsResponse",
          "fullName": "datanode.api.v1.ObservePartyProposalsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "data",
              "description": "",
              "label": "",
              "type": "GovernanceData",
              "longType": "vega.GovernanceData",
              "fullType": "vega.GovernanceData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObservePartyVotesRequest",
          "longName": "ObservePartyVotesRequest",
          "fullName": "datanode.api.v1.ObservePartyVotesRequest",
          "description": "Request to subscribe to a stream of governance votes for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObservePartyVotesResponse",
          "longName": "ObservePartyVotesResponse",
          "fullName": "datanode.api.v1.ObservePartyVotesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vote",
              "description": "",
              "label": "",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveProposalVotesRequest",
          "longName": "ObserveProposalVotesRequest",
          "fullName": "datanode.api.v1.ObserveProposalVotesRequest",
          "description": "Request to subscribe to a stream of governance votes for a proposal",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proposal_id",
              "description": "Proposal identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveProposalVotesResponse",
          "longName": "ObserveProposalVotesResponse",
          "fullName": "datanode.api.v1.ObserveProposalVotesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vote",
              "description": "",
              "label": "",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveRewardsRequest",
          "longName": "ObserveRewardsRequest",
          "fullName": "datanode.api.v1.ObserveRewardsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveRewardsResponse",
          "longName": "ObserveRewardsResponse",
          "fullName": "datanode.api.v1.ObserveRewardsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "reward",
              "description": "",
              "label": "",
              "type": "Reward",
              "longType": "vega.Reward",
              "fullType": "vega.Reward",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OptionalProposalState",
          "longName": "OptionalProposalState",
          "fullName": "datanode.api.v1.OptionalProposalState",
          "description": "Optional proposal state",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "Proposal state value",
              "label": "",
              "type": "State",
              "longType": "vega.Proposal.State",
              "fullType": "vega.Proposal.State",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleDataBySpecRequest",
          "longName": "OracleDataBySpecRequest",
          "fullName": "datanode.api.v1.OracleDataBySpecRequest",
          "description": "A request to all oracle data broadcast to a given spec",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The id to get the oracle spec for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v1.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleDataBySpecResponse",
          "longName": "OracleDataBySpecResponse",
          "fullName": "datanode.api.v1.OracleDataBySpecResponse",
          "description": "The response for a list of all oracle data broadcast to a given spec",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "oracle_data",
              "description": "The list of oracle data broadcast to a given spec",
              "label": "repeated",
              "type": "OracleData",
              "longType": "oracles.v1.OracleData",
              "fullType": "oracles.v1.OracleData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleSpecRequest",
          "longName": "OracleSpecRequest",
          "fullName": "datanode.api.v1.OracleSpecRequest",
          "description": "A request to get a specific oracle spec by identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The id to get the oracle spec for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v1.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleSpecResponse",
          "longName": "OracleSpecResponse",
          "fullName": "datanode.api.v1.OracleSpecResponse",
          "description": "A response for a oracle spec",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "oracle_spec",
              "description": "The withdrawal matching the identifier from the request",
              "label": "",
              "type": "OracleSpec",
              "longType": "oracles.v1.OracleSpec",
              "fullType": "oracles.v1.OracleSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleSpecsRequest",
          "longName": "OracleSpecsRequest",
          "fullName": "datanode.api.v1.OracleSpecsRequest",
          "description": "A request to get a specific oracle spec by identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v1.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleSpecsResponse",
          "longName": "OracleSpecsResponse",
          "fullName": "datanode.api.v1.OracleSpecsResponse",
          "description": "The response for a list of withdrawals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "oracle_specs",
              "description": "The list of oracle specs",
              "label": "repeated",
              "type": "OracleSpec",
              "longType": "oracles.v1.OracleSpec",
              "fullType": "oracles.v1.OracleSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderByIDRequest",
          "longName": "OrderByIDRequest",
          "fullName": "datanode.api.v1.OrderByIDRequest",
          "description": "Request for an order with the specified order identifier\nOptionally, return a specific version of the order with the `version` field",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order_id",
              "description": "Order identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of the order:\n- Set `version` to 0 for most recent version of the order\n- Set `1` for original version of the order\n- Set `2` for first amendment, `3` for second amendment, etc",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderByIDResponse",
          "longName": "OrderByIDResponse",
          "fullName": "datanode.api.v1.OrderByIDResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "",
              "label": "",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderByMarketAndIDRequest",
          "longName": "OrderByMarketAndIDRequest",
          "fullName": "datanode.api.v1.OrderByMarketAndIDRequest",
          "description": "Request for an order on a market given an order identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_id",
              "description": "Order identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderByMarketAndIDResponse",
          "longName": "OrderByMarketAndIDResponse",
          "fullName": "datanode.api.v1.OrderByMarketAndIDResponse",
          "description": "Response for an order on a market given an order identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "An order, if found",
              "label": "",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderByReferenceRequest",
          "longName": "OrderByReferenceRequest",
          "fullName": "datanode.api.v1.OrderByReferenceRequest",
          "description": "Request for an order given an order reference",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "reference",
              "description": "Unique reference, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderByReferenceResponse",
          "longName": "OrderByReferenceResponse",
          "fullName": "datanode.api.v1.OrderByReferenceResponse",
          "description": "Response for an order given an order reference",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "An order, if found",
              "label": "",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderVersionsByIDRequest",
          "longName": "OrderVersionsByIDRequest",
          "fullName": "datanode.api.v1.OrderVersionsByIDRequest",
          "description": "Request for a list of all versions of an order given the specified order identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order_id",
              "description": "Order identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v1.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderVersionsByIDResponse",
          "longName": "OrderVersionsByIDResponse",
          "fullName": "datanode.api.v1.OrderVersionsByIDResponse",
          "description": "Response to a request for a list of all versions of an order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "orders",
              "description": "A list of 0 or more orders (list will contain the same order but with different versions, if it has been amended)",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrdersByMarketRequest",
          "longName": "OrdersByMarketRequest",
          "fullName": "datanode.api.v1.OrdersByMarketRequest",
          "description": "Request for a list of orders for a market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination controls",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v1.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrdersByMarketResponse",
          "longName": "OrdersByMarketResponse",
          "fullName": "datanode.api.v1.OrdersByMarketResponse",
          "description": "Response for a list of orders for a market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "orders",
              "description": "A list of 0 or more orders",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrdersByPartyRequest",
          "longName": "OrdersByPartyRequest",
          "fullName": "datanode.api.v1.OrdersByPartyRequest",
          "description": "Request for a list of orders for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v1.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrdersByPartyResponse",
          "longName": "OrdersByPartyResponse",
          "fullName": "datanode.api.v1.OrdersByPartyResponse",
          "description": "Response for a list of orders for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "orders",
              "description": "A list of 0 or more orders",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrdersSubscribeRequest",
          "longName": "OrdersSubscribeRequest",
          "fullName": "datanode.api.v1.OrdersSubscribeRequest",
          "description": "Request to subscribe to a stream of (Orders)[#vega.Order]\n\nThe fields for market identifier and party identifier are optional filters:\nIf omitted all orders, for all parties on all markets will be returned on the stream\nIf market identifier is given, orders from that market will be returned on the stream\nIf party identifier is given, orders from that party will be returned on the stream\nBoth filters can be combined",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrdersSubscribeResponse",
          "longName": "OrdersSubscribeResponse",
          "fullName": "datanode.api.v1.OrdersSubscribeResponse",
          "description": "A stream of orders",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "orders",
              "description": "A list of 0 or more orders",
              "label": "repeated",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Pagination",
          "longName": "Pagination",
          "fullName": "datanode.api.v1.Pagination",
          "description": "Pagination controls",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "skip",
              "description": "Skip the number of records specified, default is 0",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "limit",
              "description": "Limit the number of returned records to the value specified, default is 50",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "descending",
              "description": "Descending reverses the order of the records returned,\ndefault is true, if false the results will be returned in ascending order",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartiesRequest",
          "longName": "PartiesRequest",
          "fullName": "datanode.api.v1.PartiesRequest",
          "description": "Request for a list of all parties",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "PartiesResponse",
          "longName": "PartiesResponse",
          "fullName": "datanode.api.v1.PartiesResponse",
          "description": "Response to a request for a list of parties",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parties",
              "description": "A list of 0 or more parties",
              "label": "repeated",
              "type": "Party",
              "longType": "vega.Party",
              "fullType": "vega.Party",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyAccountsRequest",
          "longName": "PartyAccountsRequest",
          "fullName": "datanode.api.v1.PartyAccountsRequest",
          "description": "Request for a list of accounts for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Account type, required field",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyAccountsResponse",
          "longName": "PartyAccountsResponse",
          "fullName": "datanode.api.v1.PartyAccountsResponse",
          "description": "Response for a list of accounts for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accounts",
              "description": "A list of 0 or more accounts",
              "label": "repeated",
              "type": "Account",
              "longType": "vega.Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyByIDRequest",
          "longName": "PartyByIDRequest",
          "fullName": "datanode.api.v1.PartyByIDRequest",
          "description": "Request for a party given a party identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyByIDResponse",
          "longName": "PartyByIDResponse",
          "fullName": "datanode.api.v1.PartyByIDResponse",
          "description": "Response for a party given a party identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "A party, if found",
              "label": "",
              "type": "Party",
              "longType": "vega.Party",
              "fullType": "vega.Party",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyStakeRequest",
          "longName": "PartyStakeRequest",
          "fullName": "datanode.api.v1.PartyStakeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyStakeResponse",
          "longName": "PartyStakeResponse",
          "fullName": "datanode.api.v1.PartyStakeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "current_stake_available",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake_linkings",
              "description": "",
              "label": "repeated",
              "type": "StakeLinking",
              "longType": "vega.events.v1.StakeLinking",
              "fullType": "vega.events.v1.StakeLinking",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionsByPartyRequest",
          "longName": "PositionsByPartyRequest",
          "fullName": "datanode.api.v1.PositionsByPartyRequest",
          "description": "Request for a list of positions for a party\nOptionally, if a market identifier is set, the results will be filtered for that market only",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionsByPartyResponse",
          "longName": "PositionsByPartyResponse",
          "fullName": "datanode.api.v1.PositionsByPartyResponse",
          "description": "Response for a list of positions for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "positions",
              "description": "A list of 0 or more positions",
              "label": "repeated",
              "type": "Position",
              "longType": "vega.Position",
              "fullType": "vega.Position",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionsSubscribeRequest",
          "longName": "PositionsSubscribeRequest",
          "fullName": "datanode.api.v1.PositionsSubscribeRequest",
          "description": "Request to subscribe to a stream of (Positions)[#vega.Position]",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party identifier, optional field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier, optional field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionsSubscribeResponse",
          "longName": "PositionsSubscribeResponse",
          "fullName": "datanode.api.v1.PositionsSubscribeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "position",
              "description": "",
              "label": "",
              "type": "Position",
              "longType": "vega.Position",
              "fullType": "vega.Position",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradesByMarketRequest",
          "longName": "TradesByMarketRequest",
          "fullName": "datanode.api.v1.TradesByMarketRequest",
          "description": "Request for a list of trades on a market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v1.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradesByMarketResponse",
          "longName": "TradesByMarketResponse",
          "fullName": "datanode.api.v1.TradesByMarketResponse",
          "description": "Response for a list of trades on a market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "trades",
              "description": "A list of 0 or more trades",
              "label": "repeated",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradesByOrderRequest",
          "longName": "TradesByOrderRequest",
          "fullName": "datanode.api.v1.TradesByOrderRequest",
          "description": "Request for a list of trades related to an order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order_id",
              "description": "Order identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradesByOrderResponse",
          "longName": "TradesByOrderResponse",
          "fullName": "datanode.api.v1.TradesByOrderResponse",
          "description": "Response for a list of trades related to an order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "trades",
              "description": "A list of 0 or more trades",
              "label": "repeated",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradesByPartyRequest",
          "longName": "TradesByPartyRequest",
          "fullName": "datanode.api.v1.TradesByPartyRequest",
          "description": "Request for a list of trades relating to the given party\nOptionally, the list can be additionally filtered for trades by market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party identifier. Required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v1.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradesByPartyResponse",
          "longName": "TradesByPartyResponse",
          "fullName": "datanode.api.v1.TradesByPartyResponse",
          "description": "Response for a list of trades relating to a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "trades",
              "description": "A list of 0 or more trades",
              "label": "repeated",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradesSubscribeRequest",
          "longName": "TradesSubscribeRequest",
          "fullName": "datanode.api.v1.TradesSubscribeRequest",
          "description": "Request to subscribe to a stream of (Trades)[#vega.Trade]\n\nThe fields for market identifier and party identifier are optional filters:\nIf omitted all trades, for all parties on all markets will be returned on the stream\nIf market identifier is given, trades from that market will be returned on the stream\nIf party identifier is given, trades from that party will be returned on the stream\nBoth filters can be combined",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradesSubscribeResponse",
          "longName": "TradesSubscribeResponse",
          "fullName": "datanode.api.v1.TradesSubscribeResponse",
          "description": "A stream of trades",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "trades",
              "description": "A list of 0 or more trades",
              "label": "repeated",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferResponsesSubscribeRequest",
          "longName": "TransferResponsesSubscribeRequest",
          "fullName": "datanode.api.v1.TransferResponsesSubscribeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "TransferResponsesSubscribeResponse",
          "longName": "TransferResponsesSubscribeResponse",
          "fullName": "datanode.api.v1.TransferResponsesSubscribeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "response",
              "description": "",
              "label": "",
              "type": "TransferResponse",
              "longType": "vega.TransferResponse",
              "fullType": "vega.TransferResponse",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransfersRequest",
          "longName": "TransfersRequest",
          "fullName": "datanode.api.v1.TransfersRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pubkey",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "is_from",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "is_to",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransfersResponse",
          "longName": "TransfersResponse",
          "fullName": "datanode.api.v1.TransfersResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfers",
              "description": "",
              "label": "repeated",
              "type": "Transfer",
              "longType": "vega.events.v1.Transfer",
              "fullType": "vega.events.v1.Transfer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WithdrawalRequest",
          "longName": "WithdrawalRequest",
          "fullName": "datanode.api.v1.WithdrawalRequest",
          "description": "A request to get a specific withdrawal by identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The identifier of the withdrawal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WithdrawalResponse",
          "longName": "WithdrawalResponse",
          "fullName": "datanode.api.v1.WithdrawalResponse",
          "description": "A response for a withdrawal",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "withdrawal",
              "description": "The withdrawal matching the identifier from the request",
              "label": "",
              "type": "Withdrawal",
              "longType": "vega.Withdrawal",
              "fullType": "vega.Withdrawal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WithdrawalsRequest",
          "longName": "WithdrawalsRequest",
          "fullName": "datanode.api.v1.WithdrawalsRequest",
          "description": "A request to get a list of withdrawal from a given party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "The party to get the withdrawals for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WithdrawalsResponse",
          "longName": "WithdrawalsResponse",
          "fullName": "datanode.api.v1.WithdrawalsResponse",
          "description": "The response for a list of withdrawals",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "withdrawals",
              "description": "The list of withdrawals for the specified party",
              "label": "repeated",
              "type": "Withdrawal",
              "longType": "vega.Withdrawal",
              "fullType": "vega.Withdrawal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "TradingDataService",
          "longName": "TradingDataService",
          "fullName": "datanode.api.v1.TradingDataService",
          "description": "",
          "methods": [
            {
              "name": "MarketAccounts",
              "description": "Get a list of Accounts by Market",
              "requestType": "MarketAccountsRequest",
              "requestLongType": "MarketAccountsRequest",
              "requestFullType": "datanode.api.v1.MarketAccountsRequest",
              "requestStreaming": false,
              "responseType": "MarketAccountsResponse",
              "responseLongType": "MarketAccountsResponse",
              "responseFullType": "datanode.api.v1.MarketAccountsResponse",
              "responseStreaming": false
            },
            {
              "name": "PartyAccounts",
              "description": "Get a list of Accounts by Party",
              "requestType": "PartyAccountsRequest",
              "requestLongType": "PartyAccountsRequest",
              "requestFullType": "datanode.api.v1.PartyAccountsRequest",
              "requestStreaming": false,
              "responseType": "PartyAccountsResponse",
              "responseLongType": "PartyAccountsResponse",
              "responseFullType": "datanode.api.v1.PartyAccountsResponse",
              "responseStreaming": false
            },
            {
              "name": "FeeInfrastructureAccounts",
              "description": "Get a list of accounts holding infrastructure fees.\nCan be filtered by asset, there will be 1 infrastructure fee account per\nasset in the network.",
              "requestType": "FeeInfrastructureAccountsRequest",
              "requestLongType": "FeeInfrastructureAccountsRequest",
              "requestFullType": "datanode.api.v1.FeeInfrastructureAccountsRequest",
              "requestStreaming": false,
              "responseType": "FeeInfrastructureAccountsResponse",
              "responseLongType": "FeeInfrastructureAccountsResponse",
              "responseFullType": "datanode.api.v1.FeeInfrastructureAccountsResponse",
              "responseStreaming": false
            },
            {
              "name": "GlobalRewardPoolAccounts",
              "description": "Get a list of accounts holding reward pools\nCan be filtered by asset, there will be 1 reward pool account per\nasset in the network.",
              "requestType": "GlobalRewardPoolAccountsRequest",
              "requestLongType": "GlobalRewardPoolAccountsRequest",
              "requestFullType": "datanode.api.v1.GlobalRewardPoolAccountsRequest",
              "requestStreaming": false,
              "responseType": "GlobalRewardPoolAccountsResponse",
              "responseLongType": "GlobalRewardPoolAccountsResponse",
              "responseFullType": "datanode.api.v1.GlobalRewardPoolAccountsResponse",
              "responseStreaming": false
            },
            {
              "name": "Candles",
              "description": "Get a list of Candles by Market",
              "requestType": "CandlesRequest",
              "requestLongType": "CandlesRequest",
              "requestFullType": "datanode.api.v1.CandlesRequest",
              "requestStreaming": false,
              "responseType": "CandlesResponse",
              "responseLongType": "CandlesResponse",
              "responseFullType": "datanode.api.v1.CandlesResponse",
              "responseStreaming": false
            },
            {
              "name": "MarketDataByID",
              "description": "Get Market Data by Market ID",
              "requestType": "MarketDataByIDRequest",
              "requestLongType": "MarketDataByIDRequest",
              "requestFullType": "datanode.api.v1.MarketDataByIDRequest",
              "requestStreaming": false,
              "responseType": "MarketDataByIDResponse",
              "responseLongType": "MarketDataByIDResponse",
              "responseFullType": "datanode.api.v1.MarketDataByIDResponse",
              "responseStreaming": false
            },
            {
              "name": "MarketsData",
              "description": "Get a list of Market Data",
              "requestType": "MarketsDataRequest",
              "requestLongType": "MarketsDataRequest",
              "requestFullType": "datanode.api.v1.MarketsDataRequest",
              "requestStreaming": false,
              "responseType": "MarketsDataResponse",
              "responseLongType": "MarketsDataResponse",
              "responseFullType": "datanode.api.v1.MarketsDataResponse",
              "responseStreaming": false
            },
            {
              "name": "MarketByID",
              "description": "Get a Market by ID",
              "requestType": "MarketByIDRequest",
              "requestLongType": "MarketByIDRequest",
              "requestFullType": "datanode.api.v1.MarketByIDRequest",
              "requestStreaming": false,
              "responseType": "MarketByIDResponse",
              "responseLongType": "MarketByIDResponse",
              "responseFullType": "datanode.api.v1.MarketByIDResponse",
              "responseStreaming": false
            },
            {
              "name": "MarketDepth",
              "description": "Get Market Depth",
              "requestType": "MarketDepthRequest",
              "requestLongType": "MarketDepthRequest",
              "requestFullType": "datanode.api.v1.MarketDepthRequest",
              "requestStreaming": false,
              "responseType": "MarketDepthResponse",
              "responseLongType": "MarketDepthResponse",
              "responseFullType": "datanode.api.v1.MarketDepthResponse",
              "responseStreaming": false
            },
            {
              "name": "Markets",
              "description": "Get a list of Markets",
              "requestType": "MarketsRequest",
              "requestLongType": "MarketsRequest",
              "requestFullType": "datanode.api.v1.MarketsRequest",
              "requestStreaming": false,
              "responseType": "MarketsResponse",
              "responseLongType": "MarketsResponse",
              "responseFullType": "datanode.api.v1.MarketsResponse",
              "responseStreaming": false
            },
            {
              "name": "OrderByMarketAndID",
              "description": "Get an Order by Market and Order ID",
              "requestType": "OrderByMarketAndIDRequest",
              "requestLongType": "OrderByMarketAndIDRequest",
              "requestFullType": "datanode.api.v1.OrderByMarketAndIDRequest",
              "requestStreaming": false,
              "responseType": "OrderByMarketAndIDResponse",
              "responseLongType": "OrderByMarketAndIDResponse",
              "responseFullType": "datanode.api.v1.OrderByMarketAndIDResponse",
              "responseStreaming": false
            },
            {
              "name": "OrderByReference",
              "description": "Get an Order by Pending Order reference (UUID)",
              "requestType": "OrderByReferenceRequest",
              "requestLongType": "OrderByReferenceRequest",
              "requestFullType": "datanode.api.v1.OrderByReferenceRequest",
              "requestStreaming": false,
              "responseType": "OrderByReferenceResponse",
              "responseLongType": "OrderByReferenceResponse",
              "responseFullType": "datanode.api.v1.OrderByReferenceResponse",
              "responseStreaming": false
            },
            {
              "name": "OrdersByMarket",
              "description": "Get a list of Orders by Market",
              "requestType": "OrdersByMarketRequest",
              "requestLongType": "OrdersByMarketRequest",
              "requestFullType": "datanode.api.v1.OrdersByMarketRequest",
              "requestStreaming": false,
              "responseType": "OrdersByMarketResponse",
              "responseLongType": "OrdersByMarketResponse",
              "responseFullType": "datanode.api.v1.OrdersByMarketResponse",
              "responseStreaming": false
            },
            {
              "name": "OrdersByParty",
              "description": "Get a list of Orders by Party",
              "requestType": "OrdersByPartyRequest",
              "requestLongType": "OrdersByPartyRequest",
              "requestFullType": "datanode.api.v1.OrdersByPartyRequest",
              "requestStreaming": false,
              "responseType": "OrdersByPartyResponse",
              "responseLongType": "OrdersByPartyResponse",
              "responseFullType": "datanode.api.v1.OrdersByPartyResponse",
              "responseStreaming": false
            },
            {
              "name": "OrderByID",
              "description": "Get a specific order by order ID",
              "requestType": "OrderByIDRequest",
              "requestLongType": "OrderByIDRequest",
              "requestFullType": "datanode.api.v1.OrderByIDRequest",
              "requestStreaming": false,
              "responseType": "OrderByIDResponse",
              "responseLongType": "OrderByIDResponse",
              "responseFullType": "datanode.api.v1.OrderByIDResponse",
              "responseStreaming": false
            },
            {
              "name": "OrderVersionsByID",
              "description": "Get all versions of the order by its orderID",
              "requestType": "OrderVersionsByIDRequest",
              "requestLongType": "OrderVersionsByIDRequest",
              "requestFullType": "datanode.api.v1.OrderVersionsByIDRequest",
              "requestStreaming": false,
              "responseType": "OrderVersionsByIDResponse",
              "responseLongType": "OrderVersionsByIDResponse",
              "responseFullType": "datanode.api.v1.OrderVersionsByIDResponse",
              "responseStreaming": false
            },
            {
              "name": "MarginLevels",
              "description": "Get Margin Levels by Party ID",
              "requestType": "MarginLevelsRequest",
              "requestLongType": "MarginLevelsRequest",
              "requestFullType": "datanode.api.v1.MarginLevelsRequest",
              "requestStreaming": false,
              "responseType": "MarginLevelsResponse",
              "responseLongType": "MarginLevelsResponse",
              "responseFullType": "datanode.api.v1.MarginLevelsResponse",
              "responseStreaming": false
            },
            {
              "name": "Parties",
              "description": "Get a list of Parties",
              "requestType": "PartiesRequest",
              "requestLongType": "PartiesRequest",
              "requestFullType": "datanode.api.v1.PartiesRequest",
              "requestStreaming": false,
              "responseType": "PartiesResponse",
              "responseLongType": "PartiesResponse",
              "responseFullType": "datanode.api.v1.PartiesResponse",
              "responseStreaming": false
            },
            {
              "name": "PartyByID",
              "description": "Get a Party by ID",
              "requestType": "PartyByIDRequest",
              "requestLongType": "PartyByIDRequest",
              "requestFullType": "datanode.api.v1.PartyByIDRequest",
              "requestStreaming": false,
              "responseType": "PartyByIDResponse",
              "responseLongType": "PartyByIDResponse",
              "responseFullType": "datanode.api.v1.PartyByIDResponse",
              "responseStreaming": false
            },
            {
              "name": "PositionsByParty",
              "description": "Get a list of Positions by Party",
              "requestType": "PositionsByPartyRequest",
              "requestLongType": "PositionsByPartyRequest",
              "requestFullType": "datanode.api.v1.PositionsByPartyRequest",
              "requestStreaming": false,
              "responseType": "PositionsByPartyResponse",
              "responseLongType": "PositionsByPartyResponse",
              "responseFullType": "datanode.api.v1.PositionsByPartyResponse",
              "responseStreaming": false
            },
            {
              "name": "LastTrade",
              "description": "Get latest Trade",
              "requestType": "LastTradeRequest",
              "requestLongType": "LastTradeRequest",
              "requestFullType": "datanode.api.v1.LastTradeRequest",
              "requestStreaming": false,
              "responseType": "LastTradeResponse",
              "responseLongType": "LastTradeResponse",
              "responseFullType": "datanode.api.v1.LastTradeResponse",
              "responseStreaming": false
            },
            {
              "name": "TradesByMarket",
              "description": "Get a list of Trades by Market",
              "requestType": "TradesByMarketRequest",
              "requestLongType": "TradesByMarketRequest",
              "requestFullType": "datanode.api.v1.TradesByMarketRequest",
              "requestStreaming": false,
              "responseType": "TradesByMarketResponse",
              "responseLongType": "TradesByMarketResponse",
              "responseFullType": "datanode.api.v1.TradesByMarketResponse",
              "responseStreaming": false
            },
            {
              "name": "TradesByOrder",
              "description": "Get a list of Trades by Order",
              "requestType": "TradesByOrderRequest",
              "requestLongType": "TradesByOrderRequest",
              "requestFullType": "datanode.api.v1.TradesByOrderRequest",
              "requestStreaming": false,
              "responseType": "TradesByOrderResponse",
              "responseLongType": "TradesByOrderResponse",
              "responseFullType": "datanode.api.v1.TradesByOrderResponse",
              "responseStreaming": false
            },
            {
              "name": "TradesByParty",
              "description": "Get a list of Trades by Party",
              "requestType": "TradesByPartyRequest",
              "requestLongType": "TradesByPartyRequest",
              "requestFullType": "datanode.api.v1.TradesByPartyRequest",
              "requestStreaming": false,
              "responseType": "TradesByPartyResponse",
              "responseLongType": "TradesByPartyResponse",
              "responseFullType": "datanode.api.v1.TradesByPartyResponse",
              "responseStreaming": false
            },
            {
              "name": "GetProposals",
              "description": "Get governance data (proposals and votes) for all proposals",
              "requestType": "GetProposalsRequest",
              "requestLongType": "GetProposalsRequest",
              "requestFullType": "datanode.api.v1.GetProposalsRequest",
              "requestStreaming": false,
              "responseType": "GetProposalsResponse",
              "responseLongType": "GetProposalsResponse",
              "responseFullType": "datanode.api.v1.GetProposalsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetProposalsByParty",
              "description": "Get governance data (proposals and votes) for proposals by party authoring them",
              "requestType": "GetProposalsByPartyRequest",
              "requestLongType": "GetProposalsByPartyRequest",
              "requestFullType": "datanode.api.v1.GetProposalsByPartyRequest",
              "requestStreaming": false,
              "responseType": "GetProposalsByPartyResponse",
              "responseLongType": "GetProposalsByPartyResponse",
              "responseFullType": "datanode.api.v1.GetProposalsByPartyResponse",
              "responseStreaming": false
            },
            {
              "name": "GetVotesByParty",
              "description": "Get votes by party casting them",
              "requestType": "GetVotesByPartyRequest",
              "requestLongType": "GetVotesByPartyRequest",
              "requestFullType": "datanode.api.v1.GetVotesByPartyRequest",
              "requestStreaming": false,
              "responseType": "GetVotesByPartyResponse",
              "responseLongType": "GetVotesByPartyResponse",
              "responseFullType": "datanode.api.v1.GetVotesByPartyResponse",
              "responseStreaming": false
            },
            {
              "name": "GetNewMarketProposals",
              "description": "Get governance data (proposals and votes) for proposals that aim creating new markets",
              "requestType": "GetNewMarketProposalsRequest",
              "requestLongType": "GetNewMarketProposalsRequest",
              "requestFullType": "datanode.api.v1.GetNewMarketProposalsRequest",
              "requestStreaming": false,
              "responseType": "GetNewMarketProposalsResponse",
              "responseLongType": "GetNewMarketProposalsResponse",
              "responseFullType": "datanode.api.v1.GetNewMarketProposalsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetUpdateMarketProposals",
              "description": "Get governance data (proposals and votes) for proposals that aim updating markets",
              "requestType": "GetUpdateMarketProposalsRequest",
              "requestLongType": "GetUpdateMarketProposalsRequest",
              "requestFullType": "datanode.api.v1.GetUpdateMarketProposalsRequest",
              "requestStreaming": false,
              "responseType": "GetUpdateMarketProposalsResponse",
              "responseLongType": "GetUpdateMarketProposalsResponse",
              "responseFullType": "datanode.api.v1.GetUpdateMarketProposalsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetNetworkParametersProposals",
              "description": "Get governance data (proposals and votes) for proposals that aim updating Vega network parameters",
              "requestType": "GetNetworkParametersProposalsRequest",
              "requestLongType": "GetNetworkParametersProposalsRequest",
              "requestFullType": "datanode.api.v1.GetNetworkParametersProposalsRequest",
              "requestStreaming": false,
              "responseType": "GetNetworkParametersProposalsResponse",
              "responseLongType": "GetNetworkParametersProposalsResponse",
              "responseFullType": "datanode.api.v1.GetNetworkParametersProposalsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetNewAssetProposals",
              "description": "Get governance data (proposals and votes) for proposals aiming to create new assets",
              "requestType": "GetNewAssetProposalsRequest",
              "requestLongType": "GetNewAssetProposalsRequest",
              "requestFullType": "datanode.api.v1.GetNewAssetProposalsRequest",
              "requestStreaming": false,
              "responseType": "GetNewAssetProposalsResponse",
              "responseLongType": "GetNewAssetProposalsResponse",
              "responseFullType": "datanode.api.v1.GetNewAssetProposalsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetNewFreeformProposals",
              "description": "Get governance data (proposals and votes) for proposals aiming to create freeform proposals",
              "requestType": "GetNewFreeformProposalsRequest",
              "requestLongType": "GetNewFreeformProposalsRequest",
              "requestFullType": "datanode.api.v1.GetNewFreeformProposalsRequest",
              "requestStreaming": false,
              "responseType": "GetNewFreeformProposalsResponse",
              "responseLongType": "GetNewFreeformProposalsResponse",
              "responseFullType": "datanode.api.v1.GetNewFreeformProposalsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetProposalByID",
              "description": "Get governance data (proposals and votes) for a proposal located by ID",
              "requestType": "GetProposalByIDRequest",
              "requestLongType": "GetProposalByIDRequest",
              "requestFullType": "datanode.api.v1.GetProposalByIDRequest",
              "requestStreaming": false,
              "responseType": "GetProposalByIDResponse",
              "responseLongType": "GetProposalByIDResponse",
              "responseFullType": "datanode.api.v1.GetProposalByIDResponse",
              "responseStreaming": false
            },
            {
              "name": "GetProposalByReference",
              "description": "Get governance data (proposals and votes) for a proposal located by reference",
              "requestType": "GetProposalByReferenceRequest",
              "requestLongType": "GetProposalByReferenceRequest",
              "requestFullType": "datanode.api.v1.GetProposalByReferenceRequest",
              "requestStreaming": false,
              "responseType": "GetProposalByReferenceResponse",
              "responseLongType": "GetProposalByReferenceResponse",
              "responseFullType": "datanode.api.v1.GetProposalByReferenceResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveGovernance",
              "description": "Subscribe to a stream of all governance updates",
              "requestType": "ObserveGovernanceRequest",
              "requestLongType": "ObserveGovernanceRequest",
              "requestFullType": "datanode.api.v1.ObserveGovernanceRequest",
              "requestStreaming": false,
              "responseType": "ObserveGovernanceResponse",
              "responseLongType": "ObserveGovernanceResponse",
              "responseFullType": "datanode.api.v1.ObserveGovernanceResponse",
              "responseStreaming": true
            },
            {
              "name": "ObservePartyProposals",
              "description": "Subscribe to a stream of proposal updates",
              "requestType": "ObservePartyProposalsRequest",
              "requestLongType": "ObservePartyProposalsRequest",
              "requestFullType": "datanode.api.v1.ObservePartyProposalsRequest",
              "requestStreaming": false,
              "responseType": "ObservePartyProposalsResponse",
              "responseLongType": "ObservePartyProposalsResponse",
              "responseFullType": "datanode.api.v1.ObservePartyProposalsResponse",
              "responseStreaming": true
            },
            {
              "name": "ObservePartyVotes",
              "description": "Subscribe to a stream of votes cast by a specific party",
              "requestType": "ObservePartyVotesRequest",
              "requestLongType": "ObservePartyVotesRequest",
              "requestFullType": "datanode.api.v1.ObservePartyVotesRequest",
              "requestStreaming": false,
              "responseType": "ObservePartyVotesResponse",
              "responseLongType": "ObservePartyVotesResponse",
              "responseFullType": "datanode.api.v1.ObservePartyVotesResponse",
              "responseStreaming": true
            },
            {
              "name": "ObserveProposalVotes",
              "description": "Subscribe to a stream of proposal votes",
              "requestType": "ObserveProposalVotesRequest",
              "requestLongType": "ObserveProposalVotesRequest",
              "requestFullType": "datanode.api.v1.ObserveProposalVotesRequest",
              "requestStreaming": false,
              "responseType": "ObserveProposalVotesResponse",
              "responseLongType": "ObserveProposalVotesResponse",
              "responseFullType": "datanode.api.v1.ObserveProposalVotesResponse",
              "responseStreaming": true
            },
            {
              "name": "ObserveEventBus",
              "description": "Subscribe to a stream of events from the core",
              "requestType": "ObserveEventBusRequest",
              "requestLongType": "ObserveEventBusRequest",
              "requestFullType": "datanode.api.v1.ObserveEventBusRequest",
              "requestStreaming": true,
              "responseType": "ObserveEventBusResponse",
              "responseLongType": "ObserveEventBusResponse",
              "responseFullType": "datanode.api.v1.ObserveEventBusResponse",
              "responseStreaming": true
            },
            {
              "name": "GetNodeData",
              "description": "Get data of current node",
              "requestType": "GetNodeDataRequest",
              "requestLongType": "GetNodeDataRequest",
              "requestFullType": "datanode.api.v1.GetNodeDataRequest",
              "requestStreaming": false,
              "responseType": "GetNodeDataResponse",
              "responseLongType": "GetNodeDataResponse",
              "responseFullType": "datanode.api.v1.GetNodeDataResponse",
              "responseStreaming": false
            },
            {
              "name": "GetNodes",
              "description": "List all known network nodes",
              "requestType": "GetNodesRequest",
              "requestLongType": "GetNodesRequest",
              "requestFullType": "datanode.api.v1.GetNodesRequest",
              "requestStreaming": false,
              "responseType": "GetNodesResponse",
              "responseLongType": "GetNodesResponse",
              "responseFullType": "datanode.api.v1.GetNodesResponse",
              "responseStreaming": false
            },
            {
              "name": "GetNodeByID",
              "description": "Get a specific node by ID",
              "requestType": "GetNodeByIDRequest",
              "requestLongType": "GetNodeByIDRequest",
              "requestFullType": "datanode.api.v1.GetNodeByIDRequest",
              "requestStreaming": false,
              "responseType": "GetNodeByIDResponse",
              "responseLongType": "GetNodeByIDResponse",
              "responseFullType": "datanode.api.v1.GetNodeByIDResponse",
              "responseStreaming": false
            },
            {
              "name": "GetKeyRotations",
              "description": "Get all key rotations",
              "requestType": "GetKeyRotationsRequest",
              "requestLongType": "GetKeyRotationsRequest",
              "requestFullType": "datanode.api.v1.GetKeyRotationsRequest",
              "requestStreaming": false,
              "responseType": "GetKeyRotationsResponse",
              "responseLongType": "GetKeyRotationsResponse",
              "responseFullType": "datanode.api.v1.GetKeyRotationsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetKeyRotationsByNode",
              "description": "Get all key rotations by node",
              "requestType": "GetKeyRotationsByNodeRequest",
              "requestLongType": "GetKeyRotationsByNodeRequest",
              "requestFullType": "datanode.api.v1.GetKeyRotationsByNodeRequest",
              "requestStreaming": false,
              "responseType": "GetKeyRotationsByNodeResponse",
              "responseLongType": "GetKeyRotationsByNodeResponse",
              "responseFullType": "datanode.api.v1.GetKeyRotationsByNodeResponse",
              "responseStreaming": false
            },
            {
              "name": "GetEpoch",
              "description": "Get data for a specific epoch, if id omitted it gets the current epoch",
              "requestType": "GetEpochRequest",
              "requestLongType": "GetEpochRequest",
              "requestFullType": "datanode.api.v1.GetEpochRequest",
              "requestStreaming": false,
              "responseType": "GetEpochResponse",
              "responseLongType": "GetEpochResponse",
              "responseFullType": "datanode.api.v1.GetEpochResponse",
              "responseStreaming": false
            },
            {
              "name": "GetVegaTime",
              "description": "Get Time",
              "requestType": "GetVegaTimeRequest",
              "requestLongType": "GetVegaTimeRequest",
              "requestFullType": "datanode.api.v1.GetVegaTimeRequest",
              "requestStreaming": false,
              "responseType": "GetVegaTimeResponse",
              "responseLongType": "GetVegaTimeResponse",
              "responseFullType": "datanode.api.v1.GetVegaTimeResponse",
              "responseStreaming": false
            },
            {
              "name": "AccountsSubscribe",
              "description": "Subscribe to a stream of Accounts",
              "requestType": "AccountsSubscribeRequest",
              "requestLongType": "AccountsSubscribeRequest",
              "requestFullType": "datanode.api.v1.AccountsSubscribeRequest",
              "requestStreaming": false,
              "responseType": "AccountsSubscribeResponse",
              "responseLongType": "AccountsSubscribeResponse",
              "responseFullType": "datanode.api.v1.AccountsSubscribeResponse",
              "responseStreaming": true
            },
            {
              "name": "CandlesSubscribe",
              "description": "Subscribe to a stream of Candles",
              "requestType": "CandlesSubscribeRequest",
              "requestLongType": "CandlesSubscribeRequest",
              "requestFullType": "datanode.api.v1.CandlesSubscribeRequest",
              "requestStreaming": false,
              "responseType": "CandlesSubscribeResponse",
              "responseLongType": "CandlesSubscribeResponse",
              "responseFullType": "datanode.api.v1.CandlesSubscribeResponse",
              "responseStreaming": true
            },
            {
              "name": "MarginLevelsSubscribe",
              "description": "Subscribe to a stream of Margin Levels",
              "requestType": "MarginLevelsSubscribeRequest",
              "requestLongType": "MarginLevelsSubscribeRequest",
              "requestFullType": "datanode.api.v1.MarginLevelsSubscribeRequest",
              "requestStreaming": false,
              "responseType": "MarginLevelsSubscribeResponse",
              "responseLongType": "MarginLevelsSubscribeResponse",
              "responseFullType": "datanode.api.v1.MarginLevelsSubscribeResponse",
              "responseStreaming": true
            },
            {
              "name": "MarketDepthSubscribe",
              "description": "Subscribe to a stream of Market Depth",
              "requestType": "MarketDepthSubscribeRequest",
              "requestLongType": "MarketDepthSubscribeRequest",
              "requestFullType": "datanode.api.v1.MarketDepthSubscribeRequest",
              "requestStreaming": false,
              "responseType": "MarketDepthSubscribeResponse",
              "responseLongType": "MarketDepthSubscribeResponse",
              "responseFullType": "datanode.api.v1.MarketDepthSubscribeResponse",
              "responseStreaming": true
            },
            {
              "name": "MarketDepthUpdatesSubscribe",
              "description": "Subscribe to a stream of Market Depth Price Level Updates",
              "requestType": "MarketDepthUpdatesSubscribeRequest",
              "requestLongType": "MarketDepthUpdatesSubscribeRequest",
              "requestFullType": "datanode.api.v1.MarketDepthUpdatesSubscribeRequest",
              "requestStreaming": false,
              "responseType": "MarketDepthUpdatesSubscribeResponse",
              "responseLongType": "MarketDepthUpdatesSubscribeResponse",
              "responseFullType": "datanode.api.v1.MarketDepthUpdatesSubscribeResponse",
              "responseStreaming": true
            },
            {
              "name": "MarketsDataSubscribe",
              "description": "Subscribe to a stream of Markets Data",
              "requestType": "MarketsDataSubscribeRequest",
              "requestLongType": "MarketsDataSubscribeRequest",
              "requestFullType": "datanode.api.v1.MarketsDataSubscribeRequest",
              "requestStreaming": false,
              "responseType": "MarketsDataSubscribeResponse",
              "responseLongType": "MarketsDataSubscribeResponse",
              "responseFullType": "datanode.api.v1.MarketsDataSubscribeResponse",
              "responseStreaming": true
            },
            {
              "name": "OrdersSubscribe",
              "description": "Subscribe to a stream of Orders",
              "requestType": "OrdersSubscribeRequest",
              "requestLongType": "OrdersSubscribeRequest",
              "requestFullType": "datanode.api.v1.OrdersSubscribeRequest",
              "requestStreaming": false,
              "responseType": "OrdersSubscribeResponse",
              "responseLongType": "OrdersSubscribeResponse",
              "responseFullType": "datanode.api.v1.OrdersSubscribeResponse",
              "responseStreaming": true
            },
            {
              "name": "PositionsSubscribe",
              "description": "Subscribe to a stream of Positions",
              "requestType": "PositionsSubscribeRequest",
              "requestLongType": "PositionsSubscribeRequest",
              "requestFullType": "datanode.api.v1.PositionsSubscribeRequest",
              "requestStreaming": false,
              "responseType": "PositionsSubscribeResponse",
              "responseLongType": "PositionsSubscribeResponse",
              "responseFullType": "datanode.api.v1.PositionsSubscribeResponse",
              "responseStreaming": true
            },
            {
              "name": "TradesSubscribe",
              "description": "Subscribe to a stream of Trades",
              "requestType": "TradesSubscribeRequest",
              "requestLongType": "TradesSubscribeRequest",
              "requestFullType": "datanode.api.v1.TradesSubscribeRequest",
              "requestStreaming": false,
              "responseType": "TradesSubscribeResponse",
              "responseLongType": "TradesSubscribeResponse",
              "responseFullType": "datanode.api.v1.TradesSubscribeResponse",
              "responseStreaming": true
            },
            {
              "name": "TransferResponsesSubscribe",
              "description": "Subscribe to a stream of Transfer Responses",
              "requestType": "TransferResponsesSubscribeRequest",
              "requestLongType": "TransferResponsesSubscribeRequest",
              "requestFullType": "datanode.api.v1.TransferResponsesSubscribeRequest",
              "requestStreaming": false,
              "responseType": "TransferResponsesSubscribeResponse",
              "responseLongType": "TransferResponsesSubscribeResponse",
              "responseFullType": "datanode.api.v1.TransferResponsesSubscribeResponse",
              "responseStreaming": true
            },
            {
              "name": "GetNodeSignaturesAggregate",
              "description": "Get an aggregate of signatures from all the nodes of the network",
              "requestType": "GetNodeSignaturesAggregateRequest",
              "requestLongType": "GetNodeSignaturesAggregateRequest",
              "requestFullType": "datanode.api.v1.GetNodeSignaturesAggregateRequest",
              "requestStreaming": false,
              "responseType": "GetNodeSignaturesAggregateResponse",
              "responseLongType": "GetNodeSignaturesAggregateResponse",
              "responseFullType": "datanode.api.v1.GetNodeSignaturesAggregateResponse",
              "responseStreaming": false
            },
            {
              "name": "AssetByID",
              "description": "Get an asset by its identifier",
              "requestType": "AssetByIDRequest",
              "requestLongType": "AssetByIDRequest",
              "requestFullType": "datanode.api.v1.AssetByIDRequest",
              "requestStreaming": false,
              "responseType": "AssetByIDResponse",
              "responseLongType": "AssetByIDResponse",
              "responseFullType": "datanode.api.v1.AssetByIDResponse",
              "responseStreaming": false
            },
            {
              "name": "Assets",
              "description": "Get a list of all assets on Vega",
              "requestType": "AssetsRequest",
              "requestLongType": "AssetsRequest",
              "requestFullType": "datanode.api.v1.AssetsRequest",
              "requestStreaming": false,
              "responseType": "AssetsResponse",
              "responseLongType": "AssetsResponse",
              "responseFullType": "datanode.api.v1.AssetsResponse",
              "responseStreaming": false
            },
            {
              "name": "EstimateFee",
              "description": "Get an estimate for the fee to be paid for a given order",
              "requestType": "EstimateFeeRequest",
              "requestLongType": "EstimateFeeRequest",
              "requestFullType": "datanode.api.v1.EstimateFeeRequest",
              "requestStreaming": false,
              "responseType": "EstimateFeeResponse",
              "responseLongType": "EstimateFeeResponse",
              "responseFullType": "datanode.api.v1.EstimateFeeResponse",
              "responseStreaming": false
            },
            {
              "name": "EstimateMargin",
              "description": "Get an estimate for the margin required for a new order",
              "requestType": "EstimateMarginRequest",
              "requestLongType": "EstimateMarginRequest",
              "requestFullType": "datanode.api.v1.EstimateMarginRequest",
              "requestStreaming": false,
              "responseType": "EstimateMarginResponse",
              "responseLongType": "EstimateMarginResponse",
              "responseFullType": "datanode.api.v1.EstimateMarginResponse",
              "responseStreaming": false
            },
            {
              "name": "ERC20WithdrawalApproval",
              "description": "Get the bundle approval for an ERC20 withdrawal,\nthese data are being used to bundle the call to the smart contract on the ethereum bridge",
              "requestType": "ERC20WithdrawalApprovalRequest",
              "requestLongType": "ERC20WithdrawalApprovalRequest",
              "requestFullType": "datanode.api.v1.ERC20WithdrawalApprovalRequest",
              "requestStreaming": false,
              "responseType": "ERC20WithdrawalApprovalResponse",
              "responseLongType": "ERC20WithdrawalApprovalResponse",
              "responseFullType": "datanode.api.v1.ERC20WithdrawalApprovalResponse",
              "responseStreaming": false
            },
            {
              "name": "Withdrawal",
              "description": "Get a withdrawal by its identifier",
              "requestType": "WithdrawalRequest",
              "requestLongType": "WithdrawalRequest",
              "requestFullType": "datanode.api.v1.WithdrawalRequest",
              "requestStreaming": false,
              "responseType": "WithdrawalResponse",
              "responseLongType": "WithdrawalResponse",
              "responseFullType": "datanode.api.v1.WithdrawalResponse",
              "responseStreaming": false
            },
            {
              "name": "Withdrawals",
              "description": "Get withdrawals for a party",
              "requestType": "WithdrawalsRequest",
              "requestLongType": "WithdrawalsRequest",
              "requestFullType": "datanode.api.v1.WithdrawalsRequest",
              "requestStreaming": false,
              "responseType": "WithdrawalsResponse",
              "responseLongType": "WithdrawalsResponse",
              "responseFullType": "datanode.api.v1.WithdrawalsResponse",
              "responseStreaming": false
            },
            {
              "name": "Deposit",
              "description": "Get a deposit by its identifier",
              "requestType": "DepositRequest",
              "requestLongType": "DepositRequest",
              "requestFullType": "datanode.api.v1.DepositRequest",
              "requestStreaming": false,
              "responseType": "DepositResponse",
              "responseLongType": "DepositResponse",
              "responseFullType": "datanode.api.v1.DepositResponse",
              "responseStreaming": false
            },
            {
              "name": "Deposits",
              "description": "Get deposits for a party",
              "requestType": "DepositsRequest",
              "requestLongType": "DepositsRequest",
              "requestFullType": "datanode.api.v1.DepositsRequest",
              "requestStreaming": false,
              "responseType": "DepositsResponse",
              "responseLongType": "DepositsResponse",
              "responseFullType": "datanode.api.v1.DepositsResponse",
              "responseStreaming": false
            },
            {
              "name": "NetworkParameters",
              "description": "Get the network parameters",
              "requestType": "NetworkParametersRequest",
              "requestLongType": "NetworkParametersRequest",
              "requestFullType": "datanode.api.v1.NetworkParametersRequest",
              "requestStreaming": false,
              "responseType": "NetworkParametersResponse",
              "responseLongType": "NetworkParametersResponse",
              "responseFullType": "datanode.api.v1.NetworkParametersResponse",
              "responseStreaming": false
            },
            {
              "name": "LiquidityProvisions",
              "description": "Get the liquidity provision orders",
              "requestType": "LiquidityProvisionsRequest",
              "requestLongType": "LiquidityProvisionsRequest",
              "requestFullType": "datanode.api.v1.LiquidityProvisionsRequest",
              "requestStreaming": false,
              "responseType": "LiquidityProvisionsResponse",
              "responseLongType": "LiquidityProvisionsResponse",
              "responseFullType": "datanode.api.v1.LiquidityProvisionsResponse",
              "responseStreaming": false
            },
            {
              "name": "OracleSpec",
              "description": "Get an oracle spec by ID.",
              "requestType": "OracleSpecRequest",
              "requestLongType": "OracleSpecRequest",
              "requestFullType": "datanode.api.v1.OracleSpecRequest",
              "requestStreaming": false,
              "responseType": "OracleSpecResponse",
              "responseLongType": "OracleSpecResponse",
              "responseFullType": "datanode.api.v1.OracleSpecResponse",
              "responseStreaming": false
            },
            {
              "name": "OracleSpecs",
              "description": "Get the oracle specs",
              "requestType": "OracleSpecsRequest",
              "requestLongType": "OracleSpecsRequest",
              "requestFullType": "datanode.api.v1.OracleSpecsRequest",
              "requestStreaming": false,
              "responseType": "OracleSpecsResponse",
              "responseLongType": "OracleSpecsResponse",
              "responseFullType": "datanode.api.v1.OracleSpecsResponse",
              "responseStreaming": false
            },
            {
              "name": "OracleDataBySpec",
              "description": "Get oracle data that matched the given spec",
              "requestType": "OracleDataBySpecRequest",
              "requestLongType": "OracleDataBySpecRequest",
              "requestFullType": "datanode.api.v1.OracleDataBySpecRequest",
              "requestStreaming": false,
              "responseType": "OracleDataBySpecResponse",
              "responseLongType": "OracleDataBySpecResponse",
              "responseFullType": "datanode.api.v1.OracleDataBySpecResponse",
              "responseStreaming": false
            },
            {
              "name": "ListOracleData",
              "description": "Get all oracle data",
              "requestType": "ListOracleDataRequest",
              "requestLongType": "ListOracleDataRequest",
              "requestFullType": "datanode.api.v1.ListOracleDataRequest",
              "requestStreaming": false,
              "responseType": "ListOracleDataResponse",
              "responseLongType": "ListOracleDataResponse",
              "responseFullType": "datanode.api.v1.ListOracleDataResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveRewards",
              "description": "subscribe to rewards",
              "requestType": "ObserveRewardsRequest",
              "requestLongType": "ObserveRewardsRequest",
              "requestFullType": "datanode.api.v1.ObserveRewardsRequest",
              "requestStreaming": false,
              "responseType": "ObserveRewardsResponse",
              "responseLongType": "ObserveRewardsResponse",
              "responseFullType": "datanode.api.v1.ObserveRewardsResponse",
              "responseStreaming": true
            },
            {
              "name": "GetRewards",
              "description": "Get rewards",
              "requestType": "GetRewardsRequest",
              "requestLongType": "GetRewardsRequest",
              "requestFullType": "datanode.api.v1.GetRewardsRequest",
              "requestStreaming": false,
              "responseType": "GetRewardsResponse",
              "responseLongType": "GetRewardsResponse",
              "responseFullType": "datanode.api.v1.GetRewardsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetRewardSummaries",
              "description": "Get reward summaries",
              "requestType": "GetRewardSummariesRequest",
              "requestLongType": "GetRewardSummariesRequest",
              "requestFullType": "datanode.api.v1.GetRewardSummariesRequest",
              "requestStreaming": false,
              "responseType": "GetRewardSummariesResponse",
              "responseLongType": "GetRewardSummariesResponse",
              "responseFullType": "datanode.api.v1.GetRewardSummariesResponse",
              "responseStreaming": false
            },
            {
              "name": "Checkpoints",
              "description": "",
              "requestType": "CheckpointsRequest",
              "requestLongType": "CheckpointsRequest",
              "requestFullType": "datanode.api.v1.CheckpointsRequest",
              "requestStreaming": false,
              "responseType": "CheckpointsResponse",
              "responseLongType": "CheckpointsResponse",
              "responseFullType": "datanode.api.v1.CheckpointsResponse",
              "responseStreaming": false
            },
            {
              "name": "Delegations",
              "description": "Get delegation data",
              "requestType": "DelegationsRequest",
              "requestLongType": "DelegationsRequest",
              "requestFullType": "datanode.api.v1.DelegationsRequest",
              "requestStreaming": false,
              "responseType": "DelegationsResponse",
              "responseLongType": "DelegationsResponse",
              "responseFullType": "datanode.api.v1.DelegationsResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveDelegations",
              "description": "subscribe to delegation events",
              "requestType": "ObserveDelegationsRequest",
              "requestLongType": "ObserveDelegationsRequest",
              "requestFullType": "datanode.api.v1.ObserveDelegationsRequest",
              "requestStreaming": false,
              "responseType": "ObserveDelegationsResponse",
              "responseLongType": "ObserveDelegationsResponse",
              "responseFullType": "datanode.api.v1.ObserveDelegationsResponse",
              "responseStreaming": true
            },
            {
              "name": "PartyStake",
              "description": "",
              "requestType": "PartyStakeRequest",
              "requestLongType": "PartyStakeRequest",
              "requestFullType": "datanode.api.v1.PartyStakeRequest",
              "requestStreaming": false,
              "responseType": "PartyStakeResponse",
              "responseLongType": "PartyStakeResponse",
              "responseFullType": "datanode.api.v1.PartyStakeResponse",
              "responseStreaming": false
            },
            {
              "name": "Transfers",
              "description": "",
              "requestType": "TransfersRequest",
              "requestLongType": "TransfersRequest",
              "requestFullType": "datanode.api.v1.TransfersRequest",
              "requestStreaming": false,
              "responseType": "TransfersResponse",
              "responseLongType": "TransfersResponse",
              "responseFullType": "datanode.api.v1.TransfersResponse",
              "responseStreaming": false
            },
            {
              "name": "GetRiskFactors",
              "description": "Get Risk Factor data for a given market",
              "requestType": "GetRiskFactorsRequest",
              "requestLongType": "GetRiskFactorsRequest",
              "requestFullType": "datanode.api.v1.GetRiskFactorsRequest",
              "requestStreaming": false,
              "responseType": "GetRiskFactorsResponse",
              "responseLongType": "GetRiskFactorsResponse",
              "responseFullType": "datanode.api.v1.GetRiskFactorsResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "data-node/api/v2/trading_data.proto",
      "description": "",
      "package": "datanode.api.v2",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [
        {
          "name": "AccountField",
          "longName": "AccountField",
          "fullName": "datanode.api.v2.AccountField",
          "description": "A list of the properties of an account, used for grouping",
          "values": [
            {
              "name": "ACCOUNT_FIELD_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "ACCOUNT_FIELD_ID",
              "number": "1",
              "description": ""
            },
            {
              "name": "ACCOUNT_FIELD_PARTY_ID",
              "number": "2",
              "description": ""
            },
            {
              "name": "ACCOUNT_FIELD_ASSET_ID",
              "number": "3",
              "description": ""
            },
            {
              "name": "ACCOUNT_FIELD_MARKET_ID",
              "number": "4",
              "description": ""
            },
            {
              "name": "ACCOUNT_FIELD_TYPE",
              "number": "5",
              "description": ""
            }
          ]
        },
        {
          "name": "Type",
          "longName": "ListGovernanceDataRequest.Type",
          "fullName": "datanode.api.v2.ListGovernanceDataRequest.Type",
          "description": "",
          "values": [
            {
              "name": "TYPE_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "TYPE_ALL",
              "number": "1",
              "description": "List all proposals"
            },
            {
              "name": "TYPE_NEW_MARKET",
              "number": "2",
              "description": "List new market proposals"
            },
            {
              "name": "TYPE_UPDATE_MARKET",
              "number": "3",
              "description": "List update market proposals"
            },
            {
              "name": "TYPE_NETWORK_PARAMETERS",
              "number": "4",
              "description": "List change Vega network parameter proposals"
            },
            {
              "name": "TYPE_NEW_ASSET",
              "number": "5",
              "description": "New asset proposals"
            },
            {
              "name": "TYPE_NEW_FREE_FORM",
              "number": "6",
              "description": "Proposals for creating a new free form proposal"
            }
          ]
        },
        {
          "name": "TransferDirection",
          "longName": "TransferDirection",
          "fullName": "datanode.api.v2.TransferDirection",
          "description": "-- Transfers --",
          "values": [
            {
              "name": "TRANSFER_DIRECTION_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "TRANSFER_DIRECTION_TRANSFER_FROM",
              "number": "1",
              "description": ""
            },
            {
              "name": "TRANSFER_DIRECTION_TRANSFER_TO",
              "number": "2",
              "description": ""
            },
            {
              "name": "TRANSFER_DIRECTION_TRANSFER_TO_OR_FROM",
              "number": "3",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AccountEdge",
          "longName": "AccountEdge",
          "fullName": "datanode.api.v2.AccountEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "account",
              "description": "The actual account object",
              "label": "",
              "type": "Account",
              "longType": "vega.Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "A cursor which can be used to fetch further pages with reference to this account",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AccountFilter",
          "longName": "AccountFilter",
          "fullName": "datanode.api.v2.AccountFilter",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "Restrict accounts to those holding balances in this asset ID",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_ids",
              "description": "Restrict accounts to those owned by the parties in this list (pass an empty list for no filter)",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_ids",
              "description": "Restrict accounts to those connected to the marketsin this list (pass an empty list for no filter)",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "account_types",
              "description": "Restrict accounts to those connected to any of the types in this list (pass an empty list for no filter)",
              "label": "repeated",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AccountsConnection",
          "longName": "AccountsConnection",
          "fullName": "datanode.api.v2.AccountsConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "total_count",
              "description": "Total number of accounts matching the supplied filter",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "edges",
              "description": "The accounts \u0026 cursors",
              "label": "repeated",
              "type": "AccountEdge",
              "longType": "AccountEdge",
              "fullType": "datanode.api.v2.AccountEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "Information for fetching further pages",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AggregatedBalance",
          "longName": "AggregatedBalance",
          "fullName": "datanode.api.v2.AggregatedBalance",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "timestamp",
              "description": "Timestamp to of block the balance is referring to, in nanoseconds since the epoch",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "The balance of the set of requested accounts at the time above",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "account_id",
              "description": "If grouping by account ID, the account ID",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_account_id",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "If grouping by party, the party ID",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "asset_id",
              "description": "If grouping by asset, the asset ID",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_asset_id",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "If grouping by market, the market ID",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            },
            {
              "name": "account_type",
              "description": "If grouping by account type, the account type",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetEdge",
          "longName": "AssetEdge",
          "fullName": "datanode.api.v2.AssetEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssetsConnection",
          "longName": "AssetsConnection",
          "fullName": "datanode.api.v2.AssetsConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "AssetEdge",
              "longType": "AssetEdge",
              "fullType": "datanode.api.v2.AssetEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Candle",
          "longName": "Candle",
          "fullName": "datanode.api.v2.Candle",
          "description": "Represents the high, low, open, and closing prices for an interval of trading,\nreferred to commonly as a candlestick or candle",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "start",
              "description": "Timestamp for the point in time when the candle was initially created/opened, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_update",
              "description": "Timestamp for the point in time when the candle was last updated, in nanoseconds since the epoch\n- See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "high",
              "description": "Highest price for trading during the candle interval",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "low",
              "description": "Lowest price for trading during the candle interval",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "open",
              "description": "Open trade price",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "close",
              "description": "Closing trade price",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "volume",
              "description": "Total trading volume during the candle interval",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CandleDataConnection",
          "longName": "CandleDataConnection",
          "fullName": "datanode.api.v2.CandleDataConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "CandleEdge",
              "longType": "CandleEdge",
              "fullType": "datanode.api.v2.CandleEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CandleEdge",
          "longName": "CandleEdge",
          "fullName": "datanode.api.v2.CandleEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Candle",
              "longType": "Candle",
              "fullType": "datanode.api.v2.Candle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Checkpoint",
          "longName": "Checkpoint",
          "fullName": "datanode.api.v2.Checkpoint",
          "description": "-- Checkpoints --\nThe actual data regarding a checkpoint",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "block_hash",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "at_block",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckpointEdge",
          "longName": "CheckpointEdge",
          "fullName": "datanode.api.v2.CheckpointEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Checkpoint",
              "longType": "Checkpoint",
              "fullType": "datanode.api.v2.Checkpoint",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckpointsConnection",
          "longName": "CheckpointsConnection",
          "fullName": "datanode.api.v2.CheckpointsConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "CheckpointEdge",
              "longType": "CheckpointEdge",
              "fullType": "datanode.api.v2.CheckpointEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationEdge",
          "longName": "DelegationEdge",
          "fullName": "datanode.api.v2.DelegationEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Delegation",
              "longType": "vega.Delegation",
              "fullType": "vega.Delegation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DelegationsConnection",
          "longName": "DelegationsConnection",
          "fullName": "datanode.api.v2.DelegationsConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "DelegationEdge",
              "longType": "DelegationEdge",
              "fullType": "datanode.api.v2.DelegationEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DepositEdge",
          "longName": "DepositEdge",
          "fullName": "datanode.api.v2.DepositEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Deposit",
              "longType": "vega.Deposit",
              "fullType": "vega.Deposit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DepositsConnection",
          "longName": "DepositsConnection",
          "fullName": "datanode.api.v2.DepositsConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "DepositEdge",
              "longType": "DepositEdge",
              "fullType": "datanode.api.v2.DepositEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerAddedBundle",
          "longName": "ERC20MultiSigSignerAddedBundle",
          "fullName": "datanode.api.v2.ERC20MultiSigSignerAddedBundle",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "new_signer",
              "description": "The ethereum address of the signer to be removed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter",
              "description": "The ethereum address of the submitter",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "The nonce used in the signing operation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "unixnano timestamp for when the validator was added",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "The bundle of signatures from current validators to sign in the new signer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "The epoch in which the validator was added",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ERC20MultiSigSignerRemovedBundle",
          "longName": "ERC20MultiSigSignerRemovedBundle",
          "fullName": "datanode.api.v2.ERC20MultiSigSignerRemovedBundle",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "old_signer",
              "description": "The ethereum address of the signer to be removed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter",
              "description": "The ethereum address of the submitter",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "The nonce used in the signing operation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "unixnano timestamp for when the validator was added",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "The bundle of signatures from current validators to sign in the new signer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "The epoch in which the validator was removed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EstimateFeeRequest",
          "longName": "EstimateFeeRequest",
          "fullName": "datanode.api.v2.EstimateFeeRequest",
          "description": "-- Estimates --\nRequest to fetch the estimated fee if an order were to trade immediately",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "Order to estimate fees for\nthe following fields in the order are required:\nMarketID (used to specify the fee factors)\nPrice (the price at which the order could trade)\nSize (the size at which the order could eventually trade)",
              "label": "",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EstimateFeeResponse",
          "longName": "EstimateFeeResponse",
          "fullName": "datanode.api.v2.EstimateFeeResponse",
          "description": "Response to a EstimateFeeRequest, containing the estimated fees for a given order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "fee",
              "description": "Summary of the estimated fees for this order if it were to trade now",
              "label": "",
              "type": "Fee",
              "longType": "vega.Fee",
              "fullType": "vega.Fee",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EstimateMarginRequest",
          "longName": "EstimateMarginRequest",
          "fullName": "datanode.api.v2.EstimateMarginRequest",
          "description": "Request to fetch the estimated MarginLevels if an order were to trade immediately",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "Order to estimate fees for",
              "label": "",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EstimateMarginResponse",
          "longName": "EstimateMarginResponse",
          "fullName": "datanode.api.v2.EstimateMarginResponse",
          "description": "Response to a EstimateMarginRequest, containing the estimated marginLevels for a given order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "margin_levels",
              "description": "Summary of the estimated margins for this order if it were to trade now",
              "label": "",
              "type": "MarginLevels",
              "longType": "vega.MarginLevels",
              "fullType": "vega.MarginLevels",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetAssetRequest",
          "longName": "GetAssetRequest",
          "fullName": "datanode.api.v2.GetAssetRequest",
          "description": "-- Assets --",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetAssetResponse",
          "longName": "GetAssetResponse",
          "fullName": "datanode.api.v2.GetAssetResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset",
              "description": "",
              "label": "",
              "type": "Asset",
              "longType": "vega.Asset",
              "fullType": "vega.Asset",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetBalanceHistoryRequest",
          "longName": "GetBalanceHistoryRequest",
          "fullName": "datanode.api.v2.GetBalanceHistoryRequest",
          "description": "-- Balances --",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "filter",
              "description": "Limit the accounts considered according to the filter supplied",
              "label": "",
              "type": "AccountFilter",
              "longType": "AccountFilter",
              "fullType": "datanode.api.v2.AccountFilter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "group_by",
              "description": "By default the net balances of all the accounts specified by the filter are returned.\nIf a list if fields is given in group_by, split out those balances by the supplied crietera.",
              "label": "repeated",
              "type": "AccountField",
              "longType": "AccountField",
              "fullType": "datanode.api.v2.AccountField",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetBalanceHistoryResponse",
          "longName": "GetBalanceHistoryResponse",
          "fullName": "datanode.api.v2.GetBalanceHistoryResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "balances",
              "description": "",
              "label": "repeated",
              "type": "AggregatedBalance",
              "longType": "AggregatedBalance",
              "fullType": "datanode.api.v2.AggregatedBalance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetDepositRequest",
          "longName": "GetDepositRequest",
          "fullName": "datanode.api.v2.GetDepositRequest",
          "description": "-- Deposits --\nA request to get a specific deposit by identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The identifier of the deposit",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetDepositResponse",
          "longName": "GetDepositResponse",
          "fullName": "datanode.api.v2.GetDepositResponse",
          "description": "A response for a deposit",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deposit",
              "description": "The deposit matching the identifier from the request",
              "label": "",
              "type": "Deposit",
              "longType": "vega.Deposit",
              "fullType": "vega.Deposit",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetERC20ListAssetBundleRequest",
          "longName": "GetERC20ListAssetBundleRequest",
          "fullName": "datanode.api.v2.GetERC20ListAssetBundleRequest",
          "description": "A request to get an asset bundle details",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "The ID of the asset requested",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetERC20ListAssetBundleResponse",
          "longName": "GetERC20ListAssetBundleResponse",
          "fullName": "datanode.api.v2.GetERC20ListAssetBundleResponse",
          "description": "The response with all information required to bundle the call to propose an erc20 asset",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_source",
              "description": "The address of the asset on ethereum",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "vega_asset_id",
              "description": "The ID of the vega asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "The nonce, which is actually the internal reference for the proposal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "The signatures bundle as hex encoded data, forward by 0x\ne.g: 0x + sig1 + sig2 + ... + sixN",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetERC20MultiSigSignerAddedBundlesRequest",
          "longName": "GetERC20MultiSigSignerAddedBundlesRequest",
          "fullName": "datanode.api.v2.GetERC20MultiSigSignerAddedBundlesRequest",
          "description": "-- ERC20 Multi Sig --",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "The node id of the validator of which a signature bundle is required",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "The epoch which generated the bundle i.e the epoch in which the node became a tendermint validator",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls",
              "label": "",
              "type": "OffsetPagination",
              "longType": "OffsetPagination",
              "fullType": "datanode.api.v2.OffsetPagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetERC20MultiSigSignerAddedBundlesResponse",
          "longName": "GetERC20MultiSigSignerAddedBundlesResponse",
          "fullName": "datanode.api.v2.GetERC20MultiSigSignerAddedBundlesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bundles",
              "description": "list of bundles for that validator, it may have been added multiple times if removed in between",
              "label": "repeated",
              "type": "ERC20MultiSigSignerAddedBundle",
              "longType": "ERC20MultiSigSignerAddedBundle",
              "fullType": "datanode.api.v2.ERC20MultiSigSignerAddedBundle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetERC20MultiSigSignerRemovedBundlesRequest",
          "longName": "GetERC20MultiSigSignerRemovedBundlesRequest",
          "fullName": "datanode.api.v2.GetERC20MultiSigSignerRemovedBundlesRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_id",
              "description": "The node id of the validator of which a signature bundle is required",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submitter",
              "description": "The ethereum address of the validator which will submit the bundle",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_seq",
              "description": "The epoch which generated the bundle i.e the epoch in which the node was demoted from a tendermint validator",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls",
              "label": "",
              "type": "OffsetPagination",
              "longType": "OffsetPagination",
              "fullType": "datanode.api.v2.OffsetPagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetERC20MultiSigSignerRemovedBundlesResponse",
          "longName": "GetERC20MultiSigSignerRemovedBundlesResponse",
          "fullName": "datanode.api.v2.GetERC20MultiSigSignerRemovedBundlesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bundles",
              "description": "list of signer bundles for that validator",
              "label": "repeated",
              "type": "ERC20MultiSigSignerRemovedBundle",
              "longType": "ERC20MultiSigSignerRemovedBundle",
              "fullType": "datanode.api.v2.ERC20MultiSigSignerRemovedBundle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetERC20WithdrawalApprovalRequest",
          "longName": "GetERC20WithdrawalApprovalRequest",
          "fullName": "datanode.api.v2.GetERC20WithdrawalApprovalRequest",
          "description": "The request to get all information required to bundle the call to finalise the withdrawal on the erc20 bridge",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "withdrawal_id",
              "description": "The identifier of the withdrawal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetERC20WithdrawalApprovalResponse",
          "longName": "GetERC20WithdrawalApprovalResponse",
          "fullName": "datanode.api.v2.GetERC20WithdrawalApprovalResponse",
          "description": "The response with all information required to bundle the call to finalise the withdrawal on the erc20 bridge\nfunction withdraw_asset(address asset_source, uint256 asset_id, uint256 amount, uint256 expiry, uint256 nonce, bytes memory signatures)",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "asset_source",
              "description": "The address of asset on ethereum",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount to be withdrawn",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expiry",
              "description": "The expiry / until what time the request is valid",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nonce",
              "description": "The nonce, which is actually the internal reference for the withdrawal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "The signatures bundle as hex encoded data, forward by 0x\ne.g: 0x + sig1 + sig2 + ... + sixN",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_address",
              "description": "The ethereum address to withdraw the funds to, 0x prefixed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "creation",
              "description": "The creation timestamps",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetEpochRequest",
          "longName": "GetEpochRequest",
          "fullName": "datanode.api.v2.GetEpochRequest",
          "description": "-- Epochs --",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetEpochResponse",
          "longName": "GetEpochResponse",
          "fullName": "datanode.api.v2.GetEpochResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "",
              "label": "",
              "type": "Epoch",
              "longType": "vega.Epoch",
              "fullType": "vega.Epoch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetLatestMarketDataRequest",
          "longName": "GetLatestMarketDataRequest",
          "fullName": "datanode.api.v2.GetLatestMarketDataRequest",
          "description": "Request for the latest market data for a given market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetLatestMarketDataResponse",
          "longName": "GetLatestMarketDataResponse",
          "fullName": "datanode.api.v2.GetLatestMarketDataResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_data",
              "description": "Market identifier, required field",
              "label": "",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetLatestMarketDepthRequest",
          "longName": "GetLatestMarketDepthRequest",
          "fullName": "datanode.api.v2.GetLatestMarketDepthRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_depth",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_max_depth",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetLatestMarketDepthResponse",
          "longName": "GetLatestMarketDepthResponse",
          "fullName": "datanode.api.v2.GetLatestMarketDepthResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy",
              "description": "Zero or more price levels for the buy side of the market depth data",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "vega.PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell",
              "description": "Zero or more price levels for the sell side of the market depth data",
              "label": "repeated",
              "type": "PriceLevel",
              "longType": "vega.PriceLevel",
              "fullType": "vega.PriceLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_trade",
              "description": "Last trade recorded on Vega at the time of retrieving the `MarketDepthResponse`",
              "label": "",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sequence_number",
              "description": "Sequence number incremented after each update",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetMarketDataHistoryByIDRequest",
          "longName": "GetMarketDataHistoryByIDRequest",
          "fullName": "datanode.api.v2.GetMarketDataHistoryByIDRequest",
          "description": "Request for Market Data History",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_timestamp",
              "description": "Optional Unix time in nanoseconds",
              "label": "optional",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_start_timestamp",
              "defaultValue": ""
            },
            {
              "name": "end_timestamp",
              "description": "Optional Unix time in nanoseconds",
              "label": "optional",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_end_timestamp",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination control",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            },
            {
              "name": "offset_pagination",
              "description": "Optional offset pagination control in order to support existing version of the Market Data History query\nthat is available in the GraphQL API. That function has been deprecated, but until it's removed we have\nadded this to support pagination queries that use an offset.",
              "label": "optional",
              "type": "OffsetPagination",
              "longType": "OffsetPagination",
              "fullType": "datanode.api.v2.OffsetPagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_offset_pagination",
              "defaultValue": "",
              "options": {
                "deprecated": true
              }
            }
          ]
        },
        {
          "name": "GetMarketDataHistoryByIDResponse",
          "longName": "GetMarketDataHistoryByIDResponse",
          "fullName": "datanode.api.v2.GetMarketDataHistoryByIDResponse",
          "description": "Response for Market Data History",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_data",
              "description": "",
              "label": "",
              "type": "MarketDataConnection",
              "longType": "MarketDataConnection",
              "fullType": "datanode.api.v2.MarketDataConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNetworkDataRequest",
          "longName": "GetNetworkDataRequest",
          "fullName": "datanode.api.v2.GetNetworkDataRequest",
          "description": "-- Nodes --",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetNetworkDataResponse",
          "longName": "GetNetworkDataResponse",
          "fullName": "datanode.api.v2.GetNetworkDataResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_data",
              "description": "",
              "label": "",
              "type": "NodeData",
              "longType": "vega.NodeData",
              "fullType": "vega.NodeData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNetworkLimitsRequest",
          "longName": "GetNetworkLimitsRequest",
          "fullName": "datanode.api.v2.GetNetworkLimitsRequest",
          "description": "-- Network Limits --\nRequest for the current network limits",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetNetworkLimitsResponse",
          "longName": "GetNetworkLimitsResponse",
          "fullName": "datanode.api.v2.GetNetworkLimitsResponse",
          "description": "Response for the current network limits",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "limits",
              "description": "",
              "label": "",
              "type": "NetworkLimits",
              "longType": "vega.NetworkLimits",
              "fullType": "vega.NetworkLimits",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNodeRequest",
          "longName": "GetNodeRequest",
          "fullName": "datanode.api.v2.GetNodeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNodeResponse",
          "longName": "GetNodeResponse",
          "fullName": "datanode.api.v2.GetNodeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Node",
              "longType": "vega.Node",
              "fullType": "vega.Node",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetOracleSpecRequest",
          "longName": "GetOracleSpecRequest",
          "fullName": "datanode.api.v2.GetOracleSpecRequest",
          "description": "The request to get a specific oracle spec by identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "oracle_spec_id",
              "description": "The ID to get the oracle spec for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetOracleSpecResponse",
          "longName": "GetOracleSpecResponse",
          "fullName": "datanode.api.v2.GetOracleSpecResponse",
          "description": "The response for a oracle spec",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "oracle_spec",
              "description": "The oracle spec matching the ID.",
              "label": "",
              "type": "OracleSpec",
              "longType": "oracles.v1.OracleSpec",
              "fullType": "oracles.v1.OracleSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetOrderRequest",
          "longName": "GetOrderRequest",
          "fullName": "datanode.api.v2.GetOrderRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "order_id",
              "description": "Order identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Optional version",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetOrderResponse",
          "longName": "GetOrderResponse",
          "fullName": "datanode.api.v2.GetOrderResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "An order, if found",
              "label": "",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetRiskFactorsRequest",
          "longName": "GetRiskFactorsRequest",
          "fullName": "datanode.api.v2.GetRiskFactorsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetRiskFactorsResponse",
          "longName": "GetRiskFactorsResponse",
          "fullName": "datanode.api.v2.GetRiskFactorsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "risk_factor",
              "description": "",
              "label": "",
              "type": "RiskFactor",
              "longType": "vega.RiskFactor",
              "fullType": "vega.RiskFactor",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetStakeRequest",
          "longName": "GetStakeRequest",
          "fullName": "datanode.api.v2.GetStakeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetStakeResponse",
          "longName": "GetStakeResponse",
          "fullName": "datanode.api.v2.GetStakeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "current_stake_available",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake_linkings",
              "description": "",
              "label": "",
              "type": "StakesConnection",
              "longType": "StakesConnection",
              "fullType": "datanode.api.v2.StakesConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetWithdrawalRequest",
          "longName": "GetWithdrawalRequest",
          "fullName": "datanode.api.v2.GetWithdrawalRequest",
          "description": "-- Withdrawals --\nA request to get a specific withdrawal by identifier",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The identifier of the withdrawal",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetWithdrawalResponse",
          "longName": "GetWithdrawalResponse",
          "fullName": "datanode.api.v2.GetWithdrawalResponse",
          "description": "A response for a withdrawal request",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "withdrawal",
              "description": "The withdrawal matching the identifier from the request",
              "label": "",
              "type": "Withdrawal",
              "longType": "vega.Withdrawal",
              "fullType": "vega.Withdrawal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GovernanceDataConnection",
          "longName": "GovernanceDataConnection",
          "fullName": "datanode.api.v2.GovernanceDataConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "GovernanceDataEdge",
              "longType": "GovernanceDataEdge",
              "fullType": "datanode.api.v2.GovernanceDataEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GovernanceDataEdge",
          "longName": "GovernanceDataEdge",
          "fullName": "datanode.api.v2.GovernanceDataEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "GovernanceData",
              "longType": "vega.GovernanceData",
              "fullType": "vega.GovernanceData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InfoRequest",
          "longName": "InfoRequest",
          "fullName": "datanode.api.v2.InfoRequest",
          "description": "-- Info --\nnode info",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "InfoResponse",
          "longName": "InfoResponse",
          "fullName": "datanode.api.v2.InfoResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "A semver formatted version of the data node",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "commit_hash",
              "description": "The commit hash from which the data-node was built",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "IntervalToCandleId",
          "longName": "IntervalToCandleId",
          "fullName": "datanode.api.v2.IntervalToCandleId",
          "description": "Maps an interval for a given market to its corresponding candle_id",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "interval",
              "description": "The interval for the candle",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "candle_id",
              "description": "The unique id of the candle",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvisionsConnection",
          "longName": "LiquidityProvisionsConnection",
          "fullName": "datanode.api.v2.LiquidityProvisionsConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "LiquidityProvisionsEdge",
              "longType": "LiquidityProvisionsEdge",
              "fullType": "datanode.api.v2.LiquidityProvisionsEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidityProvisionsEdge",
          "longName": "LiquidityProvisionsEdge",
          "fullName": "datanode.api.v2.LiquidityProvisionsEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "LiquidityProvision",
              "longType": "vega.LiquidityProvision",
              "fullType": "vega.LiquidityProvision",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAccountsRequest",
          "longName": "ListAccountsRequest",
          "fullName": "datanode.api.v2.ListAccountsRequest",
          "description": "-- Accounts --",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "filter",
              "description": "Limit the accounts considered according to the filter supplied",
              "label": "",
              "type": "AccountFilter",
              "longType": "AccountFilter",
              "fullType": "datanode.api.v2.AccountFilter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination control",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAccountsResponse",
          "longName": "ListAccountsResponse",
          "fullName": "datanode.api.v2.ListAccountsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "accounts",
              "description": "Paged connection with 0 or more accounts",
              "label": "",
              "type": "AccountsConnection",
              "longType": "AccountsConnection",
              "fullType": "datanode.api.v2.AccountsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAssetsRequest",
          "longName": "ListAssetsRequest",
          "fullName": "datanode.api.v2.ListAssetsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "asset_id",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_asset_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAssetsResponse",
          "longName": "ListAssetsResponse",
          "fullName": "datanode.api.v2.ListAssetsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "assets",
              "description": "",
              "label": "",
              "type": "AssetsConnection",
              "longType": "AssetsConnection",
              "fullType": "datanode.api.v2.AssetsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCandleDataRequest",
          "longName": "ListCandleDataRequest",
          "fullName": "datanode.api.v2.ListCandleDataRequest",
          "description": "Request for a list of candles for a market at an interval",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "candle_id",
              "description": "Candle identifier, required field.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_timestamp",
              "description": "Timestamp to retrieve candles since, in nanoseconds since the epoch,\nrequired field - See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_timestamp",
              "description": "Timestamp to retrieve candles since, in nanoseconds since the epoch,\nrequired field - See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "interval",
              "description": "Time interval for the candles, required field specified as a valid postgres interval",
              "label": "",
              "type": "Interval",
              "longType": "vega.Interval",
              "fullType": "vega.Interval",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "pagination controls",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCandleDataResponse",
          "longName": "ListCandleDataResponse",
          "fullName": "datanode.api.v2.ListCandleDataResponse",
          "description": "Response for list of candles for a market at an interval",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "candles",
              "description": "A list of 0 or more candles",
              "label": "",
              "type": "CandleDataConnection",
              "longType": "CandleDataConnection",
              "fullType": "datanode.api.v2.CandleDataConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCandleIntervalsRequest",
          "longName": "ListCandleIntervalsRequest",
          "fullName": "datanode.api.v2.ListCandleIntervalsRequest",
          "description": "-- Candles --\nRequest to get a list of supported intervals for the given market along with the corresponding candle id",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "The unique identifier for the market",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCandleIntervalsResponse",
          "longName": "ListCandleIntervalsResponse",
          "fullName": "datanode.api.v2.ListCandleIntervalsResponse",
          "description": "A list of interval to candle id mappings for a given market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "interval_to_candle_id",
              "description": "",
              "label": "repeated",
              "type": "IntervalToCandleId",
              "longType": "IntervalToCandleId",
              "fullType": "datanode.api.v2.IntervalToCandleId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCheckpointsRequest",
          "longName": "ListCheckpointsRequest",
          "fullName": "datanode.api.v2.ListCheckpointsRequest",
          "description": "Request to get all checkpoints. Currently no fields, probably will be expanded to allow filtering data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListCheckpointsResponse",
          "longName": "ListCheckpointsResponse",
          "fullName": "datanode.api.v2.ListCheckpointsResponse",
          "description": "Response message containing all checkpoints requested",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "checkpoints",
              "description": "",
              "label": "",
              "type": "CheckpointsConnection",
              "longType": "CheckpointsConnection",
              "fullType": "datanode.api.v2.CheckpointsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDelegationsRequest",
          "longName": "ListDelegationsRequest",
          "fullName": "datanode.api.v2.ListDelegationsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "node_id",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_node_id",
              "defaultValue": ""
            },
            {
              "name": "epoch_id",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDelegationsResponse",
          "longName": "ListDelegationsResponse",
          "fullName": "datanode.api.v2.ListDelegationsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegations",
              "description": "",
              "label": "",
              "type": "DelegationsConnection",
              "longType": "DelegationsConnection",
              "fullType": "datanode.api.v2.DelegationsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDepositsRequest",
          "longName": "ListDepositsRequest",
          "fullName": "datanode.api.v2.ListDepositsRequest",
          "description": "A request to list all deposits for a given party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "The identifier of a party whose deposits are to be retrieved",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination control",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDepositsResponse",
          "longName": "ListDepositsResponse",
          "fullName": "datanode.api.v2.ListDepositsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "deposits",
              "description": "",
              "label": "",
              "type": "DepositsConnection",
              "longType": "DepositsConnection",
              "fullType": "datanode.api.v2.DepositsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListGovernanceDataRequest",
          "longName": "ListGovernanceDataRequest",
          "fullName": "datanode.api.v2.ListGovernanceDataRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "proposal_state",
              "description": "",
              "label": "optional",
              "type": "State",
              "longType": "vega.Proposal.State",
              "fullType": "vega.Proposal.State",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proposal_state",
              "defaultValue": ""
            },
            {
              "name": "proposal_type",
              "description": "",
              "label": "optional",
              "type": "Type",
              "longType": "ListGovernanceDataRequest.Type",
              "fullType": "datanode.api.v2.ListGovernanceDataRequest.Type",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proposal_type",
              "defaultValue": ""
            },
            {
              "name": "proposer_party_id",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proposer_party_id",
              "defaultValue": ""
            },
            {
              "name": "proposal_reference",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proposal_reference",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListGovernanceDataResponse",
          "longName": "ListGovernanceDataResponse",
          "fullName": "datanode.api.v2.ListGovernanceDataResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "connection",
              "description": "",
              "label": "",
              "type": "GovernanceDataConnection",
              "longType": "GovernanceDataConnection",
              "fullType": "datanode.api.v2.GovernanceDataConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListLatestMarketDataRequest",
          "longName": "ListLatestMarketDataRequest",
          "fullName": "datanode.api.v2.ListLatestMarketDataRequest",
          "description": "Request to get the latest market data for every market",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListLatestMarketDataResponse",
          "longName": "ListLatestMarketDataResponse",
          "fullName": "datanode.api.v2.ListLatestMarketDataResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "markets_data",
              "description": "",
              "label": "repeated",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListLiquidityProvisionsRequest",
          "longName": "ListLiquidityProvisionsRequest",
          "fullName": "datanode.api.v2.ListLiquidityProvisionsRequest",
          "description": "-- Liquidity Provisions --",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "The target market for the liquidity provision orders",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "The party which submitted the liquidity provision orders",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "The reference of the liquidity provision",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_reference",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListLiquidityProvisionsResponse",
          "longName": "ListLiquidityProvisionsResponse",
          "fullName": "datanode.api.v2.ListLiquidityProvisionsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "liquidity_provisions",
              "description": "",
              "label": "",
              "type": "LiquidityProvisionsConnection",
              "longType": "LiquidityProvisionsConnection",
              "fullType": "datanode.api.v2.LiquidityProvisionsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListMarginLevelsRequest",
          "longName": "ListMarginLevelsRequest",
          "fullName": "datanode.api.v2.ListMarginLevelsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListMarginLevelsResponse",
          "longName": "ListMarginLevelsResponse",
          "fullName": "datanode.api.v2.ListMarginLevelsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "margin_levels",
              "description": "",
              "label": "",
              "type": "MarginConnection",
              "longType": "MarginConnection",
              "fullType": "datanode.api.v2.MarginConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListMarketsRequest",
          "longName": "ListMarketsRequest",
          "fullName": "datanode.api.v2.ListMarketsRequest",
          "description": "-- Markets --",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListMarketsResponse",
          "longName": "ListMarketsResponse",
          "fullName": "datanode.api.v2.ListMarketsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "markets",
              "description": "",
              "label": "",
              "type": "MarketConnection",
              "longType": "MarketConnection",
              "fullType": "datanode.api.v2.MarketConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNetworkParametersRequest",
          "longName": "ListNetworkParametersRequest",
          "fullName": "datanode.api.v2.ListNetworkParametersRequest",
          "description": "A message requesting for the list of all network parameters",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNetworkParametersResponse",
          "longName": "ListNetworkParametersResponse",
          "fullName": "datanode.api.v2.ListNetworkParametersResponse",
          "description": "A response containing all of the vega network parameters",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "network_parameters",
              "description": "",
              "label": "",
              "type": "NetworkParameterConnection",
              "longType": "NetworkParameterConnection",
              "fullType": "datanode.api.v2.NetworkParameterConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNodesRequest",
          "longName": "ListNodesRequest",
          "fullName": "datanode.api.v2.ListNodesRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch_seq",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch_seq",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNodesResponse",
          "longName": "ListNodesResponse",
          "fullName": "datanode.api.v2.ListNodesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "nodes",
              "description": "",
              "label": "",
              "type": "NodesConnection",
              "longType": "NodesConnection",
              "fullType": "datanode.api.v2.NodesConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOracleDataRequest",
          "longName": "ListOracleDataRequest",
          "fullName": "datanode.api.v2.ListOracleDataRequest",
          "description": "The request to get all seen oracle data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "oracle_spec_id",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_oracle_spec_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Pagination controls",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOracleDataResponse",
          "longName": "ListOracleDataResponse",
          "fullName": "datanode.api.v2.ListOracleDataResponse",
          "description": "The response to get all seen oracle data",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "oracle_data",
              "description": "The list of seen oracle data",
              "label": "",
              "type": "OracleDataConnection",
              "longType": "OracleDataConnection",
              "fullType": "datanode.api.v2.OracleDataConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOracleSpecsRequest",
          "longName": "ListOracleSpecsRequest",
          "fullName": "datanode.api.v2.ListOracleSpecsRequest",
          "description": "The request to get all active oracle specs",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "Pagination controls",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOracleSpecsResponse",
          "longName": "ListOracleSpecsResponse",
          "fullName": "datanode.api.v2.ListOracleSpecsResponse",
          "description": "The response to get all active oracle specs",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "oracle_specs",
              "description": "The list of active oracle specs",
              "label": "",
              "type": "OracleSpecsConnection",
              "longType": "OracleSpecsConnection",
              "fullType": "datanode.api.v2.OracleSpecsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOrderVersionsRequest",
          "longName": "ListOrderVersionsRequest",
          "fullName": "datanode.api.v2.ListOrderVersionsRequest",
          "description": "-- Orders --",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "order_id",
              "description": "Order identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination control",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOrderVersionsResponse",
          "longName": "ListOrderVersionsResponse",
          "fullName": "datanode.api.v2.ListOrderVersionsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "orders",
              "description": "Paged connection with 0 or more order versions",
              "label": "",
              "type": "OrderConnection",
              "longType": "OrderConnection",
              "fullType": "datanode.api.v2.OrderConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOrdersRequest",
          "longName": "ListOrdersRequest",
          "fullName": "datanode.api.v2.ListOrdersRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party identifier",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            },
            {
              "name": "reference",
              "description": "Reference",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_reference",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination control",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOrdersResponse",
          "longName": "ListOrdersResponse",
          "fullName": "datanode.api.v2.ListOrdersResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "orders",
              "description": "Paged connection with 0 or more orders",
              "label": "",
              "type": "OrderConnection",
              "longType": "OrderConnection",
              "fullType": "datanode.api.v2.OrderConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPartiesRequest",
          "longName": "ListPartiesRequest",
          "fullName": "datanode.api.v2.ListPartiesRequest",
          "description": "-- Parties --",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPartiesResponse",
          "longName": "ListPartiesResponse",
          "fullName": "datanode.api.v2.ListPartiesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party",
              "description": "",
              "label": "",
              "type": "PartyConnection",
              "longType": "PartyConnection",
              "fullType": "datanode.api.v2.PartyConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPositionsRequest",
          "longName": "ListPositionsRequest",
          "fullName": "datanode.api.v2.ListPositionsRequest",
          "description": "-- Positions --\nRequest for a list of positions for a party\nOptionally, if a market identifier is set, the results will be filtered for that market only",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party identifier, required field",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination control",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPositionsResponse",
          "longName": "ListPositionsResponse",
          "fullName": "datanode.api.v2.ListPositionsResponse",
          "description": "Response for a list of positions for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "positions",
              "description": "A list of 0 or more positions",
              "label": "",
              "type": "PositionConnection",
              "longType": "PositionConnection",
              "fullType": "datanode.api.v2.PositionConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListRewardSummariesRequest",
          "longName": "ListRewardSummariesRequest",
          "fullName": "datanode.api.v2.ListRewardSummariesRequest",
          "description": "A request to get reward details for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListRewardSummariesResponse",
          "longName": "ListRewardSummariesResponse",
          "fullName": "datanode.api.v2.ListRewardSummariesResponse",
          "description": "The return message with reward details in for a single party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "summaries",
              "description": "",
              "label": "repeated",
              "type": "RewardSummary",
              "longType": "vega.RewardSummary",
              "fullType": "vega.RewardSummary",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListRewardsRequest",
          "longName": "ListRewardsRequest",
          "fullName": "datanode.api.v2.ListRewardsRequest",
          "description": "A request to get reward details for a party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListRewardsResponse",
          "longName": "ListRewardsResponse",
          "fullName": "datanode.api.v2.ListRewardsResponse",
          "description": "The return message with reward details in for a single party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "rewards",
              "description": "",
              "label": "",
              "type": "RewardsConnection",
              "longType": "RewardsConnection",
              "fullType": "datanode.api.v2.RewardsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTradesRequest",
          "longName": "ListTradesRequest",
          "fullName": "datanode.api.v2.ListTradesRequest",
          "description": "-- Trades --",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            },
            {
              "name": "order_id",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_order_id",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTradesResponse",
          "longName": "ListTradesResponse",
          "fullName": "datanode.api.v2.ListTradesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "trades",
              "description": "",
              "label": "",
              "type": "TradeConnection",
              "longType": "TradeConnection",
              "fullType": "datanode.api.v2.TradeConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTransfersRequest",
          "longName": "ListTransfersRequest",
          "fullName": "datanode.api.v2.ListTransfersRequest",
          "description": "Request for transfers",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "pubkey",
              "description": "Public key of which transfers to request",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pubkey",
              "defaultValue": ""
            },
            {
              "name": "direction",
              "description": "Directions to include in the response data",
              "label": "",
              "type": "TransferDirection",
              "longType": "TransferDirection",
              "fullType": "datanode.api.v2.TransferDirection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination cntrol",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTransfersResponse",
          "longName": "ListTransfersResponse",
          "fullName": "datanode.api.v2.ListTransfersResponse",
          "description": "Response for transfers",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transfers",
              "description": "",
              "label": "",
              "type": "TransferConnection",
              "longType": "TransferConnection",
              "fullType": "datanode.api.v2.TransferConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListVotesRequest",
          "longName": "ListVotesRequest",
          "fullName": "datanode.api.v2.ListVotesRequest",
          "description": "-- Votes --\nRequest for Votes",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party of which the votes are requested",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination control",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListVotesResponse",
          "longName": "ListVotesResponse",
          "fullName": "datanode.api.v2.ListVotesResponse",
          "description": "Response for Votes",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "votes",
              "description": "",
              "label": "",
              "type": "VoteConnection",
              "longType": "VoteConnection",
              "fullType": "datanode.api.v2.VoteConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListWithdrawalsRequest",
          "longName": "ListWithdrawalsRequest",
          "fullName": "datanode.api.v2.ListWithdrawalsRequest",
          "description": "List all withdrawals for a given party",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "The identifier for the party whose withdrawals we want to retrieve",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "Optional pagination information to limit the data that is returned",
              "label": "optional",
              "type": "Pagination",
              "longType": "Pagination",
              "fullType": "datanode.api.v2.Pagination",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pagination",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListWithdrawalsResponse",
          "longName": "ListWithdrawalsResponse",
          "fullName": "datanode.api.v2.ListWithdrawalsResponse",
          "description": "A paged connection with the requested withdrawal information",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "withdrawals",
              "description": "",
              "label": "",
              "type": "WithdrawalsConnection",
              "longType": "WithdrawalsConnection",
              "fullType": "datanode.api.v2.WithdrawalsConnection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarginConnection",
          "longName": "MarginConnection",
          "fullName": "datanode.api.v2.MarginConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "MarginEdge",
              "longType": "MarginEdge",
              "fullType": "datanode.api.v2.MarginEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarginEdge",
          "longName": "MarginEdge",
          "fullName": "datanode.api.v2.MarginEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "MarginLevels",
              "longType": "vega.MarginLevels",
              "fullType": "vega.MarginLevels",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketConnection",
          "longName": "MarketConnection",
          "fullName": "datanode.api.v2.MarketConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "MarketEdge",
              "longType": "MarketEdge",
              "fullType": "datanode.api.v2.MarketEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDataConnection",
          "longName": "MarketDataConnection",
          "fullName": "datanode.api.v2.MarketDataConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "MarketDataEdge",
              "longType": "MarketDataEdge",
              "fullType": "datanode.api.v2.MarketDataEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketDataEdge",
          "longName": "MarketDataEdge",
          "fullName": "datanode.api.v2.MarketDataEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketEdge",
          "longName": "MarketEdge",
          "fullName": "datanode.api.v2.MarketEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Market",
              "longType": "vega.Market",
              "fullType": "vega.Market",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketsDataSubscribeRequest",
          "longName": "MarketsDataSubscribeRequest",
          "fullName": "datanode.api.v2.MarketsDataSubscribeRequest",
          "description": "Request to subscribe to a stream of MarketsData\nOptionally, the list can be additionally filtered by market",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MarketsDataSubscribeResponse",
          "longName": "MarketsDataSubscribeResponse",
          "fullName": "datanode.api.v2.MarketsDataSubscribeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_data",
              "description": "",
              "label": "repeated",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NetworkParameterConnection",
          "longName": "NetworkParameterConnection",
          "fullName": "datanode.api.v2.NetworkParameterConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "NetworkParameterEdge",
              "longType": "NetworkParameterEdge",
              "fullType": "datanode.api.v2.NetworkParameterEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NetworkParameterEdge",
          "longName": "NetworkParameterEdge",
          "fullName": "datanode.api.v2.NetworkParameterEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "NetworkParameter",
              "longType": "vega.NetworkParameter",
              "fullType": "vega.NetworkParameter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeEdge",
          "longName": "NodeEdge",
          "fullName": "datanode.api.v2.NodeEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Node",
              "longType": "vega.Node",
              "fullType": "vega.Node",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodesConnection",
          "longName": "NodesConnection",
          "fullName": "datanode.api.v2.NodesConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "NodeEdge",
              "longType": "NodeEdge",
              "fullType": "datanode.api.v2.NodeEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveAccountsRequest",
          "longName": "ObserveAccountsRequest",
          "fullName": "datanode.api.v2.ObserveAccountsRequest",
          "description": "Request to subscribe to a stream of (Accounts)[#vega.Account]",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "asset",
              "description": "Asset identifier",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Account type to subscribe to, required field",
              "label": "",
              "type": "AccountType",
              "longType": "vega.AccountType",
              "fullType": "vega.AccountType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveAccountsResponse",
          "longName": "ObserveAccountsResponse",
          "fullName": "datanode.api.v2.ObserveAccountsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "account",
              "description": "",
              "label": "",
              "type": "Account",
              "longType": "vega.Account",
              "fullType": "vega.Account",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveCandleDataRequest",
          "longName": "ObserveCandleDataRequest",
          "fullName": "datanode.api.v2.ObserveCandleDataRequest",
          "description": "Request to subscribe to a stream of (Candles)[#vega.Candle]",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "candle_id",
              "description": "The unique identifier for the candle",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveCandleDataResponse",
          "longName": "ObserveCandleDataResponse",
          "fullName": "datanode.api.v2.ObserveCandleDataResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "candle",
              "description": "",
              "label": "",
              "type": "Candle",
              "longType": "Candle",
              "fullType": "datanode.api.v2.Candle",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveMarketsDataRequest",
          "longName": "ObserveMarketsDataRequest",
          "fullName": "datanode.api.v2.ObserveMarketsDataRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_ids",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveMarketsDataResponse",
          "longName": "ObserveMarketsDataResponse",
          "fullName": "datanode.api.v2.ObserveMarketsDataResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_data",
              "description": "",
              "label": "repeated",
              "type": "MarketData",
              "longType": "vega.MarketData",
              "fullType": "vega.MarketData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveMarketsDepthRequest",
          "longName": "ObserveMarketsDepthRequest",
          "fullName": "datanode.api.v2.ObserveMarketsDepthRequest",
          "description": "-- Market Data --",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_ids",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveMarketsDepthResponse",
          "longName": "ObserveMarketsDepthResponse",
          "fullName": "datanode.api.v2.ObserveMarketsDepthResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_depth",
              "description": "",
              "label": "repeated",
              "type": "MarketDepth",
              "longType": "vega.MarketDepth",
              "fullType": "vega.MarketDepth",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveMarketsDepthUpdatesRequest",
          "longName": "ObserveMarketsDepthUpdatesRequest",
          "fullName": "datanode.api.v2.ObserveMarketsDepthUpdatesRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "market_ids",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveMarketsDepthUpdatesResponse",
          "longName": "ObserveMarketsDepthUpdatesResponse",
          "fullName": "datanode.api.v2.ObserveMarketsDepthUpdatesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "update",
              "description": "",
              "label": "repeated",
              "type": "MarketDepthUpdate",
              "longType": "vega.MarketDepthUpdate",
              "fullType": "vega.MarketDepthUpdate",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveTradesRequest",
          "longName": "ObserveTradesRequest",
          "fullName": "datanode.api.v2.ObserveTradesRequest",
          "description": "Request to subscribe to a stream of (Trades)[#vega.Trade]\n\nThe fields for market identifier and party identifier are optional filters:\nIf omitted all trades, for all parties on all markets will be returned on the stream\nIf market identifier is given, trades from that market will be returned on the stream\nIf party identifier is given, trades from that party will be returned on the stream\nBoth filters can be combined",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "market_id",
              "description": "Market identifier",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_market_id",
              "defaultValue": ""
            },
            {
              "name": "party_id",
              "description": "Party identifier",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveTradesResponse",
          "longName": "ObserveTradesResponse",
          "fullName": "datanode.api.v2.ObserveTradesResponse",
          "description": "A stream of trades",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "trades",
              "description": "A list of 0 or more trades",
              "label": "repeated",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveVotesRequest",
          "longName": "ObserveVotesRequest",
          "fullName": "datanode.api.v2.ObserveVotesRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "party_id",
              "description": "Party of which the votes are requested",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_party_id",
              "defaultValue": ""
            },
            {
              "name": "proposal_id",
              "description": "Option proposal id for which the votes are requested",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proposal_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObserveVotesResponse",
          "longName": "ObserveVotesResponse",
          "fullName": "datanode.api.v2.ObserveVotesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "vote",
              "description": "",
              "label": "",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OffsetPagination",
          "longName": "OffsetPagination",
          "fullName": "datanode.api.v2.OffsetPagination",
          "description": "-- Pagination --\nPagination controls",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "skip",
              "description": "Skip the number of records specified, default is 0",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "limit",
              "description": "Limit the number of returned records to the value specified, default is 50",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "descending",
              "description": "Descending reverses the order of the records returned,\ndefault is true, if false the results will be returned in ascending order",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleDataConnection",
          "longName": "OracleDataConnection",
          "fullName": "datanode.api.v2.OracleDataConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "OracleDataEdge",
              "longType": "OracleDataEdge",
              "fullType": "datanode.api.v2.OracleDataEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleDataEdge",
          "longName": "OracleDataEdge",
          "fullName": "datanode.api.v2.OracleDataEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "OracleData",
              "longType": "oracles.v1.OracleData",
              "fullType": "oracles.v1.OracleData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleSpecEdge",
          "longName": "OracleSpecEdge",
          "fullName": "datanode.api.v2.OracleSpecEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "OracleSpec",
              "longType": "oracles.v1.OracleSpec",
              "fullType": "oracles.v1.OracleSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OracleSpecsConnection",
          "longName": "OracleSpecsConnection",
          "fullName": "datanode.api.v2.OracleSpecsConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "OracleSpecEdge",
              "longType": "OracleSpecEdge",
              "fullType": "datanode.api.v2.OracleSpecEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderConnection",
          "longName": "OrderConnection",
          "fullName": "datanode.api.v2.OrderConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "OrderEdge",
              "longType": "OrderEdge",
              "fullType": "datanode.api.v2.OrderEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OrderEdge",
          "longName": "OrderEdge",
          "fullName": "datanode.api.v2.OrderEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Order",
              "longType": "vega.Order",
              "fullType": "vega.Order",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PageInfo",
          "longName": "PageInfo",
          "fullName": "datanode.api.v2.PageInfo",
          "description": "Page information for cursor based pagination",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "has_next_page",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "has_previous_page",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Pagination",
          "longName": "Pagination",
          "fullName": "datanode.api.v2.Pagination",
          "description": "Cursor information for cursor based pagination requests",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "first",
              "description": "",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_first",
              "defaultValue": ""
            },
            {
              "name": "after",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_after",
              "defaultValue": ""
            },
            {
              "name": "last",
              "description": "",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_last",
              "defaultValue": ""
            },
            {
              "name": "before",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_before",
              "defaultValue": ""
            },
            {
              "name": "newest_first",
              "description": "Newest records first, older records last, default is true",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_newest_first",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyConnection",
          "longName": "PartyConnection",
          "fullName": "datanode.api.v2.PartyConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "PartyEdge",
              "longType": "PartyEdge",
              "fullType": "datanode.api.v2.PartyEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PartyEdge",
          "longName": "PartyEdge",
          "fullName": "datanode.api.v2.PartyEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Party",
              "longType": "vega.Party",
              "fullType": "vega.Party",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionConnection",
          "longName": "PositionConnection",
          "fullName": "datanode.api.v2.PositionConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "PositionEdge",
              "longType": "PositionEdge",
              "fullType": "datanode.api.v2.PositionEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PositionEdge",
          "longName": "PositionEdge",
          "fullName": "datanode.api.v2.PositionEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Position",
              "longType": "vega.Position",
              "fullType": "vega.Position",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardEdge",
          "longName": "RewardEdge",
          "fullName": "datanode.api.v2.RewardEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Reward",
              "longType": "vega.Reward",
              "fullType": "vega.Reward",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewardsConnection",
          "longName": "RewardsConnection",
          "fullName": "datanode.api.v2.RewardsConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "RewardEdge",
              "longType": "RewardEdge",
              "fullType": "datanode.api.v2.RewardEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeLinkingEdge",
          "longName": "StakeLinkingEdge",
          "fullName": "datanode.api.v2.StakeLinkingEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "StakeLinking",
              "longType": "vega.events.v1.StakeLinking",
              "fullType": "vega.events.v1.StakeLinking",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakesConnection",
          "longName": "StakesConnection",
          "fullName": "datanode.api.v2.StakesConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "StakeLinkingEdge",
              "longType": "StakeLinkingEdge",
              "fullType": "datanode.api.v2.StakeLinkingEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradeConnection",
          "longName": "TradeConnection",
          "fullName": "datanode.api.v2.TradeConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "TradeEdge",
              "longType": "TradeEdge",
              "fullType": "datanode.api.v2.TradeEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TradeEdge",
          "longName": "TradeEdge",
          "fullName": "datanode.api.v2.TradeEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Trade",
              "longType": "vega.Trade",
              "fullType": "vega.Trade",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferConnection",
          "longName": "TransferConnection",
          "fullName": "datanode.api.v2.TransferConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "TransferEdge",
              "longType": "TransferEdge",
              "fullType": "datanode.api.v2.TransferEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferEdge",
          "longName": "TransferEdge",
          "fullName": "datanode.api.v2.TransferEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Transfer",
              "longType": "vega.events.v1.Transfer",
              "fullType": "vega.events.v1.Transfer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VoteConnection",
          "longName": "VoteConnection",
          "fullName": "datanode.api.v2.VoteConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "VoteEdge",
              "longType": "VoteEdge",
              "fullType": "datanode.api.v2.VoteEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VoteEdge",
          "longName": "VoteEdge",
          "fullName": "datanode.api.v2.VoteEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Vote",
              "longType": "vega.Vote",
              "fullType": "vega.Vote",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WithdrawalEdge",
          "longName": "WithdrawalEdge",
          "fullName": "datanode.api.v2.WithdrawalEdge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node",
              "description": "",
              "label": "",
              "type": "Withdrawal",
              "longType": "vega.Withdrawal",
              "fullType": "vega.Withdrawal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cursor",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WithdrawalsConnection",
          "longName": "WithdrawalsConnection",
          "fullName": "datanode.api.v2.WithdrawalsConnection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "edges",
              "description": "",
              "label": "repeated",
              "type": "WithdrawalEdge",
              "longType": "WithdrawalEdge",
              "fullType": "datanode.api.v2.WithdrawalEdge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "page_info",
              "description": "",
              "label": "",
              "type": "PageInfo",
              "longType": "PageInfo",
              "fullType": "datanode.api.v2.PageInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "TradingDataService",
          "longName": "TradingDataService",
          "fullName": "datanode.api.v2.TradingDataService",
          "description": "",
          "methods": [
            {
              "name": "ListAccounts",
              "description": "-- Accounts --\nReturns a list of accounts matching the supplied filter, including their current balances.\nIf a given account has never had a balance, it will be absent from the list.",
              "requestType": "ListAccountsRequest",
              "requestLongType": "ListAccountsRequest",
              "requestFullType": "datanode.api.v2.ListAccountsRequest",
              "requestStreaming": false,
              "responseType": "ListAccountsResponse",
              "responseLongType": "ListAccountsResponse",
              "responseFullType": "datanode.api.v2.ListAccountsResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveAccounts",
              "description": "Subscribe to a stream of Accounts",
              "requestType": "ObserveAccountsRequest",
              "requestLongType": "ObserveAccountsRequest",
              "requestFullType": "datanode.api.v2.ObserveAccountsRequest",
              "requestStreaming": false,
              "responseType": "ObserveAccountsResponse",
              "responseLongType": "ObserveAccountsResponse",
              "responseFullType": "datanode.api.v2.ObserveAccountsResponse",
              "responseStreaming": true
            },
            {
              "name": "Info",
              "description": "node info",
              "requestType": "InfoRequest",
              "requestLongType": "InfoRequest",
              "requestFullType": "datanode.api.v2.InfoRequest",
              "requestStreaming": false,
              "responseType": "InfoResponse",
              "responseLongType": "InfoResponse",
              "responseFullType": "datanode.api.v2.InfoResponse",
              "responseStreaming": false
            },
            {
              "name": "GetOrder",
              "description": "-- Orders --\nGets the current version of an order, or optionally provide a version id to retrieve a given version.",
              "requestType": "GetOrderRequest",
              "requestLongType": "GetOrderRequest",
              "requestFullType": "datanode.api.v2.GetOrderRequest",
              "requestStreaming": false,
              "responseType": "GetOrderResponse",
              "responseLongType": "GetOrderResponse",
              "responseFullType": "datanode.api.v2.GetOrderResponse",
              "responseStreaming": false
            },
            {
              "name": "ListOrders",
              "description": "Get a list of orders that match the given filters",
              "requestType": "ListOrdersRequest",
              "requestLongType": "ListOrdersRequest",
              "requestFullType": "datanode.api.v2.ListOrdersRequest",
              "requestStreaming": false,
              "responseType": "ListOrdersResponse",
              "responseLongType": "ListOrdersResponse",
              "responseFullType": "datanode.api.v2.ListOrdersResponse",
              "responseStreaming": false
            },
            {
              "name": "ListOrderVersions",
              "description": "List all versions of an order in the order history",
              "requestType": "ListOrderVersionsRequest",
              "requestLongType": "ListOrderVersionsRequest",
              "requestFullType": "datanode.api.v2.ListOrderVersionsRequest",
              "requestStreaming": false,
              "responseType": "ListOrderVersionsResponse",
              "responseLongType": "ListOrderVersionsResponse",
              "responseFullType": "datanode.api.v2.ListOrderVersionsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListPositions",
              "description": "-- Positions --\nGet a list of Positions by Party using cursor based pagination",
              "requestType": "ListPositionsRequest",
              "requestLongType": "ListPositionsRequest",
              "requestFullType": "datanode.api.v2.ListPositionsRequest",
              "requestStreaming": false,
              "responseType": "ListPositionsResponse",
              "responseLongType": "ListPositionsResponse",
              "responseFullType": "datanode.api.v2.ListPositionsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetBalanceHistory",
              "description": "-- Balances --\nGet an aggregated list of the changes in balances in a set of accounts over time",
              "requestType": "GetBalanceHistoryRequest",
              "requestLongType": "GetBalanceHistoryRequest",
              "requestFullType": "datanode.api.v2.GetBalanceHistoryRequest",
              "requestStreaming": false,
              "responseType": "GetBalanceHistoryResponse",
              "responseLongType": "GetBalanceHistoryResponse",
              "responseFullType": "datanode.api.v2.GetBalanceHistoryResponse",
              "responseStreaming": false
            },
            {
              "name": "GetLatestMarketData",
              "description": "-- Market Data --\nGet the lastest market data for a given market",
              "requestType": "GetLatestMarketDataRequest",
              "requestLongType": "GetLatestMarketDataRequest",
              "requestFullType": "datanode.api.v2.GetLatestMarketDataRequest",
              "requestStreaming": false,
              "responseType": "GetLatestMarketDataResponse",
              "responseLongType": "GetLatestMarketDataResponse",
              "responseFullType": "datanode.api.v2.GetLatestMarketDataResponse",
              "responseStreaming": false
            },
            {
              "name": "ListLatestMarketData",
              "description": "Lists the latest market data for every market",
              "requestType": "ListLatestMarketDataRequest",
              "requestLongType": "ListLatestMarketDataRequest",
              "requestFullType": "datanode.api.v2.ListLatestMarketDataRequest",
              "requestStreaming": false,
              "responseType": "ListLatestMarketDataResponse",
              "responseLongType": "ListLatestMarketDataResponse",
              "responseFullType": "datanode.api.v2.ListLatestMarketDataResponse",
              "responseStreaming": false
            },
            {
              "name": "GetLatestMarketDepth",
              "description": "Get the latest market depth for a given market",
              "requestType": "GetLatestMarketDepthRequest",
              "requestLongType": "GetLatestMarketDepthRequest",
              "requestFullType": "datanode.api.v2.GetLatestMarketDepthRequest",
              "requestStreaming": false,
              "responseType": "GetLatestMarketDepthResponse",
              "responseLongType": "GetLatestMarketDepthResponse",
              "responseFullType": "datanode.api.v2.GetLatestMarketDepthResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveMarketsDepth",
              "description": "",
              "requestType": "ObserveMarketsDepthRequest",
              "requestLongType": "ObserveMarketsDepthRequest",
              "requestFullType": "datanode.api.v2.ObserveMarketsDepthRequest",
              "requestStreaming": false,
              "responseType": "ObserveMarketsDepthResponse",
              "responseLongType": "ObserveMarketsDepthResponse",
              "responseFullType": "datanode.api.v2.ObserveMarketsDepthResponse",
              "responseStreaming": true
            },
            {
              "name": "ObserveMarketsDepthUpdates",
              "description": "",
              "requestType": "ObserveMarketsDepthUpdatesRequest",
              "requestLongType": "ObserveMarketsDepthUpdatesRequest",
              "requestFullType": "datanode.api.v2.ObserveMarketsDepthUpdatesRequest",
              "requestStreaming": false,
              "responseType": "ObserveMarketsDepthUpdatesResponse",
              "responseLongType": "ObserveMarketsDepthUpdatesResponse",
              "responseFullType": "datanode.api.v2.ObserveMarketsDepthUpdatesResponse",
              "responseStreaming": true
            },
            {
              "name": "ObserveMarketsData",
              "description": "",
              "requestType": "ObserveMarketsDataRequest",
              "requestLongType": "ObserveMarketsDataRequest",
              "requestFullType": "datanode.api.v2.ObserveMarketsDataRequest",
              "requestStreaming": false,
              "responseType": "ObserveMarketsDataResponse",
              "responseLongType": "ObserveMarketsDataResponse",
              "responseFullType": "datanode.api.v2.ObserveMarketsDataResponse",
              "responseStreaming": true
            },
            {
              "name": "GetMarketDataHistoryByID",
              "description": "Get Market Data History for a Market ID between given dates using a cursor based pagination model",
              "requestType": "GetMarketDataHistoryByIDRequest",
              "requestLongType": "GetMarketDataHistoryByIDRequest",
              "requestFullType": "datanode.api.v2.GetMarketDataHistoryByIDRequest",
              "requestStreaming": false,
              "responseType": "GetMarketDataHistoryByIDResponse",
              "responseLongType": "GetMarketDataHistoryByIDResponse",
              "responseFullType": "datanode.api.v2.GetMarketDataHistoryByIDResponse",
              "responseStreaming": false
            },
            {
              "name": "ListTransfers",
              "description": "-- Transfers --\nList Transfers to/from/either a public key using a cursor based pagination model",
              "requestType": "ListTransfersRequest",
              "requestLongType": "ListTransfersRequest",
              "requestFullType": "datanode.api.v2.ListTransfersRequest",
              "requestStreaming": false,
              "responseType": "ListTransfersResponse",
              "responseLongType": "ListTransfersResponse",
              "responseFullType": "datanode.api.v2.ListTransfersResponse",
              "responseStreaming": false
            },
            {
              "name": "GetNetworkLimits",
              "description": "-- Network Limits --\nGet the current network limits (is bootstrapping finished, are proposals enabled etc..)",
              "requestType": "GetNetworkLimitsRequest",
              "requestLongType": "GetNetworkLimitsRequest",
              "requestFullType": "datanode.api.v2.GetNetworkLimitsRequest",
              "requestStreaming": false,
              "responseType": "GetNetworkLimitsResponse",
              "responseLongType": "GetNetworkLimitsResponse",
              "responseFullType": "datanode.api.v2.GetNetworkLimitsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListCandleData",
              "description": "-- Candles --\nGet candle data for a given candle id",
              "requestType": "ListCandleDataRequest",
              "requestLongType": "ListCandleDataRequest",
              "requestFullType": "datanode.api.v2.ListCandleDataRequest",
              "requestStreaming": false,
              "responseType": "ListCandleDataResponse",
              "responseLongType": "ListCandleDataResponse",
              "responseFullType": "datanode.api.v2.ListCandleDataResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveCandleData",
              "description": "Subscribe to a stream of Candle updates",
              "requestType": "ObserveCandleDataRequest",
              "requestLongType": "ObserveCandleDataRequest",
              "requestFullType": "datanode.api.v2.ObserveCandleDataRequest",
              "requestStreaming": false,
              "responseType": "ObserveCandleDataResponse",
              "responseLongType": "ObserveCandleDataResponse",
              "responseFullType": "datanode.api.v2.ObserveCandleDataResponse",
              "responseStreaming": true
            },
            {
              "name": "ListCandleIntervals",
              "description": "Gets all available intervals for a given market along with the corresponding candle id",
              "requestType": "ListCandleIntervalsRequest",
              "requestLongType": "ListCandleIntervalsRequest",
              "requestFullType": "datanode.api.v2.ListCandleIntervalsRequest",
              "requestStreaming": false,
              "responseType": "ListCandleIntervalsResponse",
              "responseLongType": "ListCandleIntervalsResponse",
              "responseFullType": "datanode.api.v2.ListCandleIntervalsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListVotes",
              "description": "-- Votes --\nGet Votes for a Party ID using a cursor based pagination model",
              "requestType": "ListVotesRequest",
              "requestLongType": "ListVotesRequest",
              "requestFullType": "datanode.api.v2.ListVotesRequest",
              "requestStreaming": false,
              "responseType": "ListVotesResponse",
              "responseLongType": "ListVotesResponse",
              "responseFullType": "datanode.api.v2.ListVotesResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveVotes",
              "description": "Subscribe to a stream of votes",
              "requestType": "ObserveVotesRequest",
              "requestLongType": "ObserveVotesRequest",
              "requestFullType": "datanode.api.v2.ObserveVotesRequest",
              "requestStreaming": false,
              "responseType": "ObserveVotesResponse",
              "responseLongType": "ObserveVotesResponse",
              "responseFullType": "datanode.api.v2.ObserveVotesResponse",
              "responseStreaming": true
            },
            {
              "name": "GetERC20MultiSigSignerAddedBundles",
              "description": "-- ERC20 Multi Sig --\nGets the signature bundles that add a particular validator to the multisig contract",
              "requestType": "GetERC20MultiSigSignerAddedBundlesRequest",
              "requestLongType": "GetERC20MultiSigSignerAddedBundlesRequest",
              "requestFullType": "datanode.api.v2.GetERC20MultiSigSignerAddedBundlesRequest",
              "requestStreaming": false,
              "responseType": "GetERC20MultiSigSignerAddedBundlesResponse",
              "responseLongType": "GetERC20MultiSigSignerAddedBundlesResponse",
              "responseFullType": "datanode.api.v2.GetERC20MultiSigSignerAddedBundlesResponse",
              "responseStreaming": false
            },
            {
              "name": "GetERC20MultiSigSignerRemovedBundles",
              "description": "Gets the signature bundles that remove a particular validator to the multisig contract",
              "requestType": "GetERC20MultiSigSignerRemovedBundlesRequest",
              "requestLongType": "GetERC20MultiSigSignerRemovedBundlesRequest",
              "requestFullType": "datanode.api.v2.GetERC20MultiSigSignerRemovedBundlesRequest",
              "requestStreaming": false,
              "responseType": "GetERC20MultiSigSignerRemovedBundlesResponse",
              "responseLongType": "GetERC20MultiSigSignerRemovedBundlesResponse",
              "responseFullType": "datanode.api.v2.GetERC20MultiSigSignerRemovedBundlesResponse",
              "responseStreaming": false
            },
            {
              "name": "GetERC20ListAssetBundle",
              "description": "Gets the signature bundles that remove a particular validator to the multisig contract",
              "requestType": "GetERC20ListAssetBundleRequest",
              "requestLongType": "GetERC20ListAssetBundleRequest",
              "requestFullType": "datanode.api.v2.GetERC20ListAssetBundleRequest",
              "requestStreaming": false,
              "responseType": "GetERC20ListAssetBundleResponse",
              "responseLongType": "GetERC20ListAssetBundleResponse",
              "responseFullType": "datanode.api.v2.GetERC20ListAssetBundleResponse",
              "responseStreaming": false
            },
            {
              "name": "GetERC20WithdrawalApproval",
              "description": "",
              "requestType": "GetERC20WithdrawalApprovalRequest",
              "requestLongType": "GetERC20WithdrawalApprovalRequest",
              "requestFullType": "datanode.api.v2.GetERC20WithdrawalApprovalRequest",
              "requestStreaming": false,
              "responseType": "GetERC20WithdrawalApprovalResponse",
              "responseLongType": "GetERC20WithdrawalApprovalResponse",
              "responseFullType": "datanode.api.v2.GetERC20WithdrawalApprovalResponse",
              "responseStreaming": false
            },
            {
              "name": "ListTrades",
              "description": "-- Trades --\nGet a list of all trades, optionally filtered by party/market/order using a cursor based pagination model",
              "requestType": "ListTradesRequest",
              "requestLongType": "ListTradesRequest",
              "requestFullType": "datanode.api.v2.ListTradesRequest",
              "requestStreaming": false,
              "responseType": "ListTradesResponse",
              "responseLongType": "ListTradesResponse",
              "responseFullType": "datanode.api.v2.ListTradesResponse",
              "responseStreaming": false
            },
            {
              "name": "ObserveTrades",
              "description": "Subscribe to a stream of Trades, optionally filtered by party/market",
              "requestType": "ObserveTradesRequest",
              "requestLongType": "ObserveTradesRequest",
              "requestFullType": "datanode.api.v2.ObserveTradesRequest",
              "requestStreaming": false,
              "responseType": "ObserveTradesResponse",
              "responseLongType": "ObserveTradesResponse",
              "responseFullType": "datanode.api.v2.ObserveTradesResponse",
              "responseStreaming": true
            },
            {
              "name": "GetOracleSpec",
              "description": "-- Oracles --\nGet an oracle spec by ID.",
              "requestType": "GetOracleSpecRequest",
              "requestLongType": "GetOracleSpecRequest",
              "requestFullType": "datanode.api.v2.GetOracleSpecRequest",
              "requestStreaming": false,
              "responseType": "GetOracleSpecResponse",
              "responseLongType": "GetOracleSpecResponse",
              "responseFullType": "datanode.api.v2.GetOracleSpecResponse",
              "responseStreaming": false
            },
            {
              "name": "ListOracleSpecs",
              "description": "Get the oracle specs",
              "requestType": "ListOracleSpecsRequest",
              "requestLongType": "ListOracleSpecsRequest",
              "requestFullType": "datanode.api.v2.ListOracleSpecsRequest",
              "requestStreaming": false,
              "responseType": "ListOracleSpecsResponse",
              "responseLongType": "ListOracleSpecsResponse",
              "responseFullType": "datanode.api.v2.ListOracleSpecsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListOracleData",
              "description": "Get all oracle data",
              "requestType": "ListOracleDataRequest",
              "requestLongType": "ListOracleDataRequest",
              "requestFullType": "datanode.api.v2.ListOracleDataRequest",
              "requestStreaming": false,
              "responseType": "ListOracleDataResponse",
              "responseLongType": "ListOracleDataResponse",
              "responseFullType": "datanode.api.v2.ListOracleDataResponse",
              "responseStreaming": false
            },
            {
              "name": "ListMarkets",
              "description": "-- Markets --\nGet all markets using a cursor based pagination model",
              "requestType": "ListMarketsRequest",
              "requestLongType": "ListMarketsRequest",
              "requestFullType": "datanode.api.v2.ListMarketsRequest",
              "requestStreaming": false,
              "responseType": "ListMarketsResponse",
              "responseLongType": "ListMarketsResponse",
              "responseFullType": "datanode.api.v2.ListMarketsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListParties",
              "description": "-- Parties --\nGet Parties using a cursor based pagination model",
              "requestType": "ListPartiesRequest",
              "requestLongType": "ListPartiesRequest",
              "requestFullType": "datanode.api.v2.ListPartiesRequest",
              "requestStreaming": false,
              "responseType": "ListPartiesResponse",
              "responseLongType": "ListPartiesResponse",
              "responseFullType": "datanode.api.v2.ListPartiesResponse",
              "responseStreaming": false
            },
            {
              "name": "ListMarginLevels",
              "description": "-- Margin Levels --\nGet Margin Levels using a cursor based pagination model\n\n-- Rewards --",
              "requestType": "ListMarginLevelsRequest",
              "requestLongType": "ListMarginLevelsRequest",
              "requestFullType": "datanode.api.v2.ListMarginLevelsRequest",
              "requestStreaming": false,
              "responseType": "ListMarginLevelsResponse",
              "responseLongType": "ListMarginLevelsResponse",
              "responseFullType": "datanode.api.v2.ListMarginLevelsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListRewards",
              "description": "Get rewards",
              "requestType": "ListRewardsRequest",
              "requestLongType": "ListRewardsRequest",
              "requestFullType": "datanode.api.v2.ListRewardsRequest",
              "requestStreaming": false,
              "responseType": "ListRewardsResponse",
              "responseLongType": "ListRewardsResponse",
              "responseFullType": "datanode.api.v2.ListRewardsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListRewardSummaries",
              "description": "Get reward summaries",
              "requestType": "ListRewardSummariesRequest",
              "requestLongType": "ListRewardSummariesRequest",
              "requestFullType": "datanode.api.v2.ListRewardSummariesRequest",
              "requestStreaming": false,
              "responseType": "ListRewardSummariesResponse",
              "responseLongType": "ListRewardSummariesResponse",
              "responseFullType": "datanode.api.v2.ListRewardSummariesResponse",
              "responseStreaming": false
            },
            {
              "name": "GetDeposit",
              "description": "-- Deposits --\nGet a deposit by its identifier",
              "requestType": "GetDepositRequest",
              "requestLongType": "GetDepositRequest",
              "requestFullType": "datanode.api.v2.GetDepositRequest",
              "requestStreaming": false,
              "responseType": "GetDepositResponse",
              "responseLongType": "GetDepositResponse",
              "responseFullType": "datanode.api.v2.GetDepositResponse",
              "responseStreaming": false
            },
            {
              "name": "ListDeposits",
              "description": "Get a list of deposits for a given party",
              "requestType": "ListDepositsRequest",
              "requestLongType": "ListDepositsRequest",
              "requestFullType": "datanode.api.v2.ListDepositsRequest",
              "requestStreaming": false,
              "responseType": "ListDepositsResponse",
              "responseLongType": "ListDepositsResponse",
              "responseFullType": "datanode.api.v2.ListDepositsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetWithdrawal",
              "description": "-- Withdrawals --",
              "requestType": "GetWithdrawalRequest",
              "requestLongType": "GetWithdrawalRequest",
              "requestFullType": "datanode.api.v2.GetWithdrawalRequest",
              "requestStreaming": false,
              "responseType": "GetWithdrawalResponse",
              "responseLongType": "GetWithdrawalResponse",
              "responseFullType": "datanode.api.v2.GetWithdrawalResponse",
              "responseStreaming": false
            },
            {
              "name": "ListWithdrawals",
              "description": "",
              "requestType": "ListWithdrawalsRequest",
              "requestLongType": "ListWithdrawalsRequest",
              "requestFullType": "datanode.api.v2.ListWithdrawalsRequest",
              "requestStreaming": false,
              "responseType": "ListWithdrawalsResponse",
              "responseLongType": "ListWithdrawalsResponse",
              "responseFullType": "datanode.api.v2.ListWithdrawalsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetAsset",
              "description": "-- Assets --",
              "requestType": "GetAssetRequest",
              "requestLongType": "GetAssetRequest",
              "requestFullType": "datanode.api.v2.GetAssetRequest",
              "requestStreaming": false,
              "responseType": "GetAssetResponse",
              "responseLongType": "GetAssetResponse",
              "responseFullType": "datanode.api.v2.GetAssetResponse",
              "responseStreaming": false
            },
            {
              "name": "ListAssets",
              "description": "",
              "requestType": "ListAssetsRequest",
              "requestLongType": "ListAssetsRequest",
              "requestFullType": "datanode.api.v2.ListAssetsRequest",
              "requestStreaming": false,
              "responseType": "ListAssetsResponse",
              "responseLongType": "ListAssetsResponse",
              "responseFullType": "datanode.api.v2.ListAssetsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListLiquidityProvisions",
              "description": "-- Liquidity Provisions --",
              "requestType": "ListLiquidityProvisionsRequest",
              "requestLongType": "ListLiquidityProvisionsRequest",
              "requestFullType": "datanode.api.v2.ListLiquidityProvisionsRequest",
              "requestStreaming": false,
              "responseType": "ListLiquidityProvisionsResponse",
              "responseLongType": "ListLiquidityProvisionsResponse",
              "responseFullType": "datanode.api.v2.ListLiquidityProvisionsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListGovernanceData",
              "description": "-- Governance --\nList proposals using a cursor based pagination model",
              "requestType": "ListGovernanceDataRequest",
              "requestLongType": "ListGovernanceDataRequest",
              "requestFullType": "datanode.api.v2.ListGovernanceDataRequest",
              "requestStreaming": false,
              "responseType": "ListGovernanceDataResponse",
              "responseLongType": "ListGovernanceDataResponse",
              "responseFullType": "datanode.api.v2.ListGovernanceDataResponse",
              "responseStreaming": false
            },
            {
              "name": "ListDelegations",
              "description": "-- Delegation --\nList delegations",
              "requestType": "ListDelegationsRequest",
              "requestLongType": "ListDelegationsRequest",
              "requestFullType": "datanode.api.v2.ListDelegationsRequest",
              "requestStreaming": false,
              "responseType": "ListDelegationsResponse",
              "responseLongType": "ListDelegationsResponse",
              "responseFullType": "datanode.api.v2.ListDelegationsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetNetworkData",
              "description": "-- Nodes --\nGet data regarding the nodes of the network",
              "requestType": "GetNetworkDataRequest",
              "requestLongType": "GetNetworkDataRequest",
              "requestFullType": "datanode.api.v2.GetNetworkDataRequest",
              "requestStreaming": false,
              "responseType": "GetNetworkDataResponse",
              "responseLongType": "GetNetworkDataResponse",
              "responseFullType": "datanode.api.v2.GetNetworkDataResponse",
              "responseStreaming": false
            },
            {
              "name": "GetNode",
              "description": "Get information about a given node",
              "requestType": "GetNodeRequest",
              "requestLongType": "GetNodeRequest",
              "requestFullType": "datanode.api.v2.GetNodeRequest",
              "requestStreaming": false,
              "responseType": "GetNodeResponse",
              "responseLongType": "GetNodeResponse",
              "responseFullType": "datanode.api.v2.GetNodeResponse",
              "responseStreaming": false
            },
            {
              "name": "ListNodes",
              "description": "List information about the nodes on the network",
              "requestType": "ListNodesRequest",
              "requestLongType": "ListNodesRequest",
              "requestFullType": "datanode.api.v2.ListNodesRequest",
              "requestStreaming": false,
              "responseType": "ListNodesResponse",
              "responseLongType": "ListNodesResponse",
              "responseFullType": "datanode.api.v2.ListNodesResponse",
              "responseStreaming": false
            },
            {
              "name": "GetEpoch",
              "description": "-- Epochs --\nGet data for a specific epoch, if id omitted it gets the current epoch",
              "requestType": "GetEpochRequest",
              "requestLongType": "GetEpochRequest",
              "requestFullType": "datanode.api.v2.GetEpochRequest",
              "requestStreaming": false,
              "responseType": "GetEpochResponse",
              "responseLongType": "GetEpochResponse",
              "responseFullType": "datanode.api.v2.GetEpochResponse",
              "responseStreaming": false
            },
            {
              "name": "EstimateFee",
              "description": "-- Estimates --",
              "requestType": "EstimateFeeRequest",
              "requestLongType": "EstimateFeeRequest",
              "requestFullType": "datanode.api.v2.EstimateFeeRequest",
              "requestStreaming": false,
              "responseType": "EstimateFeeResponse",
              "responseLongType": "EstimateFeeResponse",
              "responseFullType": "datanode.api.v2.EstimateFeeResponse",
              "responseStreaming": false
            },
            {
              "name": "EstimateMargin",
              "description": "",
              "requestType": "EstimateMarginRequest",
              "requestLongType": "EstimateMarginRequest",
              "requestFullType": "datanode.api.v2.EstimateMarginRequest",
              "requestStreaming": false,
              "responseType": "EstimateMarginResponse",
              "responseLongType": "EstimateMarginResponse",
              "responseFullType": "datanode.api.v2.EstimateMarginResponse",
              "responseStreaming": false
            },
            {
              "name": "ListNetworkParameters",
              "description": "-- Network Parameters --\nGet the network parameters",
              "requestType": "ListNetworkParametersRequest",
              "requestLongType": "ListNetworkParametersRequest",
              "requestFullType": "datanode.api.v2.ListNetworkParametersRequest",
              "requestStreaming": false,
              "responseType": "ListNetworkParametersResponse",
              "responseLongType": "ListNetworkParametersResponse",
              "responseFullType": "datanode.api.v2.ListNetworkParametersResponse",
              "responseStreaming": false
            },
            {
              "name": "ListCheckpoints",
              "description": "-- Checkpoints --",
              "requestType": "ListCheckpointsRequest",
              "requestLongType": "ListCheckpointsRequest",
              "requestFullType": "datanode.api.v2.ListCheckpointsRequest",
              "requestStreaming": false,
              "responseType": "ListCheckpointsResponse",
              "responseLongType": "ListCheckpointsResponse",
              "responseFullType": "datanode.api.v2.ListCheckpointsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetStake",
              "description": "-- Stake --",
              "requestType": "GetStakeRequest",
              "requestLongType": "GetStakeRequest",
              "requestFullType": "datanode.api.v2.GetStakeRequest",
              "requestStreaming": false,
              "responseType": "GetStakeResponse",
              "responseLongType": "GetStakeResponse",
              "responseFullType": "datanode.api.v2.GetStakeResponse",
              "responseStreaming": false
            },
            {
              "name": "GetRiskFactors",
              "description": "-- Risk Factors --\nGet Risk Factor data for a given market",
              "requestType": "GetRiskFactorsRequest",
              "requestLongType": "GetRiskFactorsRequest",
              "requestFullType": "datanode.api.v2.GetRiskFactorsRequest",
              "requestStreaming": false,
              "responseType": "GetRiskFactorsResponse",
              "responseLongType": "GetRiskFactorsResponse",
              "responseFullType": "datanode.api.v2.GetRiskFactorsResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}