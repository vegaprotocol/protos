{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/ListAccountsRequest",
    "definitions": {
        "ListAccountsRequest": {
            "properties": {
                "filter": {
                    "$ref": "#/definitions/datanode.api.v2.AccountFilter",
                    "additionalProperties": true,
                    "description": "Limit the accounts considered according to the filter supplied"
                },
                "pagination": {
                    "$ref": "#/definitions/datanode.api.v2.Pagination",
                    "additionalProperties": true,
                    "description": "Optional pagination control"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "List Accounts Request",
            "description": "-- Accounts --"
        },
        "datanode.api.v2.AccountFilter": {
            "properties": {
                "asset_id": {
                    "type": "string",
                    "description": "Restrict accounts to those holding balances in this asset ID"
                },
                "party_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Restrict accounts to those owned by the parties in this list (pass an empty list for no filter)"
                },
                "market_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Restrict accounts to those connected to the marketsin this list (pass an empty list for no filter)"
                },
                "account_types": {
                    "items": {
                        "enum": [
                            "ACCOUNT_TYPE_UNSPECIFIED",
                            0,
                            "ACCOUNT_TYPE_INSURANCE",
                            1,
                            "ACCOUNT_TYPE_SETTLEMENT",
                            2,
                            "ACCOUNT_TYPE_MARGIN",
                            3,
                            "ACCOUNT_TYPE_GENERAL",
                            4,
                            "ACCOUNT_TYPE_FEES_INFRASTRUCTURE",
                            5,
                            "ACCOUNT_TYPE_FEES_LIQUIDITY",
                            6,
                            "ACCOUNT_TYPE_FEES_MAKER",
                            7,
                            "ACCOUNT_TYPE_LOCK_WITHDRAW",
                            8,
                            "ACCOUNT_TYPE_BOND",
                            9,
                            "ACCOUNT_TYPE_EXTERNAL",
                            10,
                            "ACCOUNT_TYPE_GLOBAL_INSURANCE",
                            11,
                            "ACCOUNT_TYPE_GLOBAL_REWARD",
                            12,
                            "ACCOUNT_TYPE_PENDING_TRANSFERS",
                            13,
                            "ACCOUNT_TYPE_REWARD_TAKER_PAID_FEES",
                            14,
                            "ACCOUNT_TYPE_REWARD_MAKER_RECEIVED_FEES",
                            15,
                            "ACCOUNT_TYPE_REWARD_LP_RECEIVED_FEES",
                            16,
                            "ACCOUNT_TYPE_REWARD_MARKET_PROPOSERS",
                            17
                        ]
                    },
                    "type": "array",
                    "title": "Account Type",
                    "description": "Various collateral/account types as used by Vega"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Account Filter"
        },
        "datanode.api.v2.Pagination": {
            "properties": {
                "first": {
                    "type": "integer"
                },
                "after": {
                    "type": "string"
                },
                "last": {
                    "type": "integer"
                },
                "before": {
                    "type": "string"
                },
                "newest_first": {
                    "type": "boolean",
                    "description": "Newest records first, older records last, default is true"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Pagination",
            "description": "Cursor information for cursor based pagination requests"
        }
    }
}