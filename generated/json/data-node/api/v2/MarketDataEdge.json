{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/MarketDataEdge",
    "definitions": {
        "MarketDataEdge": {
            "properties": {
                "node": {
                    "$ref": "#/definitions/vega.MarketData",
                    "additionalProperties": true
                },
                "cursor": {
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Market Data Edge"
        },
        "vega.LiquidityProviderFeeShare": {
            "properties": {
                "party": {
                    "type": "string",
                    "description": "The liquidity provider party id"
                },
                "equity_like_share": {
                    "type": "string",
                    "description": "The share own by this liquidity provider (float)"
                },
                "average_entry_valuation": {
                    "type": "string",
                    "description": "The average entry valuation of the liquidity provider for the market"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Liquidity Provider Fee Share",
            "description": "The equity like share of liquidity fee for each liquidity provider"
        },
        "vega.MarketData": {
            "properties": {
                "mark_price": {
                    "type": "string",
                    "description": "Mark price, as an integer, for example `123456` is a correctly formatted price of `1.23456` assuming market configured to 5 decimal places"
                },
                "best_bid_price": {
                    "type": "string",
                    "description": "Highest price level on an order book for buy orders, as an integer, for example `123456` is a correctly formatted price of `1.23456` assuming market configured to 5 decimal places"
                },
                "best_bid_volume": {
                    "type": "string",
                    "description": "Aggregated volume being bid at the best bid price"
                },
                "best_offer_price": {
                    "type": "string",
                    "description": "Lowest price level on an order book for offer orders"
                },
                "best_offer_volume": {
                    "type": "string",
                    "description": "Aggregated volume being offered at the best offer price, as an integer, for example `123456` is a correctly  // formatted price of `1.23456` assuming market configured to 5 decimal places"
                },
                "best_static_bid_price": {
                    "type": "string",
                    "description": "Highest price on the order book for buy orders not including pegged orders"
                },
                "best_static_bid_volume": {
                    "type": "string",
                    "description": "Total volume at the best static bid price excluding pegged orders"
                },
                "best_static_offer_price": {
                    "type": "string",
                    "description": "Lowest price on the order book for sell orders not including pegged orders"
                },
                "best_static_offer_volume": {
                    "type": "string",
                    "description": "Total volume at the best static offer price excluding pegged orders"
                },
                "mid_price": {
                    "type": "string",
                    "description": "Arithmetic average of the best bid price and best offer price, as an integer, for example `123456` is a correctly formatted price of `1.23456` assuming market configured to 5 decimal places"
                },
                "static_mid_price": {
                    "type": "string",
                    "description": "Arithmetic average of the best static bid price and best static offer price"
                },
                "market": {
                    "type": "string",
                    "description": "Market identifier for the data"
                },
                "timestamp": {
                    "type": "string",
                    "description": "Timestamp at which this mark price was relevant, in nanoseconds since the epoch - See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`"
                },
                "open_interest": {
                    "type": "string",
                    "description": "The sum of the size of all positions greater than 0 on the market"
                },
                "auction_end": {
                    "type": "string",
                    "description": "Time in seconds until the end of the auction (0 if currently not in auction period)"
                },
                "auction_start": {
                    "type": "string",
                    "description": "Time until next auction (used in FBA's) - currently always 0"
                },
                "indicative_price": {
                    "type": "string",
                    "description": "Indicative price (zero if not in auction)"
                },
                "indicative_volume": {
                    "type": "string",
                    "description": "Indicative volume (zero if not in auction)"
                },
                "market_trading_mode": {
                    "enum": [
                        "TRADING_MODE_UNSPECIFIED",
                        0,
                        "TRADING_MODE_CONTINUOUS",
                        1,
                        "TRADING_MODE_BATCH_AUCTION",
                        2,
                        "TRADING_MODE_OPENING_AUCTION",
                        3,
                        "TRADING_MODE_MONITORING_AUCTION",
                        4,
                        "TRADING_MODE_NO_TRADING",
                        5
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Trading Mode",
                    "description": "The trading mode the market is currently running, also referred to as 'market state'"
                },
                "trigger": {
                    "enum": [
                        "AUCTION_TRIGGER_UNSPECIFIED",
                        0,
                        "AUCTION_TRIGGER_BATCH",
                        1,
                        "AUCTION_TRIGGER_OPENING",
                        2,
                        "AUCTION_TRIGGER_PRICE",
                        3,
                        "AUCTION_TRIGGER_LIQUIDITY",
                        4
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Auction Trigger",
                    "description": "Auction triggers indicate what condition triggered an auction (if market is in auction mode)"
                },
                "extension_trigger": {
                    "enum": [
                        "AUCTION_TRIGGER_UNSPECIFIED",
                        0,
                        "AUCTION_TRIGGER_BATCH",
                        1,
                        "AUCTION_TRIGGER_OPENING",
                        2,
                        "AUCTION_TRIGGER_PRICE",
                        3,
                        "AUCTION_TRIGGER_LIQUIDITY",
                        4
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Auction Trigger",
                    "description": "Auction triggers indicate what condition triggered an auction (if market is in auction mode)"
                },
                "target_stake": {
                    "type": "string",
                    "description": "Targeted stake for the given market"
                },
                "supplied_stake": {
                    "type": "string",
                    "description": "Available stake for the given market"
                },
                "price_monitoring_bounds": {
                    "items": {
                        "$ref": "#/definitions/vega.PriceMonitoringBounds"
                    },
                    "type": "array",
                    "description": "One or more price monitoring bounds for the current timestamp"
                },
                "market_value_proxy": {
                    "type": "string",
                    "description": "the market value proxy"
                },
                "liquidity_provider_fee_share": {
                    "items": {
                        "$ref": "#/definitions/vega.LiquidityProviderFeeShare"
                    },
                    "type": "array",
                    "description": "the equity like share of liquidity fee for each liquidity provider"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Market Data",
            "description": "Represents data generated by a market when open"
        },
        "vega.PriceMonitoringBounds": {
            "properties": {
                "min_valid_price": {
                    "type": "string",
                    "description": "Minimum price that isn't currently breaching the specified price monitoring trigger"
                },
                "max_valid_price": {
                    "type": "string",
                    "description": "Maximum price that isn't currently breaching the specified price monitoring trigger"
                },
                "trigger": {
                    "$ref": "#/definitions/vega.PriceMonitoringTrigger",
                    "additionalProperties": true,
                    "description": "Price monitoring trigger associated with the bounds"
                },
                "reference_price": {
                    "type": "string",
                    "description": "Reference price used to calculate the valid price range"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Price Monitoring Bounds",
            "description": "Represents a list of valid (at the current timestamp) price ranges per associated trigger"
        },
        "vega.PriceMonitoringTrigger": {
            "properties": {
                "horizon": {
                    "type": "string",
                    "description": "Price monitoring projection horizon τ in seconds"
                },
                "probability": {
                    "type": "string",
                    "description": "Price monitoring probability level p"
                },
                "auction_extension": {
                    "type": "string",
                    "description": "Price monitoring auction extension duration in seconds should the price breach it's theoretical level over the specified horizon at the specified probability level"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Price Monitoring Trigger",
            "description": "PriceMonitoringTrigger holds together price projection horizon τ, probability level p, and auction extension duration"
        }
    }
}