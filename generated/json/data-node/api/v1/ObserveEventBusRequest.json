{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/ObserveEventBusRequest",
    "definitions": {
        "ObserveEventBusRequest": {
            "properties": {
                "type": {
                    "items": {
                        "enum": [
                            "BUS_EVENT_TYPE_UNSPECIFIED",
                            0,
                            "BUS_EVENT_TYPE_ALL",
                            1,
                            "BUS_EVENT_TYPE_TIME_UPDATE",
                            2,
                            "BUS_EVENT_TYPE_TRANSFER_RESPONSES",
                            3,
                            "BUS_EVENT_TYPE_POSITION_RESOLUTION",
                            4,
                            "BUS_EVENT_TYPE_ORDER",
                            5,
                            "BUS_EVENT_TYPE_ACCOUNT",
                            6,
                            "BUS_EVENT_TYPE_PARTY",
                            7,
                            "BUS_EVENT_TYPE_TRADE",
                            8,
                            "BUS_EVENT_TYPE_MARGIN_LEVELS",
                            9,
                            "BUS_EVENT_TYPE_PROPOSAL",
                            10,
                            "BUS_EVENT_TYPE_VOTE",
                            11,
                            "BUS_EVENT_TYPE_MARKET_DATA",
                            12,
                            "BUS_EVENT_TYPE_NODE_SIGNATURE",
                            13,
                            "BUS_EVENT_TYPE_LOSS_SOCIALIZATION",
                            14,
                            "BUS_EVENT_TYPE_SETTLE_POSITION",
                            15,
                            "BUS_EVENT_TYPE_SETTLE_DISTRESSED",
                            16,
                            "BUS_EVENT_TYPE_MARKET_CREATED",
                            17,
                            "BUS_EVENT_TYPE_ASSET",
                            18,
                            "BUS_EVENT_TYPE_MARKET_TICK",
                            19,
                            "BUS_EVENT_TYPE_WITHDRAWAL",
                            20,
                            "BUS_EVENT_TYPE_DEPOSIT",
                            21,
                            "BUS_EVENT_TYPE_AUCTION",
                            22,
                            "BUS_EVENT_TYPE_RISK_FACTOR",
                            23,
                            "BUS_EVENT_TYPE_NETWORK_PARAMETER",
                            24,
                            "BUS_EVENT_TYPE_LIQUIDITY_PROVISION",
                            25,
                            "BUS_EVENT_TYPE_MARKET_UPDATED",
                            26,
                            "BUS_EVENT_TYPE_ORACLE_SPEC",
                            27,
                            "BUS_EVENT_TYPE_ORACLE_DATA",
                            28,
                            "BUS_EVENT_TYPE_DELEGATION_BALANCE",
                            29,
                            "BUS_EVENT_TYPE_VALIDATOR_SCORE",
                            30,
                            "BUS_EVENT_TYPE_EPOCH_UPDATE",
                            31,
                            "BUS_EVENT_TYPE_VALIDATOR_UPDATE",
                            32,
                            "BUS_EVENT_TYPE_STAKE_LINKING",
                            33,
                            "BUS_EVENT_TYPE_REWARD_PAYOUT_EVENT",
                            34,
                            "BUS_EVENT_TYPE_CHECKPOINT",
                            35,
                            "BUS_EVENT_TYPE_STREAM_START",
                            36,
                            "BUS_EVENT_TYPE_KEY_ROTATION",
                            37,
                            "BUS_EVENT_TYPE_STATE_VAR",
                            38,
                            "BUS_EVENT_TYPE_NETWORK_LIMITS",
                            39,
                            "BUS_EVENT_TYPE_TRANSFER",
                            40,
                            "BUS_EVENT_TYPE_VALIDATOR_RANKING",
                            41,
                            "BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_EVENT",
                            42,
                            "BUS_EVENT_TYPE_ERC20_MULTI_SIG_SET_THRESHOLD",
                            43,
                            "BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_ADDED",
                            44,
                            "BUS_EVENT_TYPE_ERC20_MULTI_SIG_SIGNER_REMOVED",
                            45,
                            "BUS_EVENT_TYPE_POSITION_STATE",
                            46,
                            "BUS_EVENT_TYPE_ETHEREUM_KEY_ROTATION",
                            47,
                            "BUS_EVENT_TYPE_MARKET",
                            101,
                            "BUS_EVENT_TYPE_TX_ERROR",
                            201
                        ]
                    },
                    "type": "array",
                    "title": "Bus Event Type",
                    "description": "An (event) bus event type is used to specify a type of event It has 2 styles of event: Single values (e.g. BUS_EVENT_TYPE_ORDER) where they represent one data item Group values (e.g. BUS_EVENT_TYPE_AUCTION) where they represent a group of data items"
                },
                "market_id": {
                    "type": "string",
                    "description": "Market identifier, optional field"
                },
                "party_id": {
                    "type": "string",
                    "description": "Party identifier, optional field"
                },
                "batch_size": {
                    "type": "string",
                    "description": "Batch size, optional field - If not specified, any events received will be sent immediately. If the client is not ready for the next data-set, data may be dropped a number of times, and eventually the stream is closed. if specified, the first batch will be sent when ready. To receive the next set of events, the client must write an `ObserveEventBatch` message on the stream to flush the buffer. If no message is received in 5 seconds, the stream is closed. Default: 0, send any and all events when they are available."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Observe Event Bus Request",
            "description": "Request to subscribe to a stream of one or more event types from the Vega event bus"
        }
    }
}