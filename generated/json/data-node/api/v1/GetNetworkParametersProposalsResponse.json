{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/GetNetworkParametersProposalsResponse",
    "definitions": {
        "GetNetworkParametersProposalsResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/vega.GovernanceData"
                    },
                    "type": "array",
                    "description": "A list of 0 or more governance data"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Get Network Parameters Proposals Response",
            "description": "Response for a list of network parameter proposals"
        },
        "oracles.v1.Condition": {
            "properties": {
                "operator": {
                    "enum": [
                        "OPERATOR_UNSPECIFIED",
                        0,
                        "OPERATOR_EQUALS",
                        1,
                        "OPERATOR_GREATER_THAN",
                        2,
                        "OPERATOR_GREATER_THAN_OR_EQUAL",
                        3,
                        "OPERATOR_LESS_THAN",
                        4,
                        "OPERATOR_LESS_THAN_OR_EQUAL",
                        5
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Operator",
                    "description": "Comparator describes the type of comparison."
                },
                "value": {
                    "type": "string",
                    "description": "value is used by the comparator."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Condition",
            "description": "Condition describes the condition that must be validated by the"
        },
        "oracles.v1.Filter": {
            "properties": {
                "key": {
                    "$ref": "#/definitions/oracles.v1.PropertyKey",
                    "additionalProperties": true,
                    "description": "key is the oracle data property key targeted by the filter."
                },
                "conditions": {
                    "items": {
                        "$ref": "#/definitions/oracles.v1.Condition"
                    },
                    "type": "array",
                    "description": "conditions are the conditions that should be matched by the data to be considered of interest."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Filter",
            "description": "Filter describes the conditions under which an oracle data is considered of interest or not."
        },
        "oracles.v1.OracleSpecConfiguration": {
            "properties": {
                "pub_keys": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "pubKeys is the list of authorized public keys that signed the data for this oracle. All the public keys in the oracle data should be contained in these public keys."
                },
                "filters": {
                    "items": {
                        "$ref": "#/definitions/oracles.v1.Filter"
                    },
                    "type": "array",
                    "description": "filters describes which oracle data are considered of interest or not for the product (or the risk model)."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Oracle Spec Configuration",
            "description": "An oracle spec describe the oracle data that a product (or a risk model) wants to get from the oracle engine."
        },
        "oracles.v1.PropertyKey": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name is the name of the property."
                },
                "type": {
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        0,
                        "TYPE_EMPTY",
                        1,
                        "TYPE_INTEGER",
                        2,
                        "TYPE_STRING",
                        3,
                        "TYPE_BOOLEAN",
                        4,
                        "TYPE_DECIMAL",
                        5,
                        "TYPE_TIMESTAMP",
                        6
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Type",
                    "description": "Type describes the type of properties that are supported by the oracle engine."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Property Key",
            "description": "PropertyKey describes the property key contained in an oracle data."
        },
        "vega.AssetDetails": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the asset (e.g: Great British Pound)"
                },
                "symbol": {
                    "type": "string",
                    "description": "Symbol of the asset (e.g: GBP)"
                },
                "total_supply": {
                    "type": "string",
                    "description": "Total circulating supply for the asset"
                },
                "decimals": {
                    "type": "string",
                    "description": "Number of decimal / precision handled by this asset"
                },
                "quantum": {
                    "type": "string",
                    "description": "The minimum economically meaningful amount in the asset"
                },
                "builtin_asset": {
                    "$ref": "#/definitions/vega.BuiltinAsset",
                    "additionalProperties": true,
                    "description": "A built-in asset"
                },
                "erc20": {
                    "$ref": "#/definitions/vega.ERC20",
                    "additionalProperties": true,
                    "description": "An Ethereum ERC20 asset"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Asset Details",
            "description": "The Vega representation of an external asset"
        },
        "vega.BuiltinAsset": {
            "properties": {
                "max_faucet_amount_mint": {
                    "type": "string",
                    "description": "Maximum amount that can be requested by a party through the built-in asset faucet at a time"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Builtin Asset",
            "description": "A Vega internal asset"
        },
        "vega.ERC20": {
            "properties": {
                "contract_address": {
                    "type": "string",
                    "description": "The address of the contract for the token, on the ethereum network"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "ERC 20",
            "description": "An ERC20 token based asset, living on the ethereum network"
        },
        "vega.FutureProduct": {
            "properties": {
                "settlement_asset": {
                    "type": "string",
                    "description": "Product settlement asset identifier"
                },
                "quote_name": {
                    "type": "string",
                    "description": "Product quote name"
                },
                "oracle_spec_for_settlement_price": {
                    "$ref": "#/definitions/oracles.v1.OracleSpecConfiguration",
                    "additionalProperties": true,
                    "description": "The oracle spec describing the oracle data of settlement price"
                },
                "oracle_spec_for_trading_termination": {
                    "$ref": "#/definitions/oracles.v1.OracleSpecConfiguration",
                    "additionalProperties": true,
                    "description": "The oracle spec describing the oracle data of trading termination"
                },
                "oracle_spec_binding": {
                    "$ref": "#/definitions/vega.OracleSpecToFutureBinding",
                    "additionalProperties": true,
                    "description": "The binding between the oracle spec and the settlement price"
                },
                "settlement_price_decimals": {
                    "type": "integer",
                    "description": "the number of decimal places implied by the settlement price emitted by the settlement oracle"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Future Product",
            "description": "Future product configuration"
        },
        "vega.GovernanceData": {
            "properties": {
                "proposal": {
                    "$ref": "#/definitions/vega.Proposal",
                    "additionalProperties": true,
                    "description": "The governance proposal"
                },
                "yes": {
                    "items": {
                        "$ref": "#/definitions/vega.Vote"
                    },
                    "type": "array",
                    "description": "All \"yes\" votes in favour of the proposal above"
                },
                "no": {
                    "items": {
                        "$ref": "#/definitions/vega.Vote"
                    },
                    "type": "array",
                    "description": "All \"no\" votes against the proposal above"
                },
                "yes_party": {
                    "additionalProperties": {
                        "$ref": "#/definitions/vega.Vote",
                        "additionalProperties": true
                    },
                    "type": "object",
                    "description": "All latest YES votes by party (guaranteed to be unique), where key (string) is the party ID (public key) and value (Vote) is the vote cast by the given party"
                },
                "no_party": {
                    "additionalProperties": {
                        "$ref": "#/definitions/vega.Vote",
                        "additionalProperties": true
                    },
                    "type": "object",
                    "description": "All latest NO votes by party (guaranteed to be unique), where key (string) is the party ID (public key) and value (Vote) is the vote cast by the given party"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Governance Data",
            "description": "Governance data"
        },
        "vega.InstrumentConfiguration": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Instrument name"
                },
                "code": {
                    "type": "string",
                    "description": "Instrument code"
                },
                "future": {
                    "$ref": "#/definitions/vega.FutureProduct",
                    "additionalProperties": true,
                    "description": "Future"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Instrument Configuration",
            "description": "Instrument configuration"
        },
        "vega.LiquidityMonitoringParameters": {
            "properties": {
                "target_stake_parameters": {
                    "$ref": "#/definitions/vega.TargetStakeParameters",
                    "additionalProperties": true,
                    "description": "Specifies parameters related to target stake calculation"
                },
                "triggering_ratio": {
                    "type": "number",
                    "description": "Specifies the triggering ratio for entering liquidity auction"
                },
                "auction_extension": {
                    "type": "string",
                    "description": "Specifies by how many seconds an auction should be extended if leaving the auction were to trigger a liquidity auction"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Liquidity Monitoring Parameters",
            "description": "LiquidityMonitoringParameters contains settings used for liquidity monitoring"
        },
        "vega.LiquidityOrder": {
            "properties": {
                "reference": {
                    "enum": [
                        "PEGGED_REFERENCE_UNSPECIFIED",
                        0,
                        "PEGGED_REFERENCE_MID",
                        1,
                        "PEGGED_REFERENCE_BEST_BID",
                        2,
                        "PEGGED_REFERENCE_BEST_ASK",
                        3
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Pegged Reference",
                    "description": "A pegged reference defines which price point a pegged order is linked to - meaning the price for a pegged order is calculated from the value of the reference price point"
                },
                "proportion": {
                    "type": "integer",
                    "description": "The relative proportion of the commitment to be allocated at a price level"
                },
                "offset": {
                    "type": "string",
                    "description": "The offset/amount of units away for the order"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Liquidity Order",
            "description": "Represents a liquidity order"
        },
        "vega.LogNormalModelParams": {
            "properties": {
                "mu": {
                    "type": "number",
                    "description": "Mu param"
                },
                "r": {
                    "type": "number",
                    "description": "R param"
                },
                "sigma": {
                    "type": "number",
                    "description": "Sigma param"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Log Normal Model Params",
            "description": "Risk model parameters for log normal"
        },
        "vega.LogNormalRiskModel": {
            "properties": {
                "risk_aversion_parameter": {
                    "type": "number",
                    "description": "Risk Aversion Parameter"
                },
                "tau": {
                    "type": "number",
                    "description": "Tau"
                },
                "params": {
                    "$ref": "#/definitions/vega.LogNormalModelParams",
                    "additionalProperties": true,
                    "description": "Risk model parameters for log normal"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Log Normal Risk Model",
            "description": "Risk model for log normal"
        },
        "vega.NetworkParameter": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The unique key"
                },
                "value": {
                    "type": "string",
                    "description": "The value for the network parameter"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Network Parameter",
            "description": "Represents a network parameter on Vega"
        },
        "vega.NewAsset": {
            "properties": {
                "changes": {
                    "$ref": "#/definitions/vega.AssetDetails",
                    "additionalProperties": true,
                    "description": "The configuration of the new asset"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "New Asset",
            "description": "New asset on Vega"
        },
        "vega.NewFreeform": {
            "additionalProperties": true,
            "type": "object",
            "title": "New Freeform",
            "description": "Freeform proposal This message is just used as a placeholder to sort out the nature of the proposal during parsing."
        },
        "vega.NewMarket": {
            "properties": {
                "changes": {
                    "$ref": "#/definitions/vega.NewMarketConfiguration",
                    "additionalProperties": true,
                    "description": "The configuration of the new market"
                },
                "liquidity_commitment": {
                    "$ref": "#/definitions/vega.NewMarketCommitment",
                    "additionalProperties": true,
                    "description": "The commitment from the party creating the NewMarket proposal"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "New Market",
            "description": "New market on Vega"
        },
        "vega.NewMarketCommitment": {
            "properties": {
                "commitment_amount": {
                    "type": "string",
                    "description": "Specified as a unitless number that represents the amount of settlement asset of the market"
                },
                "fee": {
                    "type": "string",
                    "description": "Nominated liquidity fee factor, which is an input to the calculation of taker fees on the market, as per seeting fees and rewarding liquidity providers"
                },
                "sells": {
                    "items": {
                        "$ref": "#/definitions/vega.LiquidityOrder"
                    },
                    "type": "array",
                    "description": "A set of liquidity sell orders to meet the liquidity provision obligation"
                },
                "buys": {
                    "items": {
                        "$ref": "#/definitions/vega.LiquidityOrder"
                    },
                    "type": "array",
                    "description": "A set of liquidity buy orders to meet the liquidity provision obligation"
                },
                "reference": {
                    "type": "string",
                    "description": "A reference to be associated to all orders created from this commitment"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "New Market Commitment",
            "description": "A commitment of liquidity to be made by the party which proposes a market"
        },
        "vega.NewMarketConfiguration": {
            "properties": {
                "instrument": {
                    "$ref": "#/definitions/vega.InstrumentConfiguration",
                    "additionalProperties": true,
                    "description": "New market instrument configuration"
                },
                "decimal_places": {
                    "type": "string",
                    "description": "Decimal places used for the new market"
                },
                "metadata": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Optional new market meta data, tags"
                },
                "price_monitoring_parameters": {
                    "$ref": "#/definitions/vega.PriceMonitoringParameters",
                    "additionalProperties": true,
                    "description": "Price monitoring parameters"
                },
                "liquidity_monitoring_parameters": {
                    "$ref": "#/definitions/vega.LiquidityMonitoringParameters",
                    "additionalProperties": true,
                    "description": "Liquidity monitoring parameters"
                },
                "simple": {
                    "$ref": "#/definitions/vega.SimpleModelParams",
                    "additionalProperties": true,
                    "description": "Simple risk model parameters, valid only if MODEL_SIMPLE is selected"
                },
                "log_normal": {
                    "$ref": "#/definitions/vega.LogNormalRiskModel",
                    "additionalProperties": true,
                    "description": "Log normal risk model parameters, valid only if MODEL_LOG_NORMAL is selected"
                },
                "position_decimal_places": {
                    "type": "string",
                    "description": "Decimal places for order sizes"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "New Market Configuration",
            "description": "Configuration for a new market on Vega"
        },
        "vega.OracleSpecToFutureBinding": {
            "properties": {
                "settlement_price_property": {
                    "type": "string",
                    "description": "settlement_price_property holds the name of the property in the oracle data that should be used as settlement price. If it is set to \"prices.BTC.value\", then the Future will use the value of this property as settlement price."
                },
                "trading_termination_property": {
                    "type": "string",
                    "description": "the name of the property in the oracle data that signals termination of trading"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Oracle Spec To Future Binding",
            "description": "OracleSpecToFutureBinding tells on which property oracle data should be used as settlement price and which to use the trading terminated trigger"
        },
        "vega.PriceMonitoringParameters": {
            "properties": {
                "triggers": {
                    "items": {
                        "$ref": "#/definitions/vega.PriceMonitoringTrigger"
                    },
                    "type": "array"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Price Monitoring Parameters",
            "description": "PriceMonitoringParameters contains a collection of triggers to be used for a given market"
        },
        "vega.PriceMonitoringTrigger": {
            "properties": {
                "horizon": {
                    "type": "string",
                    "description": "Price monitoring projection horizon τ in seconds"
                },
                "probability": {
                    "type": "string",
                    "description": "Price monitoring probability level p"
                },
                "auction_extension": {
                    "type": "string",
                    "description": "Price monitoring auction extension duration in seconds should the price breach it's theoretical level over the specified horizon at the specified probability level"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Price Monitoring Trigger",
            "description": "PriceMonitoringTrigger holds together price projection horizon τ, probability level p, and auction extension duration"
        },
        "vega.Proposal": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique proposal identifier"
                },
                "reference": {
                    "type": "string",
                    "description": "Proposal reference"
                },
                "party_id": {
                    "type": "string",
                    "description": "Party identifier of the author (the party submitting the proposal)"
                },
                "state": {
                    "enum": [
                        "STATE_UNSPECIFIED",
                        0,
                        "STATE_FAILED",
                        1,
                        "STATE_OPEN",
                        2,
                        "STATE_PASSED",
                        3,
                        "STATE_REJECTED",
                        4,
                        "STATE_DECLINED",
                        5,
                        "STATE_ENACTED",
                        6,
                        "STATE_WAITING_FOR_NODE_VOTE",
                        7
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "State",
                    "description": "Proposal state transition: Open -\u003e   - Passed -\u003e Enacted.   - Passed -\u003e Failed.   - Declined Rejected Proposal can enter Failed state from any other state"
                },
                "timestamp": {
                    "type": "string",
                    "description": "Proposal timestamp for date and time (in nanoseconds) when proposal was submitted to the network"
                },
                "terms": {
                    "$ref": "#/definitions/vega.ProposalTerms",
                    "additionalProperties": true,
                    "description": "Proposal configuration and the actual change that is meant to be executed when proposal is enacted"
                },
                "reason": {
                    "enum": [
                        "PROPOSAL_ERROR_UNSPECIFIED",
                        0,
                        "PROPOSAL_ERROR_CLOSE_TIME_TOO_SOON",
                        1,
                        "PROPOSAL_ERROR_CLOSE_TIME_TOO_LATE",
                        2,
                        "PROPOSAL_ERROR_ENACT_TIME_TOO_SOON",
                        3,
                        "PROPOSAL_ERROR_ENACT_TIME_TOO_LATE",
                        4,
                        "PROPOSAL_ERROR_INSUFFICIENT_TOKENS",
                        5,
                        "PROPOSAL_ERROR_INVALID_INSTRUMENT_SECURITY",
                        6,
                        "PROPOSAL_ERROR_NO_PRODUCT",
                        7,
                        "PROPOSAL_ERROR_UNSUPPORTED_PRODUCT",
                        8,
                        "PROPOSAL_ERROR_NO_TRADING_MODE",
                        11,
                        "PROPOSAL_ERROR_UNSUPPORTED_TRADING_MODE",
                        12,
                        "PROPOSAL_ERROR_NODE_VALIDATION_FAILED",
                        13,
                        "PROPOSAL_ERROR_MISSING_BUILTIN_ASSET_FIELD",
                        14,
                        "PROPOSAL_ERROR_MISSING_ERC20_CONTRACT_ADDRESS",
                        15,
                        "PROPOSAL_ERROR_INVALID_ASSET",
                        16,
                        "PROPOSAL_ERROR_INCOMPATIBLE_TIMESTAMPS",
                        17,
                        "PROPOSAL_ERROR_NO_RISK_PARAMETERS",
                        18,
                        "PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_KEY",
                        19,
                        "PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_VALUE",
                        20,
                        "PROPOSAL_ERROR_NETWORK_PARAMETER_VALIDATION_FAILED",
                        21,
                        "PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_SMALL",
                        22,
                        "PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_LARGE",
                        23,
                        "PROPOSAL_ERROR_MARKET_MISSING_LIQUIDITY_COMMITMENT",
                        24,
                        "PROPOSAL_ERROR_COULD_NOT_INSTANTIATE_MARKET",
                        25,
                        "PROPOSAL_ERROR_INVALID_FUTURE_PRODUCT",
                        26,
                        "PROPOSAL_ERROR_MISSING_COMMITMENT_AMOUNT",
                        27,
                        "PROPOSAL_ERROR_INVALID_FEE_AMOUNT",
                        28,
                        "PROPOSAL_ERROR_INVALID_SHAPE",
                        29,
                        "PROPOSAL_ERROR_INVALID_RISK_PARAMETER",
                        30,
                        "PROPOSAL_ERROR_MAJORITY_THRESHOLD_NOT_REACHED",
                        31,
                        "PROPOSAL_ERROR_PARTICIPATION_THRESHOLD_NOT_REACHED",
                        32,
                        "PROPOSAL_ERROR_INVALID_ASSET_DETAILS",
                        33,
                        "PROPOSAL_ERROR_UNKNOWN_TYPE",
                        34,
                        "PROPOSAL_ERROR_UNKNOWN_RISK_PARAMETER_TYPE",
                        35,
                        "PROPOSAL_ERROR_INVALID_FREEFORM",
                        36,
                        "PROPOSAL_ERROR_INSUFFICIENT_EQUITY_LIKE_SHARE",
                        37,
                        "PROPOSAL_ERROR_INVALID_MARKET",
                        38,
                        "PROPOSAL_ERROR_TOO_MANY_MARKET_DECIMAL_PLACES",
                        39,
                        "PROPOSAL_ERROR_TOO_MANY_PRICE_MONITORING_TRIGGERS",
                        40
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Proposal Error",
                    "description": "A list of possible errors that can cause a proposal to be in state rejected or failed"
                },
                "error_details": {
                    "type": "string",
                    "description": "The detailed error associated to the reason."
                },
                "rationale": {
                    "$ref": "#/definitions/vega.ProposalRationale",
                    "additionalProperties": true,
                    "description": "Proposal rationale that summarises the change and links to the complete proposed changes."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Proposal",
            "description": "Governance proposal"
        },
        "vega.ProposalRationale": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description to show a short title / something in case the link goes offline. This is to be between 0 and 1024 unicode characters. This is mandatory for all proposals."
                },
                "hash": {
                    "type": "string",
                    "description": "Cryptographically secure hash (SHA3-512) of the text pointed by the `url` property so that viewers can check that the text hasn't been changed over time. Optional except for FreeFrom proposal where it's mandatory. If set, the `url` property must be set."
                },
                "url": {
                    "type": "string",
                    "description": "Link to a text file describing the proposal in depth. Optional except for FreeFrom proposal where it's mandatory. If set, the `url` property must be set."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Proposal Rationale"
        },
        "vega.ProposalTerms": {
            "properties": {
                "closing_timestamp": {
                    "type": "string",
                    "description": "Timestamp (Unix time in seconds) when voting closes for this proposal, constrained by `minClose` and `maxClose` network parameters"
                },
                "enactment_timestamp": {
                    "type": "string",
                    "description": "Timestamp (Unix time in seconds) when proposal gets enacted (if passed), constrained by `minEnact` and `maxEnact` network parameters"
                },
                "validation_timestamp": {
                    "type": "string",
                    "description": "Validation timestamp (Unix time in seconds)"
                },
                "update_market": {
                    "$ref": "#/definitions/vega.UpdateMarket",
                    "additionalProperties": true,
                    "description": "Proposal change for modifying an existing market on Vega"
                },
                "new_market": {
                    "$ref": "#/definitions/vega.NewMarket",
                    "additionalProperties": true,
                    "description": "Proposal change for creating new market on Vega"
                },
                "update_network_parameter": {
                    "$ref": "#/definitions/vega.UpdateNetworkParameter",
                    "additionalProperties": true,
                    "description": "Proposal change for updating Vega network parameters"
                },
                "new_asset": {
                    "$ref": "#/definitions/vega.NewAsset",
                    "additionalProperties": true,
                    "description": "Proposal change for creating new assets on Vega"
                },
                "new_freeform": {
                    "$ref": "#/definitions/vega.NewFreeform",
                    "additionalProperties": true,
                    "description": "Proposal change for a freeform voting thing"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Proposal Terms",
            "description": "Terms for a governance proposal on Vega"
        },
        "vega.SimpleModelParams": {
            "properties": {
                "factor_long": {
                    "type": "number",
                    "description": "Pre-defined risk factor value for long"
                },
                "factor_short": {
                    "type": "number",
                    "description": "Pre-defined risk factor value for short"
                },
                "max_move_up": {
                    "type": "number",
                    "description": "Pre-defined maximum price move up that the model considers as valid"
                },
                "min_move_down": {
                    "type": "number",
                    "description": "Pre-defined minimum price move down that the model considers as valid"
                },
                "probability_of_trading": {
                    "type": "number",
                    "description": "Pre-defined constant probability of trading"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Simple Model Params",
            "description": "Risk model parameters for simple modelling"
        },
        "vega.TargetStakeParameters": {
            "properties": {
                "time_window": {
                    "type": "string",
                    "description": "Specifies length of time window expressed in seconds for target stake calculation"
                },
                "scaling_factor": {
                    "type": "number",
                    "description": "Specifies scaling factors used in target stake calculation"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Target Stake Parameters",
            "description": "TargetStakeParameters contains parameters used in target stake calculation"
        },
        "vega.UpdateFutureProduct": {
            "properties": {
                "quote_name": {
                    "type": "string",
                    "description": "Product quote name"
                },
                "oracle_spec_for_settlement_price": {
                    "$ref": "#/definitions/oracles.v1.OracleSpecConfiguration",
                    "additionalProperties": true,
                    "description": "The oracle spec describing the oracle data of settlement price"
                },
                "oracle_spec_for_trading_termination": {
                    "$ref": "#/definitions/oracles.v1.OracleSpecConfiguration",
                    "additionalProperties": true,
                    "description": "The oracle spec describing the oracle data of trading termination"
                },
                "oracle_spec_binding": {
                    "$ref": "#/definitions/vega.OracleSpecToFutureBinding",
                    "additionalProperties": true,
                    "description": "The binding between the oracle spec and the settlement price"
                },
                "settlement_price_decimals": {
                    "type": "integer",
                    "description": "the number of decimal places implied by the settlement price emitted by the settlement oracle"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Update Future Product",
            "description": "Future product configuration"
        },
        "vega.UpdateInstrumentConfiguration": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Instrument code"
                },
                "future": {
                    "$ref": "#/definitions/vega.UpdateFutureProduct",
                    "additionalProperties": true,
                    "description": "Future"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Update Instrument Configuration",
            "description": "Instrument configuration"
        },
        "vega.UpdateMarket": {
            "properties": {
                "market_id": {
                    "type": "string",
                    "description": "The market to update"
                },
                "changes": {
                    "$ref": "#/definitions/vega.UpdateMarketConfiguration",
                    "additionalProperties": true,
                    "description": "The updated configuration of the market"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Update Market",
            "description": "Update an existing market on Vega"
        },
        "vega.UpdateMarketConfiguration": {
            "properties": {
                "instrument": {
                    "$ref": "#/definitions/vega.UpdateInstrumentConfiguration",
                    "additionalProperties": true,
                    "description": "Updated market instrument configuration"
                },
                "metadata": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Optional market metadata, tags"
                },
                "price_monitoring_parameters": {
                    "$ref": "#/definitions/vega.PriceMonitoringParameters",
                    "additionalProperties": true,
                    "description": "Price monitoring parameters"
                },
                "liquidity_monitoring_parameters": {
                    "$ref": "#/definitions/vega.LiquidityMonitoringParameters",
                    "additionalProperties": true,
                    "description": "Liquidity monitoring parameters"
                },
                "simple": {
                    "$ref": "#/definitions/vega.SimpleModelParams",
                    "additionalProperties": true,
                    "description": "Simple risk model parameters, valid only if MODEL_SIMPLE is selected"
                },
                "log_normal": {
                    "$ref": "#/definitions/vega.LogNormalRiskModel",
                    "additionalProperties": true,
                    "description": "Log normal risk model parameters, valid only if MODEL_LOG_NORMAL is selected"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Update Market Configuration",
            "description": "Configuration to update a market on Vega"
        },
        "vega.UpdateNetworkParameter": {
            "properties": {
                "changes": {
                    "$ref": "#/definitions/vega.NetworkParameter",
                    "additionalProperties": true,
                    "description": "The network parameter to update"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Update Network Parameter",
            "description": "Update network configuration on Vega"
        },
        "vega.Vote": {
            "properties": {
                "party_id": {
                    "type": "string",
                    "description": "Voter's party identifier"
                },
                "value": {
                    "enum": [
                        "VALUE_UNSPECIFIED",
                        0,
                        "VALUE_NO",
                        1,
                        "VALUE_YES",
                        2
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Value",
                    "description": "Vote value"
                },
                "proposal_id": {
                    "type": "string",
                    "description": "Identifier of the proposal being voted on"
                },
                "timestamp": {
                    "type": "string",
                    "description": "Vote timestamp for date and time (in nanoseconds) when vote was submitted to the network"
                },
                "total_governance_token_balance": {
                    "type": "string",
                    "description": "Total number of governance token for the party that casted the vote"
                },
                "total_governance_token_weight": {
                    "type": "string",
                    "description": "The weight of this vote based on the total of governance token"
                },
                "total_equity_like_share_weight": {
                    "type": "string",
                    "description": "The weight of the vote compared to the total number of equity-like share on the market."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Vote",
            "description": "Governance vote"
        }
    }
}