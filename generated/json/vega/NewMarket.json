{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/NewMarket",
    "definitions": {
        "NewMarket": {
            "properties": {
                "changes": {
                    "$ref": "#/definitions/vega.NewMarketConfiguration",
                    "additionalProperties": true,
                    "description": "The configuration of the new market"
                },
                "liquidity_commitment": {
                    "$ref": "#/definitions/vega.NewMarketCommitment",
                    "additionalProperties": true,
                    "description": "The commitment from the party creating the NewMarket proposal"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "New Market",
            "description": "New market on Vega"
        },
        "vega.FutureProduct": {
            "properties": {
                "settlement_asset": {
                    "type": "string",
                    "description": "Asset ID for the product's settlement asset"
                },
                "quote_name": {
                    "type": "string",
                    "description": "Product quote name"
                },
                "oracle_spec_for_settlement_price": {
                    "$ref": "#/definitions/vega.data.v1.DataSpecConfiguration",
                    "additionalProperties": true,
                    "description": "The oracle spec describing the oracle data of settlement price"
                },
                "oracle_spec_for_trading_termination": {
                    "$ref": "#/definitions/vega.data.v1.DataSpecConfiguration",
                    "additionalProperties": true,
                    "description": "The oracle spec describing the oracle data of trading termination"
                },
                "oracle_spec_binding": {
                    "$ref": "#/definitions/vega.OracleSpecToFutureBinding",
                    "additionalProperties": true,
                    "description": "The binding between the oracle spec and the settlement price"
                },
                "settlement_price_decimals": {
                    "type": "integer",
                    "description": "The number of decimal places implied by the settlement price emitted by the settlement oracle"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Future Product",
            "description": "Future product configuration"
        },
        "vega.InstrumentConfiguration": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Instrument name"
                },
                "code": {
                    "type": "string",
                    "description": "Instrument code, human-readable shortcode used to describe the instrument"
                },
                "future": {
                    "$ref": "#/definitions/vega.FutureProduct",
                    "additionalProperties": true,
                    "description": "Future"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Instrument Configuration",
            "description": "Instrument configuration"
        },
        "vega.LiquidityMonitoringParameters": {
            "properties": {
                "target_stake_parameters": {
                    "$ref": "#/definitions/vega.TargetStakeParameters",
                    "additionalProperties": true,
                    "description": "Specifies parameters related to target stake calculation"
                },
                "triggering_ratio": {
                    "type": "number",
                    "description": "Specifies the triggering ratio for entering liquidity auction"
                },
                "auction_extension": {
                    "type": "string",
                    "description": "Specifies by how many seconds an auction should be extended if leaving the auction were to trigger a liquidity auction"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Liquidity Monitoring Parameters",
            "description": "LiquidityMonitoringParameters contains settings used for liquidity monitoring"
        },
        "vega.LiquidityOrder": {
            "properties": {
                "reference": {
                    "enum": [
                        "PEGGED_REFERENCE_UNSPECIFIED",
                        0,
                        "PEGGED_REFERENCE_MID",
                        1,
                        "PEGGED_REFERENCE_BEST_BID",
                        2,
                        "PEGGED_REFERENCE_BEST_ASK",
                        3
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Pegged Reference",
                    "description": "A pegged reference defines which price point a pegged order is linked to - meaning the price for a pegged order is calculated from the value of the reference price point"
                },
                "proportion": {
                    "type": "integer",
                    "description": "The relative proportion of the commitment to be allocated at a price level"
                },
                "offset": {
                    "type": "string",
                    "description": "The offset/amount of units away for the order"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Liquidity Order",
            "description": "Represents a liquidity order"
        },
        "vega.LogNormalModelParams": {
            "properties": {
                "mu": {
                    "type": "number",
                    "description": "Mu param"
                },
                "r": {
                    "type": "number",
                    "description": "R param"
                },
                "sigma": {
                    "type": "number",
                    "description": "Sigma param"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Log Normal Model Params",
            "description": "Risk model parameters for log normal"
        },
        "vega.LogNormalRiskModel": {
            "properties": {
                "risk_aversion_parameter": {
                    "type": "number",
                    "description": "Risk Aversion Parameter"
                },
                "tau": {
                    "type": "number",
                    "description": "Tau"
                },
                "params": {
                    "$ref": "#/definitions/vega.LogNormalModelParams",
                    "additionalProperties": true,
                    "description": "Risk model parameters for log normal"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Log Normal Risk Model",
            "description": "Risk model for log normal"
        },
        "vega.NewMarketCommitment": {
            "properties": {
                "commitment_amount": {
                    "type": "string",
                    "description": "Specified as a unitless number that represents the amount of settlement asset of the market"
                },
                "fee": {
                    "type": "string",
                    "description": "Nominated liquidity fee factor, which is an input to the calculation of taker fees on the market, as per seeting fees and rewarding liquidity providers"
                },
                "sells": {
                    "items": {
                        "$ref": "#/definitions/vega.LiquidityOrder"
                    },
                    "type": "array",
                    "description": "A set of liquidity sell orders to meet the liquidity provision obligation"
                },
                "buys": {
                    "items": {
                        "$ref": "#/definitions/vega.LiquidityOrder"
                    },
                    "type": "array",
                    "description": "A set of liquidity buy orders to meet the liquidity provision obligation"
                },
                "reference": {
                    "type": "string",
                    "description": "A reference to be associated to all orders created from this commitment"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "New Market Commitment",
            "description": "A commitment of liquidity to be made by the party which proposes a market"
        },
        "vega.NewMarketConfiguration": {
            "properties": {
                "instrument": {
                    "$ref": "#/definitions/vega.InstrumentConfiguration",
                    "additionalProperties": true,
                    "description": "New market instrument configuration"
                },
                "decimal_places": {
                    "type": "string",
                    "description": "Decimal places used for the new market, sets the smallest price increment on the book"
                },
                "metadata": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Optional new market meta data, tags"
                },
                "price_monitoring_parameters": {
                    "$ref": "#/definitions/vega.PriceMonitoringParameters",
                    "additionalProperties": true,
                    "description": "Price monitoring parameters"
                },
                "liquidity_monitoring_parameters": {
                    "$ref": "#/definitions/vega.LiquidityMonitoringParameters",
                    "additionalProperties": true,
                    "description": "Liquidity monitoring parameters"
                },
                "simple": {
                    "$ref": "#/definitions/vega.SimpleModelParams",
                    "additionalProperties": true,
                    "description": "Simple risk model parameters, valid only if MODEL_SIMPLE is selected"
                },
                "log_normal": {
                    "$ref": "#/definitions/vega.LogNormalRiskModel",
                    "additionalProperties": true,
                    "description": "Log normal risk model parameters, valid only if MODEL_LOG_NORMAL is selected"
                },
                "position_decimal_places": {
                    "type": "string",
                    "description": "Decimal places for order sizes, sets what size the smallest order / position on the market can be"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "New Market Configuration",
            "description": "Configuration for a new market on Vega"
        },
        "vega.OracleSpecToFutureBinding": {
            "properties": {
                "settlement_price_property": {
                    "type": "string",
                    "description": "settlement_price_property holds the name of the property in the oracle data that should be used as settlement price. If it is set to \"prices.BTC.value\", then the Future will use the value of this property as settlement price."
                },
                "trading_termination_property": {
                    "type": "string",
                    "description": "the name of the property in the oracle data that signals termination of trading"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Oracle Spec To Future Binding",
            "description": "OracleSpecToFutureBinding tells on which property oracle data should be used as settlement price and which to use the trading terminated trigger"
        },
        "vega.PriceMonitoringParameters": {
            "properties": {
                "triggers": {
                    "items": {
                        "$ref": "#/definitions/vega.PriceMonitoringTrigger"
                    },
                    "type": "array"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Price Monitoring Parameters",
            "description": "PriceMonitoringParameters contains a collection of triggers to be used for a given market"
        },
        "vega.PriceMonitoringTrigger": {
            "properties": {
                "horizon": {
                    "type": "string",
                    "description": "Price monitoring projection horizon τ in seconds"
                },
                "probability": {
                    "type": "string",
                    "description": "Price monitoring probability level p"
                },
                "auction_extension": {
                    "type": "string",
                    "description": "Price monitoring auction extension duration in seconds should the price breach it's theoretical level over the specified horizon at the specified probability level"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Price Monitoring Trigger",
            "description": "PriceMonitoringTrigger holds together price projection horizon τ, probability level p, and auction extension duration"
        },
        "vega.SimpleModelParams": {
            "properties": {
                "factor_long": {
                    "type": "number",
                    "description": "Pre-defined risk factor value for long"
                },
                "factor_short": {
                    "type": "number",
                    "description": "Pre-defined risk factor value for short"
                },
                "max_move_up": {
                    "type": "number",
                    "description": "Pre-defined maximum price move up that the model considers as valid"
                },
                "min_move_down": {
                    "type": "number",
                    "description": "Pre-defined minimum price move down that the model considers as valid"
                },
                "probability_of_trading": {
                    "type": "number",
                    "description": "Pre-defined constant probability of trading"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Simple Model Params",
            "description": "Risk model parameters for simple modelling"
        },
        "vega.TargetStakeParameters": {
            "properties": {
                "time_window": {
                    "type": "string",
                    "description": "Specifies length of time window expressed in seconds for target stake calculation"
                },
                "scaling_factor": {
                    "type": "number",
                    "description": "Specifies scaling factors used in target stake calculation"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Target Stake Parameters",
            "description": "TargetStakeParameters contains parameters used in target stake calculation"
        },
        "vega.data.v1.Condition": {
            "properties": {
                "operator": {
                    "enum": [
                        "OPERATOR_UNSPECIFIED",
                        0,
                        "OPERATOR_EQUALS",
                        1,
                        "OPERATOR_GREATER_THAN",
                        2,
                        "OPERATOR_GREATER_THAN_OR_EQUAL",
                        3,
                        "OPERATOR_LESS_THAN",
                        4,
                        "OPERATOR_LESS_THAN_OR_EQUAL",
                        5
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Operator",
                    "description": "Comparator describes the type of comparison."
                },
                "value": {
                    "type": "string",
                    "description": "value is used by the comparator."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Condition",
            "description": "Condition describes the condition that must be validated by the"
        },
        "vega.data.v1.DataSpecConfiguration": {
            "properties": {
                "pub_keys": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "pubKeys is the list of authorized public keys that signed the data for this external source. All the public keys in the data should be contained in these public keys."
                },
                "filters": {
                    "items": {
                        "$ref": "#/definitions/vega.data.v1.Filter"
                    },
                    "type": "array",
                    "description": "filters describes which source data are considered of interest or not for the product (or the risk model)."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Data Spec Configuration",
            "description": "In all types of external data sources we have the same configuration set for meeting requirements in order the data to be useful for Vega - valid public keys and matching filters."
        },
        "vega.data.v1.Filter": {
            "properties": {
                "key": {
                    "$ref": "#/definitions/vega.data.v1.PropertyKey",
                    "additionalProperties": true,
                    "description": "key is the oracle data property key targeted by the filter."
                },
                "conditions": {
                    "items": {
                        "$ref": "#/definitions/vega.data.v1.Condition"
                    },
                    "type": "array",
                    "description": "conditions are the conditions that should be matched by the data to be considered of interest."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "An oracle spec is a data source spec.\nmessage OracleSpec {\nDataSpec oracle_spec = 1;\n}",
            "description": "An oracle spec is a data source spec.message OracleSpec {DataSpec oracle_spec = 1;}  Filter describes the conditions under which an oracle data is considered of interest or not."
        },
        "vega.data.v1.PropertyKey": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name is the name of the property."
                },
                "type": {
                    "enum": [
                        "TYPE_UNSPECIFIED",
                        0,
                        "TYPE_EMPTY",
                        1,
                        "TYPE_INTEGER",
                        2,
                        "TYPE_STRING",
                        3,
                        "TYPE_BOOLEAN",
                        4,
                        "TYPE_DECIMAL",
                        5,
                        "TYPE_TIMESTAMP",
                        6
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Type",
                    "description": "Type describes the type of properties that are supported by the oracle engine."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Property Key",
            "description": "PropertyKey describes the property key contained in an oracle data."
        }
    }
}