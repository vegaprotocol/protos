// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vega/commands/v1/commands.proto

package v1

import (
	vega "code.vegaprotocol.io/protos/vega"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UndelegateSubmission_Method int32

const (
	UndelegateSubmission_METHOD_UNSPECIFIED     UndelegateSubmission_Method = 0
	UndelegateSubmission_METHOD_NOW             UndelegateSubmission_Method = 1
	UndelegateSubmission_METHOD_AT_END_OF_EPOCH UndelegateSubmission_Method = 2
	UndelegateSubmission_METHOD_IN_ANGER        UndelegateSubmission_Method = 3
)

var UndelegateSubmission_Method_name = map[int32]string{
	0: "METHOD_UNSPECIFIED",
	1: "METHOD_NOW",
	2: "METHOD_AT_END_OF_EPOCH",
	3: "METHOD_IN_ANGER",
}

var UndelegateSubmission_Method_value = map[string]int32{
	"METHOD_UNSPECIFIED":     0,
	"METHOD_NOW":             1,
	"METHOD_AT_END_OF_EPOCH": 2,
	"METHOD_IN_ANGER":        3,
}

func (x UndelegateSubmission_Method) String() string {
	return proto.EnumName(UndelegateSubmission_Method_name, int32(x))
}

func (UndelegateSubmission_Method) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{11, 0}
}

// Replacement for the google well-known type until we can get rid of this
// entirely
type Int64Value struct {
	Value                int64    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Int64Value) Reset()         { *m = Int64Value{} }
func (m *Int64Value) String() string { return proto.CompactTextString(m) }
func (*Int64Value) ProtoMessage()    {}
func (*Int64Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{0}
}

func (m *Int64Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Int64Value.Unmarshal(m, b)
}
func (m *Int64Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Int64Value.Marshal(b, m, deterministic)
}
func (m *Int64Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Int64Value.Merge(m, src)
}
func (m *Int64Value) XXX_Size() int {
	return xxx_messageInfo_Int64Value.Size(m)
}
func (m *Int64Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Int64Value.DiscardUnknown(m)
}

var xxx_messageInfo_Int64Value proto.InternalMessageInfo

func (m *Int64Value) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// An order submission is a request to submit or create a new order on Vega
type OrderSubmission struct {
	// Market identifier for the order, required field
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// Price for the order, the price is an integer, for example `123456` is a correctly
	// formatted price of `1.23456` assuming market configured to 5 decimal places,
	// , required field for limit orders, however it is not required for market orders
	Price string `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	// Size for the order, for example, in a futures market the size equals the number of contracts, cannot be negative
	Size uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// Side for the order, e.g. SIDE_BUY or SIDE_SELL, required field - See [`Side`](#vega.Side)
	Side vega.Side `protobuf:"varint,4,opt,name=side,proto3,enum=vega.Side" json:"side,omitempty"`
	// Time in force indicates how long an order will remain active before it is executed or expires, required field
	// - See [`Order.TimeInForce`](#vega.Order.TimeInForce)
	TimeInForce vega.Order_TimeInForce `protobuf:"varint,5,opt,name=time_in_force,json=timeInForce,proto3,enum=vega.Order_TimeInForce" json:"time_in_force,omitempty"`
	// Timestamp for when the order will expire, in nanoseconds since the epoch,
	// required field only for [`Order.TimeInForce`](#vega.Order.TimeInForce)`.TIME_IN_FORCE_GTT`
	// - See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`
	ExpiresAt int64 `protobuf:"varint,6,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Type for the order, required field - See [`Order.Type`](#vega.Order.Type)
	Type vega.Order_Type `protobuf:"varint,7,opt,name=type,proto3,enum=vega.Order_Type" json:"type,omitempty"`
	// Reference given for the order, this is typically used to retrieve an order submitted through consensus, currently
	// set internally by the node to return a unique reference identifier for the order submission
	Reference string `protobuf:"bytes,8,opt,name=reference,proto3" json:"reference,omitempty"`
	// Used to specify the details for a pegged order
	// - See [`PeggedOrder`](#vega.PeggedOrder)
	PeggedOrder          *vega.PeggedOrder `protobuf:"bytes,9,opt,name=pegged_order,json=peggedOrder,proto3" json:"pegged_order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OrderSubmission) Reset()         { *m = OrderSubmission{} }
func (m *OrderSubmission) String() string { return proto.CompactTextString(m) }
func (*OrderSubmission) ProtoMessage()    {}
func (*OrderSubmission) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{1}
}

func (m *OrderSubmission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderSubmission.Unmarshal(m, b)
}
func (m *OrderSubmission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderSubmission.Marshal(b, m, deterministic)
}
func (m *OrderSubmission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderSubmission.Merge(m, src)
}
func (m *OrderSubmission) XXX_Size() int {
	return xxx_messageInfo_OrderSubmission.Size(m)
}
func (m *OrderSubmission) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderSubmission.DiscardUnknown(m)
}

var xxx_messageInfo_OrderSubmission proto.InternalMessageInfo

func (m *OrderSubmission) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *OrderSubmission) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *OrderSubmission) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *OrderSubmission) GetSide() vega.Side {
	if m != nil {
		return m.Side
	}
	return vega.Side_SIDE_UNSPECIFIED
}

func (m *OrderSubmission) GetTimeInForce() vega.Order_TimeInForce {
	if m != nil {
		return m.TimeInForce
	}
	return vega.Order_TIME_IN_FORCE_UNSPECIFIED
}

func (m *OrderSubmission) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

func (m *OrderSubmission) GetType() vega.Order_Type {
	if m != nil {
		return m.Type
	}
	return vega.Order_TYPE_UNSPECIFIED
}

func (m *OrderSubmission) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *OrderSubmission) GetPeggedOrder() *vega.PeggedOrder {
	if m != nil {
		return m.PeggedOrder
	}
	return nil
}

// An order cancellation is a request to cancel an existing order on Vega
type OrderCancellation struct {
	// Unique identifier for the order (set by the system after consensus), required field
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// Market identifier for the order, required field
	MarketId             string   `protobuf:"bytes,2,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderCancellation) Reset()         { *m = OrderCancellation{} }
func (m *OrderCancellation) String() string { return proto.CompactTextString(m) }
func (*OrderCancellation) ProtoMessage()    {}
func (*OrderCancellation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{2}
}

func (m *OrderCancellation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCancellation.Unmarshal(m, b)
}
func (m *OrderCancellation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCancellation.Marshal(b, m, deterministic)
}
func (m *OrderCancellation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCancellation.Merge(m, src)
}
func (m *OrderCancellation) XXX_Size() int {
	return xxx_messageInfo_OrderCancellation.Size(m)
}
func (m *OrderCancellation) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCancellation.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCancellation proto.InternalMessageInfo

func (m *OrderCancellation) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *OrderCancellation) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

// An order amendment is a request to amend or update an existing order on Vega
type OrderAmendment struct {
	// Order identifier, this is required to find the order and will not be updated, required field
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// Market identifier, this is required to find the order and will not be updated
	MarketId string `protobuf:"bytes,2,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// Amend the price for the order, if the Price value is set, otherwise price will remain unchanged - See [`Price`](#vega.Price)
	Price *vega.Price `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	// Amend the size for the order by the delta specified:
	// - To reduce the size from the current value set a negative integer value
	// - To increase the size from the current value, set a positive integer value
	// - To leave the size unchanged set a value of zero
	SizeDelta int64 `protobuf:"varint,4,opt,name=size_delta,json=sizeDelta,proto3" json:"size_delta,omitempty"`
	// Amend the expiry time for the order, if the Timestamp value is set, otherwise expiry time will remain unchanged
	// - See [`VegaTimeResponse`](#api.VegaTimeResponse).`timestamp`
	ExpiresAt *vega.Timestamp `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Amend the time in force for the order, set to TIME_IN_FORCE_UNSPECIFIED to remain unchanged
	// - See [`TimeInForce`](#api.VegaTimeResponse).`timestamp`
	TimeInForce vega.Order_TimeInForce `protobuf:"varint,6,opt,name=time_in_force,json=timeInForce,proto3,enum=vega.Order_TimeInForce" json:"time_in_force,omitempty"`
	// Amend the pegged order offset for the order
	PeggedOffset string `protobuf:"bytes,7,opt,name=pegged_offset,json=peggedOffset,proto3" json:"pegged_offset,omitempty"`
	// Amend the pegged order reference for the order
	// - See [`PeggedReference`](#vega.PeggedReference)
	PeggedReference      vega.PeggedReference `protobuf:"varint,8,opt,name=pegged_reference,json=peggedReference,proto3,enum=vega.PeggedReference" json:"pegged_reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OrderAmendment) Reset()         { *m = OrderAmendment{} }
func (m *OrderAmendment) String() string { return proto.CompactTextString(m) }
func (*OrderAmendment) ProtoMessage()    {}
func (*OrderAmendment) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{3}
}

func (m *OrderAmendment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderAmendment.Unmarshal(m, b)
}
func (m *OrderAmendment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderAmendment.Marshal(b, m, deterministic)
}
func (m *OrderAmendment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderAmendment.Merge(m, src)
}
func (m *OrderAmendment) XXX_Size() int {
	return xxx_messageInfo_OrderAmendment.Size(m)
}
func (m *OrderAmendment) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderAmendment.DiscardUnknown(m)
}

var xxx_messageInfo_OrderAmendment proto.InternalMessageInfo

func (m *OrderAmendment) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *OrderAmendment) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *OrderAmendment) GetPrice() *vega.Price {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *OrderAmendment) GetSizeDelta() int64 {
	if m != nil {
		return m.SizeDelta
	}
	return 0
}

func (m *OrderAmendment) GetExpiresAt() *vega.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

func (m *OrderAmendment) GetTimeInForce() vega.Order_TimeInForce {
	if m != nil {
		return m.TimeInForce
	}
	return vega.Order_TIME_IN_FORCE_UNSPECIFIED
}

func (m *OrderAmendment) GetPeggedOffset() string {
	if m != nil {
		return m.PeggedOffset
	}
	return ""
}

func (m *OrderAmendment) GetPeggedReference() vega.PeggedReference {
	if m != nil {
		return m.PeggedReference
	}
	return vega.PeggedReference_PEGGED_REFERENCE_UNSPECIFIED
}

// A liquidity provision submitted for a given market
type LiquidityProvisionSubmission struct {
	// Market identifier for the order, required field
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// Specified as a unitless number that represents the amount of settlement asset of the market
	CommitmentAmount string `protobuf:"bytes,2,opt,name=commitment_amount,json=commitmentAmount,proto3" json:"commitment_amount,omitempty"`
	// Nominated liquidity fee factor, which is an input to the calculation of taker fees on the market, as per seeting fees and rewarding liquidity providers
	Fee string `protobuf:"bytes,3,opt,name=fee,proto3" json:"fee,omitempty"`
	// A set of liquidity sell orders to meet the liquidity provision obligation
	Sells []*vega.LiquidityOrder `protobuf:"bytes,4,rep,name=sells,proto3" json:"sells,omitempty"`
	// A set of liquidity buy orders to meet the liquidity provision obligation
	Buys []*vega.LiquidityOrder `protobuf:"bytes,5,rep,name=buys,proto3" json:"buys,omitempty"`
	// A reference to be added to every order created out of this liquidityProvisionSubmission
	Reference            string   `protobuf:"bytes,6,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LiquidityProvisionSubmission) Reset()         { *m = LiquidityProvisionSubmission{} }
func (m *LiquidityProvisionSubmission) String() string { return proto.CompactTextString(m) }
func (*LiquidityProvisionSubmission) ProtoMessage()    {}
func (*LiquidityProvisionSubmission) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{4}
}

func (m *LiquidityProvisionSubmission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiquidityProvisionSubmission.Unmarshal(m, b)
}
func (m *LiquidityProvisionSubmission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiquidityProvisionSubmission.Marshal(b, m, deterministic)
}
func (m *LiquidityProvisionSubmission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiquidityProvisionSubmission.Merge(m, src)
}
func (m *LiquidityProvisionSubmission) XXX_Size() int {
	return xxx_messageInfo_LiquidityProvisionSubmission.Size(m)
}
func (m *LiquidityProvisionSubmission) XXX_DiscardUnknown() {
	xxx_messageInfo_LiquidityProvisionSubmission.DiscardUnknown(m)
}

var xxx_messageInfo_LiquidityProvisionSubmission proto.InternalMessageInfo

func (m *LiquidityProvisionSubmission) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *LiquidityProvisionSubmission) GetCommitmentAmount() string {
	if m != nil {
		return m.CommitmentAmount
	}
	return ""
}

func (m *LiquidityProvisionSubmission) GetFee() string {
	if m != nil {
		return m.Fee
	}
	return ""
}

func (m *LiquidityProvisionSubmission) GetSells() []*vega.LiquidityOrder {
	if m != nil {
		return m.Sells
	}
	return nil
}

func (m *LiquidityProvisionSubmission) GetBuys() []*vega.LiquidityOrder {
	if m != nil {
		return m.Buys
	}
	return nil
}

func (m *LiquidityProvisionSubmission) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

// Cancel a liquidity provision request
type LiquidityProvisionCancellation struct {
	MarketId             string   `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LiquidityProvisionCancellation) Reset()         { *m = LiquidityProvisionCancellation{} }
func (m *LiquidityProvisionCancellation) String() string { return proto.CompactTextString(m) }
func (*LiquidityProvisionCancellation) ProtoMessage()    {}
func (*LiquidityProvisionCancellation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{5}
}

func (m *LiquidityProvisionCancellation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiquidityProvisionCancellation.Unmarshal(m, b)
}
func (m *LiquidityProvisionCancellation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiquidityProvisionCancellation.Marshal(b, m, deterministic)
}
func (m *LiquidityProvisionCancellation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiquidityProvisionCancellation.Merge(m, src)
}
func (m *LiquidityProvisionCancellation) XXX_Size() int {
	return xxx_messageInfo_LiquidityProvisionCancellation.Size(m)
}
func (m *LiquidityProvisionCancellation) XXX_DiscardUnknown() {
	xxx_messageInfo_LiquidityProvisionCancellation.DiscardUnknown(m)
}

var xxx_messageInfo_LiquidityProvisionCancellation proto.InternalMessageInfo

func (m *LiquidityProvisionCancellation) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

// Amend a liquidity provision request
type LiquidityProvisionAmendment struct {
	MarketId string `protobuf:"bytes,1,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// From here at least one of the following is required to consider the command valid
	CommitmentAmount     string                 `protobuf:"bytes,2,opt,name=commitment_amount,json=commitmentAmount,proto3" json:"commitment_amount,omitempty"`
	Fee                  string                 `protobuf:"bytes,3,opt,name=fee,proto3" json:"fee,omitempty"`
	Sells                []*vega.LiquidityOrder `protobuf:"bytes,4,rep,name=sells,proto3" json:"sells,omitempty"`
	Buys                 []*vega.LiquidityOrder `protobuf:"bytes,5,rep,name=buys,proto3" json:"buys,omitempty"`
	Reference            string                 `protobuf:"bytes,6,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *LiquidityProvisionAmendment) Reset()         { *m = LiquidityProvisionAmendment{} }
func (m *LiquidityProvisionAmendment) String() string { return proto.CompactTextString(m) }
func (*LiquidityProvisionAmendment) ProtoMessage()    {}
func (*LiquidityProvisionAmendment) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{6}
}

func (m *LiquidityProvisionAmendment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiquidityProvisionAmendment.Unmarshal(m, b)
}
func (m *LiquidityProvisionAmendment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiquidityProvisionAmendment.Marshal(b, m, deterministic)
}
func (m *LiquidityProvisionAmendment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiquidityProvisionAmendment.Merge(m, src)
}
func (m *LiquidityProvisionAmendment) XXX_Size() int {
	return xxx_messageInfo_LiquidityProvisionAmendment.Size(m)
}
func (m *LiquidityProvisionAmendment) XXX_DiscardUnknown() {
	xxx_messageInfo_LiquidityProvisionAmendment.DiscardUnknown(m)
}

var xxx_messageInfo_LiquidityProvisionAmendment proto.InternalMessageInfo

func (m *LiquidityProvisionAmendment) GetMarketId() string {
	if m != nil {
		return m.MarketId
	}
	return ""
}

func (m *LiquidityProvisionAmendment) GetCommitmentAmount() string {
	if m != nil {
		return m.CommitmentAmount
	}
	return ""
}

func (m *LiquidityProvisionAmendment) GetFee() string {
	if m != nil {
		return m.Fee
	}
	return ""
}

func (m *LiquidityProvisionAmendment) GetSells() []*vega.LiquidityOrder {
	if m != nil {
		return m.Sells
	}
	return nil
}

func (m *LiquidityProvisionAmendment) GetBuys() []*vega.LiquidityOrder {
	if m != nil {
		return m.Buys
	}
	return nil
}

func (m *LiquidityProvisionAmendment) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

// Represents the submission request to withdraw funds for a party on Vega
type WithdrawSubmission struct {
	// The amount to be withdrawn
	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// The asset we want to withdraw
	Asset string `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	// Foreign chain specifics
	Ext                  *vega.WithdrawExt `protobuf:"bytes,3,opt,name=ext,proto3" json:"ext,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WithdrawSubmission) Reset()         { *m = WithdrawSubmission{} }
func (m *WithdrawSubmission) String() string { return proto.CompactTextString(m) }
func (*WithdrawSubmission) ProtoMessage()    {}
func (*WithdrawSubmission) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{7}
}

func (m *WithdrawSubmission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawSubmission.Unmarshal(m, b)
}
func (m *WithdrawSubmission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawSubmission.Marshal(b, m, deterministic)
}
func (m *WithdrawSubmission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawSubmission.Merge(m, src)
}
func (m *WithdrawSubmission) XXX_Size() int {
	return xxx_messageInfo_WithdrawSubmission.Size(m)
}
func (m *WithdrawSubmission) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawSubmission.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawSubmission proto.InternalMessageInfo

func (m *WithdrawSubmission) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *WithdrawSubmission) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *WithdrawSubmission) GetExt() *vega.WithdrawExt {
	if m != nil {
		return m.Ext
	}
	return nil
}

// A command to submit a new proposal for the
// vega network governance
type ProposalSubmission struct {
	// Proposal reference
	Reference string `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
	// Proposal configuration and the actual change that is meant to be executed when proposal is enacted
	Terms                *vega.ProposalTerms `protobuf:"bytes,2,opt,name=terms,proto3" json:"terms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ProposalSubmission) Reset()         { *m = ProposalSubmission{} }
func (m *ProposalSubmission) String() string { return proto.CompactTextString(m) }
func (*ProposalSubmission) ProtoMessage()    {}
func (*ProposalSubmission) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{8}
}

func (m *ProposalSubmission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposalSubmission.Unmarshal(m, b)
}
func (m *ProposalSubmission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposalSubmission.Marshal(b, m, deterministic)
}
func (m *ProposalSubmission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalSubmission.Merge(m, src)
}
func (m *ProposalSubmission) XXX_Size() int {
	return xxx_messageInfo_ProposalSubmission.Size(m)
}
func (m *ProposalSubmission) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalSubmission.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalSubmission proto.InternalMessageInfo

func (m *ProposalSubmission) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *ProposalSubmission) GetTerms() *vega.ProposalTerms {
	if m != nil {
		return m.Terms
	}
	return nil
}

// A command to submit a new vote for a governance
// proposal.
type VoteSubmission struct {
	// The ID of the proposal to vote for.
	ProposalId string `protobuf:"bytes,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	// The actual value of the vote
	Value                vega.Vote_Value `protobuf:"varint,2,opt,name=value,proto3,enum=vega.Vote_Value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *VoteSubmission) Reset()         { *m = VoteSubmission{} }
func (m *VoteSubmission) String() string { return proto.CompactTextString(m) }
func (*VoteSubmission) ProtoMessage()    {}
func (*VoteSubmission) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{9}
}

func (m *VoteSubmission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteSubmission.Unmarshal(m, b)
}
func (m *VoteSubmission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteSubmission.Marshal(b, m, deterministic)
}
func (m *VoteSubmission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteSubmission.Merge(m, src)
}
func (m *VoteSubmission) XXX_Size() int {
	return xxx_messageInfo_VoteSubmission.Size(m)
}
func (m *VoteSubmission) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteSubmission.DiscardUnknown(m)
}

var xxx_messageInfo_VoteSubmission proto.InternalMessageInfo

func (m *VoteSubmission) GetProposalId() string {
	if m != nil {
		return m.ProposalId
	}
	return ""
}

func (m *VoteSubmission) GetValue() vega.Vote_Value {
	if m != nil {
		return m.Value
	}
	return vega.Vote_VALUE_UNSPECIFIED
}

// A command to submit an instruction to delegate some stake to a node
type DelegateSubmission struct {
	// The ID for the node to delegate to
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// The amount of stake to delegate
	Amount               string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelegateSubmission) Reset()         { *m = DelegateSubmission{} }
func (m *DelegateSubmission) String() string { return proto.CompactTextString(m) }
func (*DelegateSubmission) ProtoMessage()    {}
func (*DelegateSubmission) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{10}
}

func (m *DelegateSubmission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelegateSubmission.Unmarshal(m, b)
}
func (m *DelegateSubmission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelegateSubmission.Marshal(b, m, deterministic)
}
func (m *DelegateSubmission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelegateSubmission.Merge(m, src)
}
func (m *DelegateSubmission) XXX_Size() int {
	return xxx_messageInfo_DelegateSubmission.Size(m)
}
func (m *DelegateSubmission) XXX_DiscardUnknown() {
	xxx_messageInfo_DelegateSubmission.DiscardUnknown(m)
}

var xxx_messageInfo_DelegateSubmission proto.InternalMessageInfo

func (m *DelegateSubmission) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *DelegateSubmission) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type UndelegateSubmission struct {
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// optional, if not specified = ALL
	Amount               string                      `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Method               UndelegateSubmission_Method `protobuf:"varint,3,opt,name=method,proto3,enum=vega.commands.v1.UndelegateSubmission_Method" json:"method,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *UndelegateSubmission) Reset()         { *m = UndelegateSubmission{} }
func (m *UndelegateSubmission) String() string { return proto.CompactTextString(m) }
func (*UndelegateSubmission) ProtoMessage()    {}
func (*UndelegateSubmission) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{11}
}

func (m *UndelegateSubmission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UndelegateSubmission.Unmarshal(m, b)
}
func (m *UndelegateSubmission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UndelegateSubmission.Marshal(b, m, deterministic)
}
func (m *UndelegateSubmission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UndelegateSubmission.Merge(m, src)
}
func (m *UndelegateSubmission) XXX_Size() int {
	return xxx_messageInfo_UndelegateSubmission.Size(m)
}
func (m *UndelegateSubmission) XXX_DiscardUnknown() {
	xxx_messageInfo_UndelegateSubmission.DiscardUnknown(m)
}

var xxx_messageInfo_UndelegateSubmission proto.InternalMessageInfo

func (m *UndelegateSubmission) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *UndelegateSubmission) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *UndelegateSubmission) GetMethod() UndelegateSubmission_Method {
	if m != nil {
		return m.Method
	}
	return UndelegateSubmission_METHOD_UNSPECIFIED
}

// A command that loads the state from a given checkpoint
type RestoreSnapshot struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestoreSnapshot) Reset()         { *m = RestoreSnapshot{} }
func (m *RestoreSnapshot) String() string { return proto.CompactTextString(m) }
func (*RestoreSnapshot) ProtoMessage()    {}
func (*RestoreSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{12}
}

func (m *RestoreSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestoreSnapshot.Unmarshal(m, b)
}
func (m *RestoreSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestoreSnapshot.Marshal(b, m, deterministic)
}
func (m *RestoreSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreSnapshot.Merge(m, src)
}
func (m *RestoreSnapshot) XXX_Size() int {
	return xxx_messageInfo_RestoreSnapshot.Size(m)
}
func (m *RestoreSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreSnapshot proto.InternalMessageInfo

func (m *RestoreSnapshot) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// A transfer initiated by a party
type Transfer struct {
	// The account type from which the funds of the party
	// should be taken
	FromAccountType vega.AccountType `protobuf:"varint,1,opt,name=from_account_type,json=fromAccountType,proto3,enum=vega.AccountType" json:"from_account_type,omitempty"`
	// The public key of the destination account
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	// The type of the destination account
	ToAccountType vega.AccountType `protobuf:"varint,3,opt,name=to_account_type,json=toAccountType,proto3,enum=vega.AccountType" json:"to_account_type,omitempty"`
	// The asset
	Asset string `protobuf:"bytes,4,opt,name=asset,proto3" json:"asset,omitempty"`
	// The amount to be taken from the source account
	Amount string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	// The reference to be attached to the transfer
	Reference string `protobuf:"bytes,6,opt,name=reference,proto3" json:"reference,omitempty"`
	// Specific details of the transfer
	//
	// Types that are valid to be assigned to Kind:
	//	*Transfer_OneOff
	//	*Transfer_Recurring
	Kind                 isTransfer_Kind `protobuf_oneof:"kind"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Transfer) Reset()         { *m = Transfer{} }
func (m *Transfer) String() string { return proto.CompactTextString(m) }
func (*Transfer) ProtoMessage()    {}
func (*Transfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{13}
}

func (m *Transfer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transfer.Unmarshal(m, b)
}
func (m *Transfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transfer.Marshal(b, m, deterministic)
}
func (m *Transfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transfer.Merge(m, src)
}
func (m *Transfer) XXX_Size() int {
	return xxx_messageInfo_Transfer.Size(m)
}
func (m *Transfer) XXX_DiscardUnknown() {
	xxx_messageInfo_Transfer.DiscardUnknown(m)
}

var xxx_messageInfo_Transfer proto.InternalMessageInfo

func (m *Transfer) GetFromAccountType() vega.AccountType {
	if m != nil {
		return m.FromAccountType
	}
	return vega.AccountType_ACCOUNT_TYPE_UNSPECIFIED
}

func (m *Transfer) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Transfer) GetToAccountType() vega.AccountType {
	if m != nil {
		return m.ToAccountType
	}
	return vega.AccountType_ACCOUNT_TYPE_UNSPECIFIED
}

func (m *Transfer) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *Transfer) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *Transfer) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

type isTransfer_Kind interface {
	isTransfer_Kind()
}

type Transfer_OneOff struct {
	OneOff *OneOffTransfer `protobuf:"bytes,101,opt,name=one_off,json=oneOff,proto3,oneof"`
}

type Transfer_Recurring struct {
	Recurring *RecurringTransfer `protobuf:"bytes,102,opt,name=recurring,proto3,oneof"`
}

func (*Transfer_OneOff) isTransfer_Kind() {}

func (*Transfer_Recurring) isTransfer_Kind() {}

func (m *Transfer) GetKind() isTransfer_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (m *Transfer) GetOneOff() *OneOffTransfer {
	if x, ok := m.GetKind().(*Transfer_OneOff); ok {
		return x.OneOff
	}
	return nil
}

func (m *Transfer) GetRecurring() *RecurringTransfer {
	if x, ok := m.GetKind().(*Transfer_Recurring); ok {
		return x.Recurring
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Transfer) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Transfer_OneOff)(nil),
		(*Transfer_Recurring)(nil),
	}
}

// Specific details for a one off transfer
type OneOffTransfer struct {
	// A unix timestamp in second. Time at which the
	// transfer should be delivered in the to account
	DeliverOn            int64    `protobuf:"varint,1,opt,name=deliver_on,json=deliverOn,proto3" json:"deliver_on,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OneOffTransfer) Reset()         { *m = OneOffTransfer{} }
func (m *OneOffTransfer) String() string { return proto.CompactTextString(m) }
func (*OneOffTransfer) ProtoMessage()    {}
func (*OneOffTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{14}
}

func (m *OneOffTransfer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneOffTransfer.Unmarshal(m, b)
}
func (m *OneOffTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneOffTransfer.Marshal(b, m, deterministic)
}
func (m *OneOffTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneOffTransfer.Merge(m, src)
}
func (m *OneOffTransfer) XXX_Size() int {
	return xxx_messageInfo_OneOffTransfer.Size(m)
}
func (m *OneOffTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_OneOffTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_OneOffTransfer proto.InternalMessageInfo

func (m *OneOffTransfer) GetDeliverOn() int64 {
	if m != nil {
		return m.DeliverOn
	}
	return 0
}

// Specific details for a recurring transfer
type RecurringTransfer struct {
	// The first epoch from which this transfer shall be paid
	StartEpoch uint64 `protobuf:"varint,1,opt,name=start_epoch,json=startEpoch,proto3" json:"start_epoch,omitempty"`
	// The last epoch at which this transfer shall be paid
	EndEpoch *vega.Uint64Value `protobuf:"bytes,2,opt,name=end_epoch,json=endEpoch,proto3" json:"end_epoch,omitempty"`
	// factor needs to be > 0
	Factor               string   `protobuf:"bytes,3,opt,name=factor,proto3" json:"factor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecurringTransfer) Reset()         { *m = RecurringTransfer{} }
func (m *RecurringTransfer) String() string { return proto.CompactTextString(m) }
func (*RecurringTransfer) ProtoMessage()    {}
func (*RecurringTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{15}
}

func (m *RecurringTransfer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecurringTransfer.Unmarshal(m, b)
}
func (m *RecurringTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecurringTransfer.Marshal(b, m, deterministic)
}
func (m *RecurringTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecurringTransfer.Merge(m, src)
}
func (m *RecurringTransfer) XXX_Size() int {
	return xxx_messageInfo_RecurringTransfer.Size(m)
}
func (m *RecurringTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_RecurringTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_RecurringTransfer proto.InternalMessageInfo

func (m *RecurringTransfer) GetStartEpoch() uint64 {
	if m != nil {
		return m.StartEpoch
	}
	return 0
}

func (m *RecurringTransfer) GetEndEpoch() *vega.Uint64Value {
	if m != nil {
		return m.EndEpoch
	}
	return nil
}

func (m *RecurringTransfer) GetFactor() string {
	if m != nil {
		return m.Factor
	}
	return ""
}

// A request for cancelling a recurring transfer
type CancelTransfer struct {
	// The ID of the transfer to cancel
	TransferId           string   `protobuf:"bytes,1,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelTransfer) Reset()         { *m = CancelTransfer{} }
func (m *CancelTransfer) String() string { return proto.CompactTextString(m) }
func (*CancelTransfer) ProtoMessage()    {}
func (*CancelTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c3a53c66a940c51, []int{16}
}

func (m *CancelTransfer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelTransfer.Unmarshal(m, b)
}
func (m *CancelTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelTransfer.Marshal(b, m, deterministic)
}
func (m *CancelTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelTransfer.Merge(m, src)
}
func (m *CancelTransfer) XXX_Size() int {
	return xxx_messageInfo_CancelTransfer.Size(m)
}
func (m *CancelTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_CancelTransfer proto.InternalMessageInfo

func (m *CancelTransfer) GetTransferId() string {
	if m != nil {
		return m.TransferId
	}
	return ""
}

func init() {
	proto.RegisterEnum("vega.commands.v1.UndelegateSubmission_Method", UndelegateSubmission_Method_name, UndelegateSubmission_Method_value)
	proto.RegisterType((*Int64Value)(nil), "vega.commands.v1.Int64Value")
	proto.RegisterType((*OrderSubmission)(nil), "vega.commands.v1.OrderSubmission")
	proto.RegisterType((*OrderCancellation)(nil), "vega.commands.v1.OrderCancellation")
	proto.RegisterType((*OrderAmendment)(nil), "vega.commands.v1.OrderAmendment")
	proto.RegisterType((*LiquidityProvisionSubmission)(nil), "vega.commands.v1.LiquidityProvisionSubmission")
	proto.RegisterType((*LiquidityProvisionCancellation)(nil), "vega.commands.v1.LiquidityProvisionCancellation")
	proto.RegisterType((*LiquidityProvisionAmendment)(nil), "vega.commands.v1.LiquidityProvisionAmendment")
	proto.RegisterType((*WithdrawSubmission)(nil), "vega.commands.v1.WithdrawSubmission")
	proto.RegisterType((*ProposalSubmission)(nil), "vega.commands.v1.ProposalSubmission")
	proto.RegisterType((*VoteSubmission)(nil), "vega.commands.v1.VoteSubmission")
	proto.RegisterType((*DelegateSubmission)(nil), "vega.commands.v1.DelegateSubmission")
	proto.RegisterType((*UndelegateSubmission)(nil), "vega.commands.v1.UndelegateSubmission")
	proto.RegisterType((*RestoreSnapshot)(nil), "vega.commands.v1.RestoreSnapshot")
	proto.RegisterType((*Transfer)(nil), "vega.commands.v1.Transfer")
	proto.RegisterType((*OneOffTransfer)(nil), "vega.commands.v1.OneOffTransfer")
	proto.RegisterType((*RecurringTransfer)(nil), "vega.commands.v1.RecurringTransfer")
	proto.RegisterType((*CancelTransfer)(nil), "vega.commands.v1.CancelTransfer")
}

func init() { proto.RegisterFile("vega/commands/v1/commands.proto", fileDescriptor_9c3a53c66a940c51) }

var fileDescriptor_9c3a53c66a940c51 = []byte{
	// 1112 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x56, 0x7b, 0x6f, 0x1b, 0x45,
	0x10, 0xaf, 0x9f, 0x89, 0xc7, 0xad, 0xed, 0x6c, 0xdb, 0xf4, 0xe8, 0xd3, 0x5c, 0x01, 0x99, 0xd7,
	0x45, 0x35, 0x15, 0x12, 0xaa, 0x2a, 0xe1, 0x26, 0x0e, 0xb1, 0xa0, 0x71, 0x74, 0x49, 0x5a, 0x81,
	0x84, 0x4e, 0x97, 0xdb, 0xb1, 0x73, 0xaa, 0xef, 0xf6, 0xb8, 0x5b, 0x9b, 0x04, 0xf1, 0x19, 0xf9,
	0x08, 0x7c, 0x00, 0x24, 0x90, 0xf8, 0x06, 0x68, 0xe7, 0xf6, 0xe2, 0xbb, 0x18, 0x22, 0x1e, 0xff,
	0xf1, 0xdf, 0xce, 0x6f, 0x66, 0x7f, 0xbb, 0x33, 0xbf, 0xd9, 0x07, 0x3c, 0x5a, 0xe0, 0xd4, 0xdd,
	0xf2, 0x44, 0x10, 0xb8, 0x21, 0x4f, 0xb6, 0x16, 0x4f, 0x2e, 0xc6, 0x56, 0x14, 0x0b, 0x29, 0x58,
	0x47, 0x05, 0x58, 0x17, 0xe0, 0xe2, 0xc9, 0xdd, 0xdb, 0x34, 0x65, 0x2a, 0x16, 0x18, 0x87, 0x6e,
	0xe8, 0x61, 0x1a, 0x78, 0xb7, 0x4d, 0x30, 0x45, 0x13, 0x60, 0x9a, 0x00, 0xa3, 0x50, 0x7e, 0xfa,
	0xf4, 0x95, 0x3b, 0x9b, 0x23, 0xbb, 0x05, 0xb5, 0x85, 0x1a, 0x18, 0xa5, 0x6e, 0xa9, 0x57, 0xb1,
	0x53, 0xc3, 0xfc, 0xa9, 0x0c, 0xed, 0x71, 0xcc, 0x31, 0x3e, 0x9c, 0x9f, 0x04, 0x7e, 0x92, 0xf8,
	0x22, 0x64, 0xf7, 0xa0, 0x11, 0xb8, 0xf1, 0x1b, 0x94, 0x8e, 0xcf, 0x29, 0xba, 0x61, 0xaf, 0xa7,
	0xc0, 0x88, 0x2b, 0x9a, 0x28, 0xf6, 0x3d, 0x34, 0xca, 0xe4, 0x48, 0x0d, 0xc6, 0xa0, 0x9a, 0xf8,
	0x3f, 0xa0, 0x51, 0xe9, 0x96, 0x7a, 0x55, 0x9b, 0xc6, 0xec, 0xa1, 0xc2, 0x38, 0x1a, 0xd5, 0x6e,
	0xa9, 0xd7, 0xea, 0x83, 0x45, 0x3b, 0x3b, 0xf4, 0x39, 0xda, 0x84, 0xb3, 0x67, 0x70, 0x43, 0xfa,
	0x01, 0x3a, 0x7e, 0xe8, 0x4c, 0x44, 0xec, 0xa1, 0x51, 0xa3, 0xc0, 0x3b, 0x69, 0x20, 0x6d, 0xca,
	0x3a, 0xf2, 0x03, 0x1c, 0x85, 0xbb, 0xca, 0x6d, 0x37, 0xe5, 0xd2, 0x60, 0x0f, 0x00, 0xf0, 0x2c,
	0xf2, 0x63, 0x4c, 0x1c, 0x57, 0x1a, 0x75, 0x4a, 0xa9, 0xa1, 0x91, 0x81, 0x64, 0xef, 0x40, 0x55,
	0x9e, 0x47, 0x68, 0xac, 0x11, 0x65, 0xa7, 0x40, 0x79, 0x1e, 0xa1, 0x4d, 0x5e, 0x76, 0x1f, 0x1a,
	0x31, 0x4e, 0x30, 0xc6, 0xd0, 0x43, 0x63, 0x9d, 0xf2, 0x59, 0x02, 0xec, 0x29, 0x5c, 0x8f, 0x70,
	0x3a, 0x45, 0xee, 0x08, 0x35, 0xd1, 0x68, 0x74, 0x4b, 0xbd, 0x66, 0x7f, 0x23, 0xe5, 0x3a, 0x20,
	0x0f, 0x31, 0xda, 0xcd, 0x68, 0x69, 0x98, 0x5f, 0xc2, 0x06, 0x0d, 0xb6, 0x95, 0x32, 0xb3, 0x99,
	0x2b, 0x55, 0x45, 0xdf, 0x82, 0x75, 0xe2, 0x58, 0x16, 0x74, 0x8d, 0xec, 0x11, 0x2f, 0x16, 0xbb,
	0x5c, 0x2c, 0xb6, 0xf9, 0x73, 0x19, 0x5a, 0xc4, 0x36, 0x08, 0x30, 0xe4, 0x01, 0x86, 0xf2, 0xdf,
	0x52, 0xb1, 0xb7, 0x33, 0xdd, 0x2a, 0x94, 0x46, 0x53, 0xa7, 0xa1, 0xa0, 0x4c, 0xc4, 0x07, 0x00,
	0x4a, 0x38, 0x87, 0xe3, 0x4c, 0xba, 0x24, 0x5b, 0xc5, 0x6e, 0x28, 0x64, 0x47, 0x01, 0xcc, 0x2a,
	0x94, 0xbc, 0x46, 0x34, 0xed, 0x94, 0x46, 0xc9, 0x94, 0x48, 0x37, 0x88, 0xf2, 0x1a, 0xac, 0xe8,
	0x5b, 0xff, 0x07, 0xfa, 0x3e, 0x86, 0x1b, 0x59, 0xf1, 0x27, 0x93, 0x04, 0x25, 0x29, 0xd9, 0xb0,
	0xb5, 0x22, 0x63, 0xc2, 0xd8, 0xe7, 0xd0, 0xd1, 0x41, 0x45, 0x19, 0x5b, 0xfd, 0xdb, 0x79, 0x95,
	0xec, 0xcc, 0x69, 0xb7, 0xa3, 0x22, 0x60, 0xfe, 0x56, 0x82, 0xfb, 0x5f, 0xf9, 0xdf, 0xcd, 0x7d,
	0xee, 0xcb, 0xf3, 0x83, 0x58, 0x2c, 0x7c, 0x75, 0x02, 0xfe, 0xee, 0x59, 0xf8, 0x10, 0x36, 0xd4,
	0xb9, 0xf4, 0xa5, 0x52, 0xc6, 0x71, 0x03, 0x31, 0x0f, 0xa5, 0x2e, 0x7c, 0x67, 0xe9, 0x18, 0x10,
	0xce, 0x3a, 0x50, 0x99, 0x60, 0x5a, 0xfe, 0x86, 0xad, 0x86, 0xec, 0x03, 0xa8, 0x25, 0x38, 0x9b,
	0x25, 0x46, 0xb5, 0x5b, 0xe9, 0x35, 0xfb, 0xb7, 0xd2, 0x3d, 0x5f, 0x6c, 0x27, 0x6d, 0xae, 0x34,
	0x84, 0xf5, 0xa0, 0x7a, 0x32, 0x3f, 0x4f, 0x8c, 0xda, 0x15, 0xa1, 0x14, 0x51, 0x6c, 0xea, 0xfa,
	0xa5, 0xa6, 0x36, 0x9f, 0xc3, 0xc3, 0xd5, 0x7c, 0x0b, 0xbd, 0x7a, 0x55, 0xc6, 0xe6, 0xaf, 0x25,
	0xb8, 0xb7, 0x3a, 0x7f, 0xd9, 0x9d, 0xff, 0xb7, 0x72, 0x4d, 0x81, 0xbd, 0xf6, 0xe5, 0x29, 0x8f,
	0xdd, 0xef, 0x73, 0x4d, 0xb1, 0x09, 0x75, 0xbd, 0xfb, 0x34, 0x45, 0x6d, 0xa9, 0xbb, 0xd1, 0x4d,
	0x54, 0xb3, 0xea, 0xbb, 0x91, 0x0c, 0xf6, 0x18, 0x2a, 0x78, 0x26, 0xf5, 0xb9, 0xd3, 0xd7, 0x47,
	0x46, 0x3a, 0x3c, 0x93, 0xb6, 0xf2, 0x9a, 0xdf, 0x02, 0x3b, 0x88, 0x45, 0x24, 0x12, 0x77, 0x96,
	0x5b, 0xa8, 0xb0, 0xb9, 0xd2, 0xe5, 0x0b, 0xea, 0x7d, 0xa8, 0x49, 0x8c, 0x83, 0x84, 0x96, 0x6b,
	0xf6, 0x6f, 0x66, 0x47, 0x3a, 0xa5, 0x39, 0x52, 0x2e, 0x3b, 0x8d, 0x30, 0xbf, 0x86, 0xd6, 0x2b,
	0x21, 0x31, 0x47, 0xfd, 0x08, 0x9a, 0x91, 0x8e, 0x5c, 0x6a, 0x05, 0x19, 0x34, 0xe2, 0xec, 0xbd,
	0xec, 0xbd, 0x28, 0xe7, 0xef, 0x50, 0xc5, 0x62, 0xd1, 0x83, 0x92, 0xbd, 0x20, 0x43, 0x60, 0x3b,
	0x38, 0xc3, 0xa9, 0x5b, 0xa0, 0xbf, 0x03, 0x6b, 0xa1, 0xe0, 0xb8, 0xa4, 0xae, 0x2b, 0x73, 0xc4,
	0x73, 0xb5, 0x2b, 0xe7, 0x6b, 0x67, 0xfe, 0x5e, 0x82, 0x5b, 0xc7, 0x21, 0xff, 0xef, 0x4c, 0x6c,
	0x08, 0xf5, 0x00, 0xe5, 0xa9, 0xe0, 0x54, 0xf2, 0x56, 0xff, 0x63, 0xeb, 0xf2, 0x0b, 0x6a, 0xfd,
	0xd9, 0x42, 0xd6, 0x4b, 0x9a, 0x64, 0xeb, 0xc9, 0xa6, 0x0b, 0xf5, 0x14, 0x61, 0x9b, 0xc0, 0x5e,
	0x0e, 0x8f, 0xf6, 0xc6, 0x3b, 0xce, 0xf1, 0xfe, 0xe1, 0xc1, 0x70, 0x7b, 0xb4, 0x3b, 0x1a, 0xee,
	0x74, 0xae, 0xb1, 0x16, 0x80, 0xc6, 0xf7, 0xc7, 0xaf, 0x3b, 0x25, 0x76, 0x17, 0x36, 0xb5, 0x3d,
	0x38, 0x72, 0x86, 0xfb, 0x3b, 0xce, 0x78, 0xd7, 0x19, 0x1e, 0x8c, 0xb7, 0xf7, 0x3a, 0x65, 0x76,
	0x13, 0xda, 0xda, 0x37, 0xda, 0x77, 0x06, 0xfb, 0x5f, 0x0c, 0xed, 0x4e, 0xc5, 0x7c, 0x17, 0xda,
	0x36, 0x26, 0x52, 0xc4, 0x78, 0x18, 0xba, 0x51, 0x72, 0x2a, 0xa4, 0x7a, 0x48, 0xb9, 0x2b, 0x5d,
	0x4a, 0xf5, 0xba, 0x4d, 0x63, 0xf3, 0x97, 0x32, 0xac, 0x1f, 0xc5, 0x6e, 0x98, 0x4c, 0x30, 0x66,
	0xcf, 0x61, 0x63, 0x12, 0x8b, 0xc0, 0x71, 0x3d, 0x4f, 0x65, 0xeb, 0xd0, 0x33, 0x57, 0xa2, 0x44,
	0x75, 0x6f, 0x0d, 0x52, 0x0f, 0xbd, 0x73, 0x6d, 0x15, 0x9b, 0x03, 0x58, 0x0b, 0xca, 0x52, 0xe8,
	0x82, 0x95, 0xa5, 0x60, 0x9f, 0x41, 0x5b, 0x8a, 0x22, 0x59, 0xe5, 0xaf, 0xc8, 0x6e, 0x48, 0x91,
	0xa7, 0xba, 0xe8, 0xf6, 0x6a, 0xbe, 0xdb, 0x97, 0xaa, 0xd4, 0x0a, 0xaa, 0x5c, 0x79, 0xce, 0xd8,
	0x33, 0x58, 0x13, 0x21, 0xaa, 0xbb, 0xde, 0x40, 0x6a, 0xe6, 0xee, 0xaa, 0x68, 0xe3, 0x10, 0xc7,
	0x93, 0x49, 0x56, 0x88, 0xbd, 0x6b, 0x76, 0x5d, 0x10, 0xc2, 0xb6, 0x15, 0xb5, 0x37, 0x8f, 0x63,
	0x3f, 0x9c, 0x1a, 0x13, 0x9a, 0xfe, 0x78, 0x75, 0xba, 0x9d, 0x85, 0xe4, 0x18, 0x96, 0xf3, 0x5e,
	0xd4, 0xa1, 0xfa, 0xc6, 0x0f, 0xb9, 0xb9, 0x05, 0xad, 0xe2, 0x42, 0xea, 0x59, 0xe4, 0x38, 0xf3,
	0x17, 0x18, 0x3b, 0x22, 0xd4, 0xbf, 0xa7, 0x86, 0x46, 0xc6, 0xa1, 0xf9, 0x23, 0x6c, 0xac, 0x50,
	0xab, 0xd3, 0x95, 0x48, 0x37, 0x96, 0x0e, 0x46, 0xc2, 0x3b, 0xa5, 0x49, 0x55, 0x1b, 0x08, 0x1a,
	0x2a, 0x84, 0x59, 0xd0, 0xc0, 0x90, 0x6b, 0x77, 0x39, 0x7f, 0x35, 0x1c, 0xfb, 0x17, 0x7f, 0x36,
	0x7b, 0x1d, 0x43, 0x9e, 0xc6, 0x6f, 0x42, 0x7d, 0xe2, 0x7a, 0x52, 0xc4, 0xfa, 0x46, 0xd4, 0x96,
	0xf9, 0x04, 0x5a, 0xe9, 0xed, 0x9d, 0x5f, 0x5a, 0xea, 0x71, 0xee, 0x60, 0x67, 0xd0, 0x88, 0xbf,
	0xb0, 0xbe, 0xf9, 0xc8, 0x13, 0x1c, 0x69, 0x35, 0xfa, 0x28, 0x7a, 0x62, 0x66, 0xf9, 0x62, 0x8b,
	0xc6, 0xc9, 0xd6, 0xe5, 0xff, 0xe8, 0x49, 0x9d, 0x1c, 0x9f, 0xfc, 0x11, 0x00, 0x00, 0xff, 0xff,
	0x76, 0xd2, 0xa9, 0x8e, 0xaa, 0x0a, 0x00, 0x00,
}
